ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_idiv
  18              		.section	.text.ADC_Init,"ax",%progbits
  19              		.align	2
  20              		.global	ADC_Init
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_Init, %function
  24              	ADC_Init:
  25              	.LFB3:
  26              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 2


  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u, 0x00000400u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 3


  89:.\Generated_Source\PSoC4/ADC.c **** *
  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  27              		.loc 1 95 0
  28              		.cfi_startproc
  29 0000 10B5     		push	{r4, lr}
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 4


 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  33              		.loc 1 172 0
  34 0002 0F20     		mov	r0, #15
  35 0004 0321     		mov	r1, #3
  36 0006 FFF7FEFF 		bl	CyIntSetPriority
  37              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  38              		.loc 1 173 0
  39 000a 0F20     		mov	r0, #15
  40 000c 4F49     		ldr	r1, .L14
  41 000e FFF7FEFF 		bl	CyIntSetVector
  42              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  43              		.loc 1 177 0
  44 0012 0122     		mov	r2, #1
  45 0014 4E4B     		ldr	r3, .L14+4
  46 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  47              		.loc 1 180 0
  48 0018 4E4B     		ldr	r3, .L14+8
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 5


  49 001a 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  50              		.loc 1 178 0
  51 001c 002B     		cmp	r3, #0
  52 001e 01DA     		bge	.L12
  53 0020 4D49     		ldr	r1, .L14+12
  54 0022 00E0     		b	.L2
  55              	.L12:
  56 0024 4D49     		ldr	r1, .L14+16
  57              	.L2:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  58              		.loc 1 178 0 is_stmt 0 discriminator 4
  59 0026 4E4A     		ldr	r2, .L14+20
  60 0028 1368     		ldr	r3, [r2]
  61 002a 0B43     		orr	r3, r1
  62 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  63              		.loc 1 182 0 is_stmt 1 discriminator 4
  64 002e 4D4A     		ldr	r2, .L14+24
  65 0030 4D4B     		ldr	r3, .L14+28
  66 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  67              		.loc 1 183 0 discriminator 4
  68 0034 4D4A     		ldr	r2, .L14+32
  69 0036 4E4B     		ldr	r3, .L14+36
  70 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  71              		.loc 1 184 0 discriminator 4
  72 003a 0023     		mov	r3, #0
  73 003c 4D4A     		ldr	r2, .L14+40
  74 003e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  75              		.loc 1 185 0 discriminator 4
  76 0040 4D4A     		ldr	r2, .L14+44
  77 0042 4E49     		ldr	r1, .L14+48
  78 0044 0A60     		str	r2, [r1]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  79              		.loc 1 186 0 discriminator 4
  80 0046 4E49     		ldr	r1, .L14+52
  81 0048 0A60     		str	r2, [r1]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  82              		.loc 1 190 0 discriminator 4
  83 004a 4E4A     		ldr	r2, .L14+56
  84 004c 1168     		ldr	r1, [r2]
  85 004e 8020     		mov	r0, #128
  86 0050 4002     		lsl	r0, r0, #9
  87 0052 0143     		orr	r1, r0
  88 0054 1160     		str	r1, [r2]
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
  89              		.loc 1 193 0 discriminator 4
  90 0056 4C49     		ldr	r1, .L14+60
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 6


  91 0058 0A68     		ldr	r2, [r1]
  92 005a 0243     		orr	r2, r0
  93 005c 0A60     		str	r2, [r1]
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  94              		.loc 1 197 0 discriminator 4
  95 005e 4B4A     		ldr	r2, .L14+64
  96 0060 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  97              		.loc 1 198 0 discriminator 4
  98 0062 4B4A     		ldr	r2, .L14+68
  99 0064 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 100              		.loc 1 199 0 discriminator 4
 101 0066 1122     		mov	r2, #17
 102 0068 4A4B     		ldr	r3, .L14+72
 103 006a 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 104              		.loc 1 206 0 discriminator 4
 105 006c 4A4A     		ldr	r2, .L14+76
 106 006e 1168     		ldr	r1, [r2]
 107              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 108              		.loc 1 221 0 discriminator 4
 109 0070 4A4B     		ldr	r3, .L14+80
 110 0072 0B40     		and	r3, r1
 111 0074 8021     		mov	r1, #128
 112              	.LVL3:
 113 0076 8905     		lsl	r1, r1, #22
 114 0078 0B43     		orr	r3, r1
 115              	.LVL4:
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 7


 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 116              		.loc 1 226 0 discriminator 4
 117 007a 1360     		str	r3, [r2]
 118              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 119              		.loc 1 232 0 discriminator 4
 120 007c 0024     		mov	r4, #0
 121 007e 62E0     		b	.L3
 122              	.LVL6:
 123              	.L11:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 124              		.loc 1 234 0
 125 0080 474A     		ldr	r2, .L14+84
 126 0082 A300     		lsl	r3, r4, #2
 127 0084 9958     		ldr	r1, [r3, r2]
 128 0086 DC23     		mov	r3, #220
 129 0088 9B01     		lsl	r3, r3, #6
 130 008a 0B40     		and	r3, r1
 131              	.LVL7:
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 132              		.loc 1 236 0
 133 008c 1219     		add	r2, r2, r4
 134 008e 127A     		ldrb	r2, [r2, #8]
 135 0090 1343     		orr	r3, r2
 136              	.LVL8:
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 137              		.loc 1 250 0
 138 0092 002C     		cmp	r4, #0
 139 0094 1CD1     		bne	.L4
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 140              		.loc 1 253 0
 141 0096 A200     		lsl	r2, r4, #2
 142 0098 4248     		ldr	r0, .L14+88
 143 009a 8446     		mov	ip, r0
 144 009c 6244     		add	r2, r2, ip
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 8


 145 009e 1360     		str	r3, [r2]
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 146              		.loc 1 255 0
 147 00a0 CB07     		lsl	r3, r1, #31
 148 00a2 07D5     		bpl	.L5
 149              	.LVL9:
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 150              		.loc 1 257 0
 151 00a4 394A     		ldr	r2, .L14+64
 152              	.LVL10:
 153 00a6 1168     		ldr	r1, [r2]
 154 00a8 8023     		mov	r3, #128
 155 00aa 5B02     		lsl	r3, r3, #9
 156 00ac A340     		lsl	r3, r3, r4
 157 00ae 1B0C     		lsr	r3, r3, #16
 158 00b0 0B43     		orr	r3, r1
 159 00b2 1360     		str	r3, [r2]
 160              	.LVL11:
 161              	.L5:
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 162              		.loc 1 260 0
 163 00b4 A300     		lsl	r3, r4, #2
 164 00b6 3A4A     		ldr	r2, .L14+84
 165              	.LVL12:
 166 00b8 9B58     		ldr	r3, [r3, r2]
 167 00ba 9B07     		lsl	r3, r3, #30
 168 00bc 21D5     		bpl	.L6
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 169              		.loc 1 262 0
 170 00be 344A     		ldr	r2, .L14+68
 171              	.LVL13:
 172 00c0 1168     		ldr	r1, [r2]
 173 00c2 8023     		mov	r3, #128
 174 00c4 5B02     		lsl	r3, r3, #9
 175 00c6 A340     		lsl	r3, r3, r4
 176 00c8 1B0C     		lsr	r3, r3, #16
 177 00ca 0B43     		orr	r3, r1
 178 00cc 1360     		str	r3, [r2]
 179 00ce 18E0     		b	.L6
 180              	.LVL14:
 181              	.L4:
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 182              		.loc 1 268 0
 183 00d0 8022     		mov	r2, #128
 184 00d2 D205     		lsl	r2, r2, #23
 185 00d4 1343     		orr	r3, r2
 186              	.LVL15:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 9


 187 00d6 344A     		ldr	r2, .L14+92
 188 00d8 1360     		str	r3, [r2]
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 189              		.loc 1 270 0
 190 00da A300     		lsl	r3, r4, #2
 191 00dc 304A     		ldr	r2, .L14+84
 192              	.LVL16:
 193 00de 9B58     		ldr	r3, [r3, r2]
 194 00e0 DB07     		lsl	r3, r3, #31
 195 00e2 04D5     		bpl	.L7
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 196              		.loc 1 272 0
 197 00e4 2B4A     		ldr	r2, .L14+72
 198              	.LVL17:
 199 00e6 1168     		ldr	r1, [r2]
 200              	.LVL18:
 201 00e8 2023     		mov	r3, #32
 202 00ea 0B43     		orr	r3, r1
 203 00ec 1360     		str	r3, [r2]
 204              	.L7:
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 205              		.loc 1 275 0
 206 00ee A300     		lsl	r3, r4, #2
 207 00f0 2B4A     		ldr	r2, .L14+84
 208              	.LVL19:
 209 00f2 9B58     		ldr	r3, [r3, r2]
 210 00f4 9B07     		lsl	r3, r3, #30
 211 00f6 04D5     		bpl	.L6
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 212              		.loc 1 277 0
 213 00f8 264A     		ldr	r2, .L14+72
 214              	.LVL20:
 215 00fa 1168     		ldr	r1, [r2]
 216 00fc 4023     		mov	r3, #64
 217 00fe 0B43     		orr	r3, r1
 218 0100 1360     		str	r3, [r2]
 219              	.L6:
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 220              		.loc 1 282 0
 221 0102 A300     		lsl	r3, r4, #2
 222 0104 264A     		ldr	r2, .L14+84
 223              	.LVL21:
 224 0106 9B58     		ldr	r3, [r3, r2]
 225 0108 9A05     		lsl	r2, r3, #22
 226 010a 02D5     		bpl	.L13
 227              	.LVL22:
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 10


 228              		.loc 1 284 0
 229 010c 8020     		mov	r0, #128
 230 010e 4000     		lsl	r0, r0, #1
 231 0110 01E0     		b	.L8
 232              	.L13:
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 233              		.loc 1 288 0
 234 0112 8020     		mov	r0, #128
 235 0114 4001     		lsl	r0, r0, #5
 236              	.L8:
 237              	.LVL23:
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 238              		.loc 1 291 0
 239 0116 DB05     		lsl	r3, r3, #23
 240 0118 04D4     		bmi	.L9
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 241              		.loc 1 298 0
 242 011a 6300     		lsl	r3, r4, #1
 243 011c 0021     		mov	r1, #0
 244 011e 234A     		ldr	r2, .L14+96
 245 0120 9952     		strh	r1, [r3, r2]
 246 0122 03E0     		b	.L10
 247              	.L9:
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 248              		.loc 1 307 0
 249 0124 6300     		lsl	r3, r4, #1
 250 0126 0021     		mov	r1, #0
 251 0128 204A     		ldr	r2, .L14+96
 252 012a 9952     		strh	r1, [r3, r2]
 253              	.L10:
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 254              		.loc 1 311 0 discriminator 2
 255 012c 204B     		ldr	r3, .L14+100
 256 012e 5843     		mul	r0, r3
 257              	.LVL24:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 11


 258 0130 204B     		ldr	r3, .L14+104
 259 0132 9C46     		mov	ip, r3
 260 0134 6044     		add	r0, r0, ip
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 261              		.loc 1 312 0 discriminator 2
 262 0136 2049     		ldr	r1, .L14+108
 263 0138 FFF7FEFF 		bl	__aeabi_idiv
 264              	.LVL25:
 311:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 265              		.loc 1 311 0 discriminator 2
 266 013c 00B2     		sxth	r0, r0
 267 013e A200     		lsl	r2, r4, #2
 268 0140 1E4B     		ldr	r3, .L14+112
 269 0142 D050     		str	r0, [r2, r3]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 270              		.loc 1 232 0 discriminator 2
 271 0144 0134     		add	r4, r4, #1
 272              	.LVL26:
 273              	.L3:
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 274              		.loc 1 232 0 is_stmt 0 discriminator 1
 275 0146 012C     		cmp	r4, #1
 276 0148 9AD9     		bls	.L11
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 277              		.loc 1 314 0 is_stmt 1
 278              		@ sp needed
 279              	.LVL27:
 280 014a 10BD     		pop	{r4, pc}
 281              	.L15:
 282              		.align	2
 283              	.L14:
 284 014c 00000000 		.word	ADC_ISR
 285 0150 20003A40 		.word	1077542944
 286 0154 80033A40 		.word	1077543808
 287 0158 70201013 		.word	319823984
 288 015c 70200013 		.word	318775408
 289 0160 00003A40 		.word	1077542912
 290 0164 AC000A80 		.word	-2146828116
 291 0168 04003A40 		.word	1077542916
 292 016c 0000FF07 		.word	134152192
 293 0170 18003A40 		.word	1077542936
 294 0174 1C003A40 		.word	1077542940
 295 0178 04000400 		.word	262148
 296 017c 10003A40 		.word	1077542928
 297 0180 14003A40 		.word	1077542932
 298 0184 00033A40 		.word	1077543680
 299 0188 40033A40 		.word	1077543744
 300 018c 28023A40 		.word	1077543464
 301 0190 38023A40 		.word	1077543480
 302 0194 18023A40 		.word	1077543448
 303 0198 30003A40 		.word	1077542960
 304 019c FEFFFFDF 		.word	-536870914
 305 01a0 00000000 		.word	.LANCHOR0
 306 01a4 80003A40 		.word	1077543040
 307 01a8 80023A40 		.word	1077543552
 308 01ac 00000000 		.word	ADC_offset
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 12


 309 01b0 10270000 		.word	10000
 310 01b4 E40C0000 		.word	3300
 311 01b8 C8190000 		.word	6600
 312 01bc 00000000 		.word	ADC_countsPer10Volt
 313              		.cfi_endproc
 314              	.LFE3:
 315              		.size	ADC_Init, .-ADC_Init
 316              		.section	.text.ADC_Enable,"ax",%progbits
 317              		.align	2
 318              		.global	ADC_Enable
 319              		.code	16
 320              		.thumb_func
 321              		.type	ADC_Enable, %function
 322              	ADC_Enable:
 323              	.LFB4:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 324              		.loc 1 331 0
 325              		.cfi_startproc
 326 0000 08B5     		push	{r3, lr}
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 330              		.loc 1 332 0
 331 0002 094B     		ldr	r3, .L19
 332 0004 1B68     		ldr	r3, [r3]
 333 0006 002B     		cmp	r3, #0
 334 0008 0CDB     		blt	.L16
 335              	.L18:
 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 336              		.loc 1 336 0 discriminator 1
 337 000a 084B     		ldr	r3, .L19+4
 338 000c 1B68     		ldr	r3, [r3]
 339 000e 002B     		cmp	r3, #0
 340 0010 FBDB     		blt	.L18
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 13


 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 341              		.loc 1 342 0
 342 0012 054A     		ldr	r2, .L19
 343 0014 1368     		ldr	r3, [r2]
 344 0016 8021     		mov	r1, #128
 345 0018 0906     		lsl	r1, r1, #24
 346 001a 0B43     		orr	r3, r1
 347 001c 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 348              		.loc 1 345 0
 349 001e 0A20     		mov	r0, #10
 350 0020 FFF7FEFF 		bl	CyDelayUs
 351              	.LVL28:
 352              	.L16:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 353              		.loc 1 347 0
 354              		@ sp needed
 355 0024 08BD     		pop	{r3, pc}
 356              	.L20:
 357 0026 C046     		.align	2
 358              	.L19:
 359 0028 00003A40 		.word	1077542912
 360 002c 08023A40 		.word	1077543432
 361              		.cfi_endproc
 362              	.LFE4:
 363              		.size	ADC_Enable, .-ADC_Enable
 364              		.section	.text.ADC_Start,"ax",%progbits
 365              		.align	2
 366              		.global	ADC_Start
 367              		.code	16
 368              		.thumb_func
 369              		.type	ADC_Start, %function
 370              	ADC_Start:
 371              	.LFB2:
  64:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 372              		.loc 1 64 0
 373              		.cfi_startproc
 374 0000 08B5     		push	{r3, lr}
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 3, -8
 377              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC.c ****     {
 378              		.loc 1 66 0
 379 0002 064B     		ldr	r3, .L23
 380 0004 1B78     		ldrb	r3, [r3]
 381 0006 002B     		cmp	r3, #0
 382 0008 04D1     		bne	.L22
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 383              		.loc 1 68 0
 384 000a FFF7FEFF 		bl	ADC_Init
 385              	.LVL29:
  69:.\Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 14


 386              		.loc 1 69 0
 387 000e 0122     		mov	r2, #1
 388 0010 024B     		ldr	r3, .L23
 389 0012 1A70     		strb	r2, [r3]
 390              	.L22:
  71:.\Generated_Source\PSoC4/ADC.c **** }
 391              		.loc 1 71 0
 392 0014 FFF7FEFF 		bl	ADC_Enable
 393              	.LVL30:
  72:.\Generated_Source\PSoC4/ADC.c **** 
 394              		.loc 1 72 0
 395              		@ sp needed
 396 0018 08BD     		pop	{r3, pc}
 397              	.L24:
 398 001a C046     		.align	2
 399              	.L23:
 400 001c 00000000 		.word	.LANCHOR1
 401              		.cfi_endproc
 402              	.LFE2:
 403              		.size	ADC_Start, .-ADC_Start
 404              		.section	.text.ADC_Stop,"ax",%progbits
 405              		.align	2
 406              		.global	ADC_Stop
 407              		.code	16
 408              		.thumb_func
 409              		.type	ADC_Stop, %function
 410              	ADC_Stop:
 411              	.LFB5:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:.\Generated_Source\PSoC4/ADC.c **** {
 412              		.loc 1 366 0
 413              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 414              		.loc 1 367 0
 415 0000 024A     		ldr	r2, .L26
 416 0002 1368     		ldr	r3, [r2]
 417 0004 5B00     		lsl	r3, r3, #1
 418 0006 5B08     		lsr	r3, r3, #1
 419 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 15


 420              		.loc 1 368 0
 421              		@ sp needed
 422 000a 7047     		bx	lr
 423              	.L27:
 424              		.align	2
 425              	.L26:
 426 000c 00003A40 		.word	1077542912
 427              		.cfi_endproc
 428              	.LFE5:
 429              		.size	ADC_Stop, .-ADC_Stop
 430              		.section	.text.ADC_StartConvert,"ax",%progbits
 431              		.align	2
 432              		.global	ADC_StartConvert
 433              		.code	16
 434              		.thumb_func
 435              		.type	ADC_StartConvert, %function
 436              	ADC_StartConvert:
 437              	.LFB6:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 438              		.loc 1 392 0
 439              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 440              		.loc 1 396 0
 441 0000 0122     		mov	r2, #1
 442 0002 014B     		ldr	r3, .L29
 443 0004 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 444              		.loc 1 399 0
 445              		@ sp needed
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 16


 446 0006 7047     		bx	lr
 447              	.L30:
 448              		.align	2
 449              	.L29:
 450 0008 24003A40 		.word	1077542948
 451              		.cfi_endproc
 452              	.LFE6:
 453              		.size	ADC_StartConvert, .-ADC_StartConvert
 454              		.section	.text.ADC_StopConvert,"ax",%progbits
 455              		.align	2
 456              		.global	ADC_StopConvert
 457              		.code	16
 458              		.thumb_func
 459              		.type	ADC_StopConvert, %function
 460              	ADC_StopConvert:
 461              	.LFB7:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 462              		.loc 1 417 0
 463              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 464              		.loc 1 421 0
 465              		@ sp needed
 466 0000 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE7:
 469              		.size	ADC_StopConvert, .-ADC_StopConvert
 470 0002 C046     		.section	.text.ADC_IsEndConversion,"ax",%progbits
 471              		.align	2
 472              		.global	ADC_IsEndConversion
 473              		.code	16
 474              		.thumb_func
 475              		.type	ADC_IsEndConversion, %function
 476              	ADC_IsEndConversion:
 477              	.LFB8:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 17


 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 478              		.loc 1 451 0
 479              		.cfi_startproc
 480              	.LVL31:
 481 0000 011C     		mov	r1, r0
 482              	.LVL32:
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 483              		.loc 1 454 0
 484 0002 8307     		lsl	r3, r0, #30
 485 0004 0CD0     		beq	.L39
 486              	.LVL33:
 487              	.L35:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 488              		.loc 1 458 0 discriminator 2
 489 0006 104B     		ldr	r3, .L40
 490 0008 1B68     		ldr	r3, [r3]
 491 000a 0120     		mov	r0, #1
 492 000c 1840     		and	r0, r3
 493              	.LVL34:
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 494              		.loc 1 459 0 discriminator 2
 495 000e 01D1     		bne	.L34
 496              		.loc 1 459 0 is_stmt 0 discriminator 1
 497 0010 8B07     		lsl	r3, r1, #30
 498 0012 F8D4     		bmi	.L35
 499              	.L34:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 18


 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 500              		.loc 1 461 0 is_stmt 1
 501 0014 0028     		cmp	r0, #0
 502 0016 04D0     		beq	.L33
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 503              		.loc 1 464 0
 504 0018 0122     		mov	r2, #1
 505 001a 0B4B     		ldr	r3, .L40
 506 001c 1A60     		str	r2, [r3]
 507 001e 00E0     		b	.L33
 508              	.LVL35:
 509              	.L39:
 452:.\Generated_Source\PSoC4/ADC.c **** 
 510              		.loc 1 452 0
 511 0020 0020     		mov	r0, #0
 512              	.LVL36:
 513              	.L33:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 514              		.loc 1 469 0
 515 0022 0C23     		mov	r3, #12
 516 0024 0B42     		tst	r3, r1
 517 0026 0DD0     		beq	.L36
 518              	.L38:
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 519              		.loc 1 473 0
 520 0028 074B     		ldr	r3, .L40
 521 002a 1A68     		ldr	r2, [r3]
 522 002c 1023     		mov	r3, #16
 523 002e 1A40     		and	r2, r3
 524 0030 1043     		orr	r0, r2
 525              	.LVL37:
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 526              		.loc 1 474 0
 527 0032 0340     		and	r3, r0
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 528              		.loc 1 475 0
 529 0034 01D1     		bne	.L37
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 530              		.loc 1 474 0 discriminator 1
 531 0036 0A07     		lsl	r2, r1, #28
 532 0038 F6D4     		bmi	.L38
 533              	.L37:
 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 534              		.loc 1 477 0
 535 003a 002B     		cmp	r3, #0
 536 003c 02D0     		beq	.L36
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 19


 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 537              		.loc 1 480 0
 538 003e 1022     		mov	r2, #16
 539 0040 014B     		ldr	r3, .L40
 540 0042 1A60     		str	r2, [r3]
 541              	.L36:
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC.c **** }
 542              		.loc 1 486 0
 543              		@ sp needed
 544 0044 7047     		bx	lr
 545              	.L41:
 546 0046 C046     		.align	2
 547              	.L40:
 548 0048 10023A40 		.word	1077543440
 549              		.cfi_endproc
 550              	.LFE8:
 551              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 552              		.section	.text.ADC_GetResult16,"ax",%progbits
 553              		.align	2
 554              		.global	ADC_GetResult16
 555              		.code	16
 556              		.thumb_func
 557              		.type	ADC_GetResult16, %function
 558              	ADC_GetResult16:
 559              	.LFB9:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 560              		.loc 1 505 0
 561              		.cfi_startproc
 562              	.LVL38:
 563 0000 10B5     		push	{r4, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 4, -8
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 20


 566              		.cfi_offset 14, -4
 567 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 568              		.loc 1 509 0
 569 0004 012C     		cmp	r4, #1
 570 0006 02D9     		bls	.L43
 571              		.loc 1 509 0 is_stmt 0 discriminator 1
 572 0008 0020     		mov	r0, #0
 573              	.LVL39:
 574 000a FFF7FEFF 		bl	CyHalt
 575              	.LVL40:
 576              	.L43:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 577              		.loc 1 511 0 is_stmt 1
 578 000e 002C     		cmp	r4, #0
 579 0010 07D1     		bne	.L44
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 580              		.loc 1 513 0
 581 0012 A400     		lsl	r4, r4, #2
 582              	.LVL41:
 583 0014 064B     		ldr	r3, .L46
 584 0016 9C46     		mov	ip, r3
 585 0018 6444     		add	r4, r4, ip
 586 001a 2068     		ldr	r0, [r4]
 587 001c 0004     		lsl	r0, r0, #16
 588 001e 000C     		lsr	r0, r0, #16
 589              	.LVL42:
 590 0020 03E0     		b	.L45
 591              	.LVL43:
 592              	.L44:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 593              		.loc 1 519 0
 594 0022 044B     		ldr	r3, .L46+4
 595 0024 1868     		ldr	r0, [r3]
 596 0026 0004     		lsl	r0, r0, #16
 597 0028 000C     		lsr	r0, r0, #16
 598              	.LVL44:
 599              	.L45:
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 600              		.loc 1 525 0
 601 002a 00B2     		sxth	r0, r0
 602              	.LVL45:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 21


 526:.\Generated_Source\PSoC4/ADC.c **** }
 603              		.loc 1 526 0
 604              		@ sp needed
 605 002c 10BD     		pop	{r4, pc}
 606              	.L47:
 607 002e C046     		.align	2
 608              	.L46:
 609 0030 80013A40 		.word	1077543296
 610 0034 90023A40 		.word	1077543568
 611              		.cfi_endproc
 612              	.LFE9:
 613              		.size	ADC_GetResult16, .-ADC_GetResult16
 614              		.section	.text.ADC_SetChanMask,"ax",%progbits
 615              		.align	2
 616              		.global	ADC_SetChanMask
 617              		.code	16
 618              		.thumb_func
 619              		.type	ADC_SetChanMask, %function
 620              	ADC_SetChanMask:
 621              	.LFB10:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 622              		.loc 1 550 0
 623              		.cfi_startproc
 624              	.LVL46:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 625              		.loc 1 551 0
 626 0000 0123     		mov	r3, #1
 627 0002 1840     		and	r0, r3
 628              	.LVL47:
 629 0004 014B     		ldr	r3, .L49
 630 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
 631              		.loc 1 552 0
 632              		@ sp needed
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 22


 633 0008 7047     		bx	lr
 634              	.L50:
 635 000a C046     		.align	2
 636              	.L49:
 637 000c 20003A40 		.word	1077542944
 638              		.cfi_endproc
 639              	.LFE10:
 640              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 641              		.section	.text.ADC_EnableInjection,"ax",%progbits
 642              		.align	2
 643              		.global	ADC_EnableInjection
 644              		.code	16
 645              		.thumb_func
 646              		.type	ADC_EnableInjection, %function
 647              	ADC_EnableInjection:
 648              	.LFB11:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 649              		.loc 1 572 0
 650              		.cfi_startproc
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 651              		.loc 1 573 0
 652 0000 034A     		ldr	r2, .L52
 653 0002 1368     		ldr	r3, [r2]
 654 0004 8021     		mov	r1, #128
 655 0006 0906     		lsl	r1, r1, #24
 656 0008 0B43     		orr	r3, r1
 657 000a 1360     		str	r3, [r2]
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 658              		.loc 1 574 0
 659              		@ sp needed
 660 000c 7047     		bx	lr
 661              	.L53:
 662 000e C046     		.align	2
 663              	.L52:
 664 0010 80023A40 		.word	1077543552
 665              		.cfi_endproc
 666              	.LFE11:
 667              		.size	ADC_EnableInjection, .-ADC_EnableInjection
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 23


 668              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 669              		.align	2
 670              		.global	ADC_SetLowLimit
 671              		.code	16
 672              		.thumb_func
 673              		.type	ADC_SetLowLimit, %function
 674              	ADC_SetLowLimit:
 675              	.LFB12:
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 676              		.loc 1 594 0
 677              		.cfi_startproc
 678              	.LVL48:
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 679              		.loc 1 595 0
 680 0000 054A     		ldr	r2, .L55
 681 0002 1368     		ldr	r3, [r2]
 682 0004 1B0C     		lsr	r3, r3, #16
 683 0006 1B04     		lsl	r3, r3, #16
 684 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 685              		.loc 1 596 0
 686 000a 1368     		ldr	r3, [r2]
 687 000c 0004     		lsl	r0, r0, #16
 688              	.LVL49:
 689 000e 000C     		lsr	r0, r0, #16
 690 0010 1843     		orr	r0, r3
 691 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 692              		.loc 1 597 0
 693              		@ sp needed
 694 0014 7047     		bx	lr
 695              	.L56:
 696 0016 C046     		.align	2
 697              	.L55:
 698 0018 18003A40 		.word	1077542936
 699              		.cfi_endproc
 700              	.LFE12:
 701              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 24


 702              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 703              		.align	2
 704              		.global	ADC_SetHighLimit
 705              		.code	16
 706              		.thumb_func
 707              		.type	ADC_SetHighLimit, %function
 708              	ADC_SetHighLimit:
 709              	.LFB13:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 710              		.loc 1 615 0
 711              		.cfi_startproc
 712              	.LVL50:
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 713              		.loc 1 616 0
 714 0000 044A     		ldr	r2, .L58
 715 0002 1368     		ldr	r3, [r2]
 716 0004 1B04     		lsl	r3, r3, #16
 717 0006 1B0C     		lsr	r3, r3, #16
 718 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 719              		.loc 1 617 0
 720 000a 1368     		ldr	r3, [r2]
 721 000c 0004     		lsl	r0, r0, #16
 722              	.LVL51:
 723 000e 1843     		orr	r0, r3
 724 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 725              		.loc 1 618 0
 726              		@ sp needed
 727 0012 7047     		bx	lr
 728              	.L59:
 729              		.align	2
 730              	.L58:
 731 0014 18003A40 		.word	1077542936
 732              		.cfi_endproc
 733              	.LFE13:
 734              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 735              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 736              		.align	2
 737              		.global	ADC_SetLimitMask
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 25


 738              		.code	16
 739              		.thumb_func
 740              		.type	ADC_SetLimitMask, %function
 741              	ADC_SetLimitMask:
 742              	.LFB14:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 743              		.loc 1 639 0
 744              		.cfi_startproc
 745              	.LVL52:
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 746              		.loc 1 640 0
 747 0000 0123     		mov	r3, #1
 748 0002 1840     		and	r0, r3
 749              	.LVL53:
 750 0004 014B     		ldr	r3, .L61
 751 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 752              		.loc 1 641 0
 753              		@ sp needed
 754 0008 7047     		bx	lr
 755              	.L62:
 756 000a C046     		.align	2
 757              	.L61:
 758 000c 38023A40 		.word	1077543480
 759              		.cfi_endproc
 760              	.LFE14:
 761              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 762              		.section	.text.ADC_SetSatMask,"ax",%progbits
 763              		.align	2
 764              		.global	ADC_SetSatMask
 765              		.code	16
 766              		.thumb_func
 767              		.type	ADC_SetSatMask, %function
 768              	ADC_SetSatMask:
 769              	.LFB15:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 26


 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 770              		.loc 1 662 0
 771              		.cfi_startproc
 772              	.LVL54:
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 773              		.loc 1 663 0
 774 0000 0123     		mov	r3, #1
 775 0002 1840     		and	r0, r3
 776              	.LVL55:
 777 0004 014B     		ldr	r3, .L64
 778 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 779              		.loc 1 664 0
 780              		@ sp needed
 781 0008 7047     		bx	lr
 782              	.L65:
 783 000a C046     		.align	2
 784              	.L64:
 785 000c 28023A40 		.word	1077543464
 786              		.cfi_endproc
 787              	.LFE15:
 788              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 789              		.section	.text.ADC_SetOffset,"ax",%progbits
 790              		.align	2
 791              		.global	ADC_SetOffset
 792              		.code	16
 793              		.thumb_func
 794              		.type	ADC_SetOffset, %function
 795              	ADC_SetOffset:
 796              	.LFB16:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 27


 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 797              		.loc 1 690 0
 798              		.cfi_startproc
 799              	.LVL56:
 800 0000 38B5     		push	{r3, r4, r5, lr}
 801              		.cfi_def_cfa_offset 16
 802              		.cfi_offset 3, -16
 803              		.cfi_offset 4, -12
 804              		.cfi_offset 5, -8
 805              		.cfi_offset 14, -4
 806 0002 041C     		mov	r4, r0
 807 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 808              		.loc 1 692 0
 809 0006 0128     		cmp	r0, #1
 810 0008 02D9     		bls	.L67
 811              		.loc 1 692 0 is_stmt 0 discriminator 1
 812 000a 0020     		mov	r0, #0
 813              	.LVL57:
 814 000c FFF7FEFF 		bl	CyHalt
 815              	.LVL58:
 816              	.L67:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 817              		.loc 1 694 0 is_stmt 1
 818 0010 6400     		lsl	r4, r4, #1
 819              	.LVL59:
 820 0012 014B     		ldr	r3, .L68
 821 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 822              		.loc 1 695 0
 823              		@ sp needed
 824 0016 38BD     		pop	{r3, r4, r5, pc}
 825              	.L69:
 826              		.align	2
 827              	.L68:
 828 0018 00000000 		.word	ADC_offset
 829              		.cfi_endproc
 830              	.LFE16:
 831              		.size	ADC_SetOffset, .-ADC_SetOffset
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 28


 832              		.section	.text.ADC_SetGain,"ax",%progbits
 833              		.align	2
 834              		.global	ADC_SetGain
 835              		.code	16
 836              		.thumb_func
 837              		.type	ADC_SetGain, %function
 838              	ADC_SetGain:
 839              	.LFB17:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 840              		.loc 1 724 0
 841              		.cfi_startproc
 842              	.LVL60:
 843 0000 38B5     		push	{r3, r4, r5, lr}
 844              		.cfi_def_cfa_offset 16
 845              		.cfi_offset 3, -16
 846              		.cfi_offset 4, -12
 847              		.cfi_offset 5, -8
 848              		.cfi_offset 14, -4
 849 0002 041C     		mov	r4, r0
 850 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 851              		.loc 1 726 0
 852 0006 0128     		cmp	r0, #1
 853 0008 02D9     		bls	.L71
 854              		.loc 1 726 0 is_stmt 0 discriminator 1
 855 000a 0020     		mov	r0, #0
 856              	.LVL61:
 857 000c FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 29


 858              	.LVL62:
 859              	.L71:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 860              		.loc 1 728 0 is_stmt 1
 861 0010 A400     		lsl	r4, r4, #2
 862              	.LVL63:
 863 0012 014B     		ldr	r3, .L72
 864 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 865              		.loc 1 729 0
 866              		@ sp needed
 867              	.LVL64:
 868 0016 38BD     		pop	{r3, r4, r5, pc}
 869              	.L73:
 870              		.align	2
 871              	.L72:
 872 0018 00000000 		.word	ADC_countsPer10Volt
 873              		.cfi_endproc
 874              	.LFE17:
 875              		.size	ADC_SetGain, .-ADC_SetGain
 876              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 877              		.align	2
 878              		.global	ADC_CountsTo_mVolts
 879              		.code	16
 880              		.thumb_func
 881              		.type	ADC_CountsTo_mVolts, %function
 882              	ADC_CountsTo_mVolts:
 883              	.LFB18:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 30


 884              		.loc 1 757 0
 885              		.cfi_startproc
 886              	.LVL65:
 887 0000 38B5     		push	{r3, r4, r5, lr}
 888              		.cfi_def_cfa_offset 16
 889              		.cfi_offset 3, -16
 890              		.cfi_offset 4, -12
 891              		.cfi_offset 5, -8
 892              		.cfi_offset 14, -4
 893 0002 041C     		mov	r4, r0
 894 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 895              		.loc 1 761 0
 896 0006 0128     		cmp	r0, #1
 897 0008 02D9     		bls	.L75
 898              		.loc 1 761 0 is_stmt 0 discriminator 1
 899 000a 0020     		mov	r0, #0
 900              	.LVL66:
 901 000c FFF7FEFF 		bl	CyHalt
 902              	.LVL67:
 903              	.L75:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 904              		.loc 1 772 0 is_stmt 1
 905 0010 6300     		lsl	r3, r4, #1
 906 0012 0F4A     		ldr	r2, .L78
 907 0014 995A     		ldrh	r1, [r3, r2]
 908 0016 691A     		sub	r1, r5, r1
 909 0018 09B2     		sxth	r1, r1
 910              	.LVL68:
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 911              		.loc 1 774 0
 912 001a 0E48     		ldr	r0, .L78+4
 913 001c 021C     		mov	r2, r0
 914 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 915              		.loc 1 775 0
 916 0020 0029     		cmp	r1, #0
 917 0022 06DD     		ble	.L76
 918              		.loc 1 775 0 is_stmt 0 discriminator 1
 919 0024 A300     		lsl	r3, r4, #2
 920 0026 0C49     		ldr	r1, .L78+8
 921              	.LVL69:
 922 0028 5B58     		ldr	r3, [r3, r1]
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 31


 923 002a D80F     		lsr	r0, r3, #31
 924 002c C018     		add	r0, r0, r3
 925 002e 4310     		asr	r3, r0, #1
 926 0030 06E0     		b	.L77
 927              	.LVL70:
 928              	.L76:
 929              		.loc 1 775 0 discriminator 2
 930 0032 A300     		lsl	r3, r4, #2
 931 0034 0849     		ldr	r1, .L78+8
 932              	.LVL71:
 933 0036 5B58     		ldr	r3, [r3, r1]
 934 0038 D80F     		lsr	r0, r3, #31
 935 003a C318     		add	r3, r0, r3
 936 003c 5B10     		asr	r3, r3, #1
 937 003e 5B42     		neg	r3, r3
 938              	.L77:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 939              		.loc 1 774 0 is_stmt 1
 940 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 941              		.loc 1 776 0
 942 0042 A400     		lsl	r4, r4, #2
 943              	.LVL72:
 944 0044 044B     		ldr	r3, .L78+8
 945 0046 E158     		ldr	r1, [r4, r3]
 946 0048 FFF7FEFF 		bl	__aeabi_idiv
 947              	.LVL73:
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 948              		.loc 1 778 0
 949 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 950              		.loc 1 779 0
 951              		@ sp needed
 952 004e 38BD     		pop	{r3, r4, r5, pc}
 953              	.L79:
 954              		.align	2
 955              	.L78:
 956 0050 00000000 		.word	ADC_offset
 957 0054 10270000 		.word	10000
 958 0058 00000000 		.word	ADC_countsPer10Volt
 959              		.cfi_endproc
 960              	.LFE18:
 961              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 962              		.global	__aeabi_lmul
 963              		.global	__aeabi_ldivmod
 964              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 965              		.align	2
 966              		.global	ADC_CountsTo_uVolts
 967              		.code	16
 968              		.thumb_func
 969              		.type	ADC_CountsTo_uVolts, %function
 970              	ADC_CountsTo_uVolts:
 971              	.LFB19:
 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 32


 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 972              		.loc 1 811 0
 973              		.cfi_startproc
 974              	.LVL74:
 975 0000 38B5     		push	{r3, r4, r5, lr}
 976              		.cfi_def_cfa_offset 16
 977              		.cfi_offset 3, -16
 978              		.cfi_offset 4, -12
 979              		.cfi_offset 5, -8
 980              		.cfi_offset 14, -4
 981 0002 051C     		mov	r5, r0
 982 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 983              		.loc 1 815 0
 984 0006 0128     		cmp	r0, #1
 985 0008 02D9     		bls	.L81
 986              		.loc 1 815 0 is_stmt 0 discriminator 1
 987 000a 0020     		mov	r0, #0
 988              	.LVL75:
 989 000c FFF7FEFF 		bl	CyHalt
 990              	.LVL76:
 991              	.L81:
 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 33


 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 992              		.loc 1 826 0 is_stmt 1
 993 0010 6A00     		lsl	r2, r5, #1
 994 0012 084B     		ldr	r3, .L82
 995 0014 D05A     		ldrh	r0, [r2, r3]
 996 0016 201A     		sub	r0, r4, r0
 997 0018 00B2     		sxth	r0, r0
 998              	.LVL77:
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 999              		.loc 1 828 0
 1000 001a C117     		asr	r1, r0, #31
 1001 001c 064A     		ldr	r2, .L82+4
 1002 001e 0023     		mov	r3, #0
 1003 0020 FFF7FEFF 		bl	__aeabi_lmul
 1004              	.LVL78:
 1005 0024 AD00     		lsl	r5, r5, #2
 1006              	.LVL79:
 1007 0026 054B     		ldr	r3, .L82+8
 1008 0028 EA58     		ldr	r2, [r5, r3]
 1009 002a D317     		asr	r3, r2, #31
 1010 002c FFF7FEFF 		bl	__aeabi_ldivmod
 1011              	.LVL80:
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 1012              		.loc 1 831 0
 1013              		@ sp needed
 1014 0030 38BD     		pop	{r3, r4, r5, pc}
 1015              	.L83:
 1016 0032 C046     		.align	2
 1017              	.L82:
 1018 0034 00000000 		.word	ADC_offset
 1019 0038 80969800 		.word	10000000
 1020 003c 00000000 		.word	ADC_countsPer10Volt
 1021              		.cfi_endproc
 1022              	.LFE19:
 1023              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1024              		.global	__aeabi_i2f
 1025              		.global	__aeabi_fmul
 1026              		.global	__aeabi_fdiv
 1027              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1028              		.align	2
 1029              		.global	ADC_CountsTo_Volts
 1030              		.code	16
 1031              		.thumb_func
 1032              		.type	ADC_CountsTo_Volts, %function
 1033              	ADC_CountsTo_Volts:
 1034              	.LFB20:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 34


 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 1035              		.loc 1 856 0
 1036              		.cfi_startproc
 1037              	.LVL81:
 1038 0000 38B5     		push	{r3, r4, r5, lr}
 1039              		.cfi_def_cfa_offset 16
 1040              		.cfi_offset 3, -16
 1041              		.cfi_offset 4, -12
 1042              		.cfi_offset 5, -8
 1043              		.cfi_offset 14, -4
 1044 0002 041C     		mov	r4, r0
 1045 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1046              		.loc 1 860 0
 1047 0006 0128     		cmp	r0, #1
 1048 0008 02D9     		bls	.L85
 1049              		.loc 1 860 0 is_stmt 0 discriminator 1
 1050 000a 0020     		mov	r0, #0
 1051              	.LVL82:
 1052 000c FFF7FEFF 		bl	CyHalt
 1053              	.LVL83:
 1054              	.L85:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 35


 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1055              		.loc 1 871 0 is_stmt 1
 1056 0010 6200     		lsl	r2, r4, #1
 1057 0012 0A4B     		ldr	r3, .L86
 1058 0014 D05A     		ldrh	r0, [r2, r3]
 1059 0016 281A     		sub	r0, r5, r0
 1060 0018 00B2     		sxth	r0, r0
 1061              	.LVL84:
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1062              		.loc 1 873 0
 1063 001a FFF7FEFF 		bl	__aeabi_i2f
 1064              	.LVL85:
 1065 001e 0849     		ldr	r1, .L86+4
 1066 0020 FFF7FEFF 		bl	__aeabi_fmul
 1067              	.LVL86:
 1068 0024 051C     		add	r5, r0, #0
 1069 0026 A400     		lsl	r4, r4, #2
 1070              	.LVL87:
 1071 0028 064B     		ldr	r3, .L86+8
 1072 002a E058     		ldr	r0, [r4, r3]
 1073 002c FFF7FEFF 		bl	__aeabi_i2f
 1074              	.LVL88:
 1075 0030 011C     		add	r1, r0, #0
 1076 0032 281C     		add	r0, r5, #0
 1077 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1078              	.LVL89:
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 1079              		.loc 1 876 0
 1080              		@ sp needed
 1081 0038 38BD     		pop	{r3, r4, r5, pc}
 1082              	.L87:
 1083 003a C046     		.align	2
 1084              	.L86:
 1085 003c 00000000 		.word	ADC_offset
 1086 0040 00002041 		.word	1092616192
 1087 0044 00000000 		.word	ADC_countsPer10Volt
 1088              		.cfi_endproc
 1089              	.LFE20:
 1090              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1091              		.comm	ADC_countsPer10Volt,8,4
 1092              		.comm	ADC_offset,4,4
 1093              		.global	ADC_initVar
 1094              		.section	.rodata
 1095              		.align	2
 1096              		.set	.LANCHOR0,. + 0
 1097              		.type	ADC_channelsConfig, %object
 1098              		.size	ADC_channelsConfig, 8
 1099              	ADC_channelsConfig:
 1100 0000 00040000 		.word	1024
 1101 0004 00040000 		.word	1024
 1102              		.type	ADC_InputsPlacement.4795, %object
 1103              		.size	ADC_InputsPlacement.4795, 2
 1104              	ADC_InputsPlacement.4795:
 1105 0008 07       		.byte	7
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 36


 1106 0009 70       		.byte	112
 1107 000a 0000     		.bss
 1108              		.set	.LANCHOR1,. + 0
 1109              		.type	ADC_initVar, %object
 1110              		.size	ADC_initVar, 1
 1111              	ADC_initVar:
 1112 0000 00       		.space	1
 1113              		.text
 1114              	.Letext0:
 1115              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1116              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1117              		.section	.debug_info,"",%progbits
 1118              	.Ldebug_info0:
 1119 0000 CD050000 		.4byte	0x5cd
 1120 0004 0400     		.2byte	0x4
 1121 0006 00000000 		.4byte	.Ldebug_abbrev0
 1122 000a 04       		.byte	0x4
 1123 000b 01       		.uleb128 0x1
 1124 000c EF010000 		.4byte	.LASF63
 1125 0010 01       		.byte	0x1
 1126 0011 EB020000 		.4byte	.LASF64
 1127 0015 96030000 		.4byte	.LASF65
 1128 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1129 001d 00000000 		.4byte	0
 1130 0021 00000000 		.4byte	.Ldebug_line0
 1131 0025 02       		.uleb128 0x2
 1132 0026 01       		.byte	0x1
 1133 0027 06       		.byte	0x6
 1134 0028 7C000000 		.4byte	.LASF0
 1135 002c 02       		.uleb128 0x2
 1136 002d 01       		.byte	0x1
 1137 002e 08       		.byte	0x8
 1138 002f 0A030000 		.4byte	.LASF1
 1139 0033 02       		.uleb128 0x2
 1140 0034 02       		.byte	0x2
 1141 0035 05       		.byte	0x5
 1142 0036 23030000 		.4byte	.LASF2
 1143 003a 02       		.uleb128 0x2
 1144 003b 02       		.byte	0x2
 1145 003c 07       		.byte	0x7
 1146 003d 5D010000 		.4byte	.LASF3
 1147 0041 02       		.uleb128 0x2
 1148 0042 04       		.byte	0x4
 1149 0043 05       		.byte	0x5
 1150 0044 9F000000 		.4byte	.LASF4
 1151 0048 02       		.uleb128 0x2
 1152 0049 04       		.byte	0x4
 1153 004a 07       		.byte	0x7
 1154 004b 2C010000 		.4byte	.LASF5
 1155 004f 02       		.uleb128 0x2
 1156 0050 08       		.byte	0x8
 1157 0051 05       		.byte	0x5
 1158 0052 6E000000 		.4byte	.LASF6
 1159 0056 02       		.uleb128 0x2
 1160 0057 08       		.byte	0x8
 1161 0058 07       		.byte	0x7
 1162 0059 32000000 		.4byte	.LASF7
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 37


 1163 005d 03       		.uleb128 0x3
 1164 005e 04       		.byte	0x4
 1165 005f 05       		.byte	0x5
 1166 0060 696E7400 		.ascii	"int\000"
 1167 0064 02       		.uleb128 0x2
 1168 0065 04       		.byte	0x4
 1169 0066 07       		.byte	0x7
 1170 0067 18010000 		.4byte	.LASF8
 1171 006b 04       		.uleb128 0x4
 1172 006c D0000000 		.4byte	.LASF9
 1173 0070 02       		.byte	0x2
 1174 0071 9801     		.2byte	0x198
 1175 0073 2C000000 		.4byte	0x2c
 1176 0077 04       		.uleb128 0x4
 1177 0078 00000000 		.4byte	.LASF10
 1178 007c 02       		.byte	0x2
 1179 007d 9901     		.2byte	0x199
 1180 007f 3A000000 		.4byte	0x3a
 1181 0083 04       		.uleb128 0x4
 1182 0084 E7000000 		.4byte	.LASF11
 1183 0088 02       		.byte	0x2
 1184 0089 9A01     		.2byte	0x19a
 1185 008b 48000000 		.4byte	0x48
 1186 008f 04       		.uleb128 0x4
 1187 0090 82030000 		.4byte	.LASF12
 1188 0094 02       		.byte	0x2
 1189 0095 9C01     		.2byte	0x19c
 1190 0097 33000000 		.4byte	0x33
 1191 009b 04       		.uleb128 0x4
 1192 009c 8F000000 		.4byte	.LASF13
 1193 00a0 02       		.byte	0x2
 1194 00a1 9D01     		.2byte	0x19d
 1195 00a3 41000000 		.4byte	0x41
 1196 00a7 04       		.uleb128 0x4
 1197 00a8 9C010000 		.4byte	.LASF14
 1198 00ac 02       		.byte	0x2
 1199 00ad 9E01     		.2byte	0x19e
 1200 00af B3000000 		.4byte	0xb3
 1201 00b3 02       		.uleb128 0x2
 1202 00b4 04       		.byte	0x4
 1203 00b5 04       		.byte	0x4
 1204 00b6 B0020000 		.4byte	.LASF15
 1205 00ba 02       		.uleb128 0x2
 1206 00bb 08       		.byte	0x8
 1207 00bc 04       		.byte	0x4
 1208 00bd E0000000 		.4byte	.LASF16
 1209 00c1 04       		.uleb128 0x4
 1210 00c2 7D020000 		.4byte	.LASF17
 1211 00c6 02       		.byte	0x2
 1212 00c7 A301     		.2byte	0x1a3
 1213 00c9 4F000000 		.4byte	0x4f
 1214 00cd 02       		.uleb128 0x2
 1215 00ce 01       		.byte	0x1
 1216 00cf 08       		.byte	0x8
 1217 00d0 41030000 		.4byte	.LASF18
 1218 00d4 04       		.uleb128 0x4
 1219 00d5 96010000 		.4byte	.LASF19
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 38


 1220 00d9 02       		.byte	0x2
 1221 00da 4402     		.2byte	0x244
 1222 00dc E0000000 		.4byte	0xe0
 1223 00e0 05       		.uleb128 0x5
 1224 00e1 83000000 		.4byte	0x83
 1225 00e5 04       		.uleb128 0x4
 1226 00e6 46030000 		.4byte	.LASF20
 1227 00ea 02       		.byte	0x2
 1228 00eb 5402     		.2byte	0x254
 1229 00ed F1000000 		.4byte	0xf1
 1230 00f1 06       		.uleb128 0x6
 1231 00f2 04       		.byte	0x4
 1232 00f3 F7000000 		.4byte	0xf7
 1233 00f7 07       		.uleb128 0x7
 1234 00f8 02       		.uleb128 0x2
 1235 00f9 04       		.byte	0x4
 1236 00fa 07       		.byte	0x7
 1237 00fb A4010000 		.4byte	.LASF21
 1238 00ff 08       		.uleb128 0x8
 1239 0100 29000000 		.4byte	.LASF26
 1240 0104 01       		.byte	0x1
 1241 0105 5E       		.byte	0x5e
 1242 0106 00000000 		.4byte	.LFB3
 1243 010a C0010000 		.4byte	.LFE3-.LFB3
 1244 010e 01       		.uleb128 0x1
 1245 010f 9C       		.byte	0x9c
 1246 0110 7A010000 		.4byte	0x17a
 1247 0114 09       		.uleb128 0x9
 1248 0115 36030000 		.4byte	.LASF22
 1249 0119 01       		.byte	0x1
 1250 011a 60       		.byte	0x60
 1251 011b 83000000 		.4byte	0x83
 1252 011f 00000000 		.4byte	.LLST0
 1253 0123 09       		.uleb128 0x9
 1254 0124 53010000 		.4byte	.LASF23
 1255 0128 01       		.byte	0x1
 1256 0129 61       		.byte	0x61
 1257 012a 83000000 		.4byte	0x83
 1258 012e 1F000000 		.4byte	.LLST1
 1259 0132 09       		.uleb128 0x9
 1260 0133 0F000000 		.4byte	.LASF24
 1261 0137 01       		.byte	0x1
 1262 0138 62       		.byte	0x62
 1263 0139 9B000000 		.4byte	0x9b
 1264 013d 06020000 		.4byte	.LLST2
 1265 0141 0A       		.uleb128 0xa
 1266 0142 49000000 		.4byte	.LASF25
 1267 0146 01       		.byte	0x1
 1268 0147 65       		.byte	0x65
 1269 0148 8A010000 		.4byte	0x18a
 1270 014c 05       		.uleb128 0x5
 1271 014d 03       		.byte	0x3
 1272 014e 08000000 		.4byte	ADC_InputsPlacement.4795
 1273 0152 0B       		.uleb128 0xb
 1274 0153 0A000000 		.4byte	.LVL0
 1275 0157 82050000 		.4byte	0x582
 1276 015b 6A010000 		.4byte	0x16a
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 39


 1277 015f 0C       		.uleb128 0xc
 1278 0160 01       		.uleb128 0x1
 1279 0161 51       		.byte	0x51
 1280 0162 01       		.uleb128 0x1
 1281 0163 33       		.byte	0x33
 1282 0164 0C       		.uleb128 0xc
 1283 0165 01       		.uleb128 0x1
 1284 0166 50       		.byte	0x50
 1285 0167 01       		.uleb128 0x1
 1286 0168 3F       		.byte	0x3f
 1287 0169 00       		.byte	0
 1288 016a 0D       		.uleb128 0xd
 1289 016b 12000000 		.4byte	.LVL1
 1290 016f 98050000 		.4byte	0x598
 1291 0173 0C       		.uleb128 0xc
 1292 0174 01       		.uleb128 0x1
 1293 0175 50       		.byte	0x50
 1294 0176 01       		.uleb128 0x1
 1295 0177 3F       		.byte	0x3f
 1296 0178 00       		.byte	0
 1297 0179 00       		.byte	0
 1298 017a 0E       		.uleb128 0xe
 1299 017b 6B000000 		.4byte	0x6b
 1300 017f 8A010000 		.4byte	0x18a
 1301 0183 0F       		.uleb128 0xf
 1302 0184 F8000000 		.4byte	0xf8
 1303 0188 01       		.byte	0x1
 1304 0189 00       		.byte	0
 1305 018a 10       		.uleb128 0x10
 1306 018b 7A010000 		.4byte	0x17a
 1307 018f 11       		.uleb128 0x11
 1308 0190 77030000 		.4byte	.LASF27
 1309 0194 01       		.byte	0x1
 1310 0195 4A01     		.2byte	0x14a
 1311 0197 00000000 		.4byte	.LFB4
 1312 019b 30000000 		.4byte	.LFE4-.LFB4
 1313 019f 01       		.uleb128 0x1
 1314 01a0 9C       		.byte	0x9c
 1315 01a1 B5010000 		.4byte	0x1b5
 1316 01a5 0D       		.uleb128 0xd
 1317 01a6 24000000 		.4byte	.LVL28
 1318 01aa B2050000 		.4byte	0x5b2
 1319 01ae 0C       		.uleb128 0xc
 1320 01af 01       		.uleb128 0x1
 1321 01b0 50       		.byte	0x50
 1322 01b1 01       		.uleb128 0x1
 1323 01b2 3A       		.byte	0x3a
 1324 01b3 00       		.byte	0
 1325 01b4 00       		.byte	0
 1326 01b5 12       		.uleb128 0x12
 1327 01b6 95000000 		.4byte	.LASF28
 1328 01ba 01       		.byte	0x1
 1329 01bb 3F       		.byte	0x3f
 1330 01bc 00000000 		.4byte	.LFB2
 1331 01c0 20000000 		.4byte	.LFE2-.LFB2
 1332 01c4 01       		.uleb128 0x1
 1333 01c5 9C       		.byte	0x9c
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 40


 1334 01c6 DD010000 		.4byte	0x1dd
 1335 01ca 13       		.uleb128 0x13
 1336 01cb 0E000000 		.4byte	.LVL29
 1337 01cf FF000000 		.4byte	0xff
 1338 01d3 13       		.uleb128 0x13
 1339 01d4 18000000 		.4byte	.LVL30
 1340 01d8 8F010000 		.4byte	0x18f
 1341 01dc 00       		.byte	0
 1342 01dd 14       		.uleb128 0x14
 1343 01de 2D030000 		.4byte	.LASF29
 1344 01e2 01       		.byte	0x1
 1345 01e3 6D01     		.2byte	0x16d
 1346 01e5 00000000 		.4byte	.LFB5
 1347 01e9 10000000 		.4byte	.LFE5-.LFB5
 1348 01ed 01       		.uleb128 0x1
 1349 01ee 9C       		.byte	0x9c
 1350 01ef 14       		.uleb128 0x14
 1351 01f0 5D000000 		.4byte	.LASF30
 1352 01f4 01       		.byte	0x1
 1353 01f5 8701     		.2byte	0x187
 1354 01f7 00000000 		.4byte	.LFB6
 1355 01fb 0C000000 		.4byte	.LFE6-.LFB6
 1356 01ff 01       		.uleb128 0x1
 1357 0200 9C       		.byte	0x9c
 1358 0201 14       		.uleb128 0x14
 1359 0202 7F010000 		.4byte	.LASF31
 1360 0206 01       		.byte	0x1
 1361 0207 A001     		.2byte	0x1a0
 1362 0209 00000000 		.4byte	.LFB7
 1363 020d 02000000 		.4byte	.LFE7-.LFB7
 1364 0211 01       		.uleb128 0x1
 1365 0212 9C       		.byte	0x9c
 1366 0213 15       		.uleb128 0x15
 1367 0214 DB010000 		.4byte	.LASF33
 1368 0218 01       		.byte	0x1
 1369 0219 C201     		.2byte	0x1c2
 1370 021b 83000000 		.4byte	0x83
 1371 021f 00000000 		.4byte	.LFB8
 1372 0223 4C000000 		.4byte	.LFE8-.LFB8
 1373 0227 01       		.uleb128 0x1
 1374 0228 9C       		.byte	0x9c
 1375 0229 4E020000 		.4byte	0x24e
 1376 022d 16       		.uleb128 0x16
 1377 022e FF000000 		.4byte	.LASF35
 1378 0232 01       		.byte	0x1
 1379 0233 C201     		.2byte	0x1c2
 1380 0235 83000000 		.4byte	0x83
 1381 0239 19020000 		.4byte	.LLST3
 1382 023d 17       		.uleb128 0x17
 1383 023e 88000000 		.4byte	.LASF32
 1384 0242 01       		.byte	0x1
 1385 0243 C401     		.2byte	0x1c4
 1386 0245 83000000 		.4byte	0x83
 1387 0249 4D020000 		.4byte	.LLST4
 1388 024d 00       		.byte	0
 1389 024e 15       		.uleb128 0x15
 1390 024f DA030000 		.4byte	.LASF34
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 41


 1391 0253 01       		.byte	0x1
 1392 0254 F801     		.2byte	0x1f8
 1393 0256 8F000000 		.4byte	0x8f
 1394 025a 00000000 		.4byte	.LFB9
 1395 025e 38000000 		.4byte	.LFE9-.LFB9
 1396 0262 01       		.uleb128 0x1
 1397 0263 9C       		.byte	0x9c
 1398 0264 98020000 		.4byte	0x298
 1399 0268 16       		.uleb128 0x16
 1400 0269 3C030000 		.4byte	.LASF36
 1401 026d 01       		.byte	0x1
 1402 026e F801     		.2byte	0x1f8
 1403 0270 83000000 		.4byte	0x83
 1404 0274 83020000 		.4byte	.LLST5
 1405 0278 17       		.uleb128 0x17
 1406 0279 D3030000 		.4byte	.LASF37
 1407 027d 01       		.byte	0x1
 1408 027e FA01     		.2byte	0x1fa
 1409 0280 83000000 		.4byte	0x83
 1410 0284 C8020000 		.4byte	.LLST6
 1411 0288 0D       		.uleb128 0xd
 1412 0289 0E000000 		.4byte	.LVL40
 1413 028d C3050000 		.4byte	0x5c3
 1414 0291 0C       		.uleb128 0xc
 1415 0292 01       		.uleb128 0x1
 1416 0293 50       		.byte	0x50
 1417 0294 01       		.uleb128 0x1
 1418 0295 30       		.byte	0x30
 1419 0296 00       		.byte	0
 1420 0297 00       		.byte	0
 1421 0298 11       		.uleb128 0x11
 1422 0299 94020000 		.4byte	.LASF38
 1423 029d 01       		.byte	0x1
 1424 029e 2502     		.2byte	0x225
 1425 02a0 00000000 		.4byte	.LFB10
 1426 02a4 10000000 		.4byte	.LFE10-.LFB10
 1427 02a8 01       		.uleb128 0x1
 1428 02a9 9C       		.byte	0x9c
 1429 02aa BF020000 		.4byte	0x2bf
 1430 02ae 16       		.uleb128 0x16
 1431 02af EE000000 		.4byte	.LASF39
 1432 02b3 01       		.byte	0x1
 1433 02b4 2502     		.2byte	0x225
 1434 02b6 83000000 		.4byte	0x83
 1435 02ba E6020000 		.4byte	.LLST7
 1436 02be 00       		.byte	0
 1437 02bf 14       		.uleb128 0x14
 1438 02c0 C7010000 		.4byte	.LASF40
 1439 02c4 01       		.byte	0x1
 1440 02c5 3B02     		.2byte	0x23b
 1441 02c7 00000000 		.4byte	.LFB11
 1442 02cb 14000000 		.4byte	.LFE11-.LFB11
 1443 02cf 01       		.uleb128 0x1
 1444 02d0 9C       		.byte	0x9c
 1445 02d1 11       		.uleb128 0x11
 1446 02d2 D4020000 		.4byte	.LASF41
 1447 02d6 01       		.byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 42


 1448 02d7 5102     		.2byte	0x251
 1449 02d9 00000000 		.4byte	.LFB12
 1450 02dd 1C000000 		.4byte	.LFE12-.LFB12
 1451 02e1 01       		.uleb128 0x1
 1452 02e2 9C       		.byte	0x9c
 1453 02e3 F8020000 		.4byte	0x2f8
 1454 02e7 16       		.uleb128 0x16
 1455 02e8 AD010000 		.4byte	.LASF42
 1456 02ec 01       		.byte	0x1
 1457 02ed 5102     		.2byte	0x251
 1458 02ef 83000000 		.4byte	0x83
 1459 02f3 07030000 		.4byte	.LLST8
 1460 02f7 00       		.byte	0
 1461 02f8 11       		.uleb128 0x11
 1462 02f9 B6010000 		.4byte	.LASF43
 1463 02fd 01       		.byte	0x1
 1464 02fe 6602     		.2byte	0x266
 1465 0300 00000000 		.4byte	.LFB13
 1466 0304 18000000 		.4byte	.LFE13-.LFB13
 1467 0308 01       		.uleb128 0x1
 1468 0309 9C       		.byte	0x9c
 1469 030a 1F030000 		.4byte	0x31f
 1470 030e 16       		.uleb128 0x16
 1471 030f B6020000 		.4byte	.LASF44
 1472 0313 01       		.byte	0x1
 1473 0314 6602     		.2byte	0x266
 1474 0316 83000000 		.4byte	0x83
 1475 031a 28030000 		.4byte	.LLST9
 1476 031e 00       		.byte	0
 1477 031f 11       		.uleb128 0x11
 1478 0320 07010000 		.4byte	.LASF45
 1479 0324 01       		.byte	0x1
 1480 0325 7E02     		.2byte	0x27e
 1481 0327 00000000 		.4byte	.LFB14
 1482 032b 10000000 		.4byte	.LFE14-.LFB14
 1483 032f 01       		.uleb128 0x1
 1484 0330 9C       		.byte	0x9c
 1485 0331 46030000 		.4byte	0x346
 1486 0335 16       		.uleb128 0x16
 1487 0336 EE000000 		.4byte	.LASF39
 1488 033a 01       		.byte	0x1
 1489 033b 7E02     		.2byte	0x27e
 1490 033d 83000000 		.4byte	0x83
 1491 0341 49030000 		.4byte	.LLST10
 1492 0345 00       		.byte	0
 1493 0346 11       		.uleb128 0x11
 1494 0347 3E010000 		.4byte	.LASF46
 1495 034b 01       		.byte	0x1
 1496 034c 9502     		.2byte	0x295
 1497 034e 00000000 		.4byte	.LFB15
 1498 0352 10000000 		.4byte	.LFE15-.LFB15
 1499 0356 01       		.uleb128 0x1
 1500 0357 9C       		.byte	0x9c
 1501 0358 6D030000 		.4byte	0x36d
 1502 035c 16       		.uleb128 0x16
 1503 035d EE000000 		.4byte	.LASF39
 1504 0361 01       		.byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 43


 1505 0362 9502     		.2byte	0x295
 1506 0364 83000000 		.4byte	0x83
 1507 0368 6A030000 		.4byte	.LLST11
 1508 036c 00       		.byte	0
 1509 036d 11       		.uleb128 0x11
 1510 036e 88030000 		.4byte	.LASF47
 1511 0372 01       		.byte	0x1
 1512 0373 B102     		.2byte	0x2b1
 1513 0375 00000000 		.4byte	.LFB16
 1514 0379 1C000000 		.4byte	.LFE16-.LFB16
 1515 037d 01       		.uleb128 0x1
 1516 037e 9C       		.byte	0x9c
 1517 037f B3030000 		.4byte	0x3b3
 1518 0383 16       		.uleb128 0x16
 1519 0384 3C030000 		.4byte	.LASF36
 1520 0388 01       		.byte	0x1
 1521 0389 B102     		.2byte	0x2b1
 1522 038b 83000000 		.4byte	0x83
 1523 038f 8B030000 		.4byte	.LLST12
 1524 0393 16       		.uleb128 0x16
 1525 0394 66030000 		.4byte	.LASF48
 1526 0398 01       		.byte	0x1
 1527 0399 B102     		.2byte	0x2b1
 1528 039b 8F000000 		.4byte	0x8f
 1529 039f B7030000 		.4byte	.LLST13
 1530 03a3 0D       		.uleb128 0xd
 1531 03a4 10000000 		.4byte	.LVL58
 1532 03a8 C3050000 		.4byte	0x5c3
 1533 03ac 0C       		.uleb128 0xc
 1534 03ad 01       		.uleb128 0x1
 1535 03ae 50       		.byte	0x50
 1536 03af 01       		.uleb128 0x1
 1537 03b0 30       		.byte	0x30
 1538 03b1 00       		.byte	0
 1539 03b2 00       		.byte	0
 1540 03b3 11       		.uleb128 0x11
 1541 03b4 A4020000 		.4byte	.LASF49
 1542 03b8 01       		.byte	0x1
 1543 03b9 D302     		.2byte	0x2d3
 1544 03bb 00000000 		.4byte	.LFB17
 1545 03bf 1C000000 		.4byte	.LFE17-.LFB17
 1546 03c3 01       		.uleb128 0x1
 1547 03c4 9C       		.byte	0x9c
 1548 03c5 F9030000 		.4byte	0x3f9
 1549 03c9 16       		.uleb128 0x16
 1550 03ca 3C030000 		.4byte	.LASF36
 1551 03ce 01       		.byte	0x1
 1552 03cf D302     		.2byte	0x2d3
 1553 03d1 83000000 		.4byte	0x83
 1554 03d5 D8030000 		.4byte	.LLST14
 1555 03d9 16       		.uleb128 0x16
 1556 03da 07000000 		.4byte	.LASF50
 1557 03de 01       		.byte	0x1
 1558 03df D302     		.2byte	0x2d3
 1559 03e1 9B000000 		.4byte	0x9b
 1560 03e5 04040000 		.4byte	.LLST15
 1561 03e9 0D       		.uleb128 0xd
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 44


 1562 03ea 10000000 		.4byte	.LVL62
 1563 03ee C3050000 		.4byte	0x5c3
 1564 03f2 0C       		.uleb128 0xc
 1565 03f3 01       		.uleb128 0x1
 1566 03f4 50       		.byte	0x50
 1567 03f5 01       		.uleb128 0x1
 1568 03f6 30       		.byte	0x30
 1569 03f7 00       		.byte	0
 1570 03f8 00       		.byte	0
 1571 03f9 18       		.uleb128 0x18
 1572 03fa C0020000 		.4byte	.LASF51
 1573 03fe 01       		.byte	0x1
 1574 03ff F402     		.2byte	0x2f4
 1575 0401 8F000000 		.4byte	0x8f
 1576 0405 00000000 		.4byte	.LFB18
 1577 0409 5C000000 		.4byte	.LFE18-.LFB18
 1578 040d 01       		.uleb128 0x1
 1579 040e 9C       		.byte	0x9c
 1580 040f 51040000 		.4byte	0x451
 1581 0413 16       		.uleb128 0x16
 1582 0414 3C030000 		.4byte	.LASF36
 1583 0418 01       		.byte	0x1
 1584 0419 F402     		.2byte	0x2f4
 1585 041b 83000000 		.4byte	0x83
 1586 041f 34040000 		.4byte	.LLST16
 1587 0423 16       		.uleb128 0x16
 1588 0424 6D030000 		.4byte	.LASF52
 1589 0428 01       		.byte	0x1
 1590 0429 F402     		.2byte	0x2f4
 1591 042b 8F000000 		.4byte	0x8f
 1592 042f 60040000 		.4byte	.LLST17
 1593 0433 19       		.uleb128 0x19
 1594 0434 8F010000 		.4byte	.LASF53
 1595 0438 01       		.byte	0x1
 1596 0439 F602     		.2byte	0x2f6
 1597 043b 8F000000 		.4byte	0x8f
 1598 043f 01       		.uleb128 0x1
 1599 0440 50       		.byte	0x50
 1600 0441 0D       		.uleb128 0xd
 1601 0442 10000000 		.4byte	.LVL67
 1602 0446 C3050000 		.4byte	0x5c3
 1603 044a 0C       		.uleb128 0xc
 1604 044b 01       		.uleb128 0x1
 1605 044c 50       		.byte	0x50
 1606 044d 01       		.uleb128 0x1
 1607 044e 30       		.byte	0x30
 1608 044f 00       		.byte	0
 1609 0450 00       		.byte	0
 1610 0451 18       		.uleb128 0x18
 1611 0452 A8000000 		.4byte	.LASF54
 1612 0456 01       		.byte	0x1
 1613 0457 2A03     		.2byte	0x32a
 1614 0459 9B000000 		.4byte	0x9b
 1615 045d 00000000 		.4byte	.LFB19
 1616 0461 40000000 		.4byte	.LFE19-.LFB19
 1617 0465 01       		.uleb128 0x1
 1618 0466 9C       		.byte	0x9c
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 45


 1619 0467 A7040000 		.4byte	0x4a7
 1620 046b 16       		.uleb128 0x16
 1621 046c 3C030000 		.4byte	.LASF36
 1622 0470 01       		.byte	0x1
 1623 0471 2A03     		.2byte	0x32a
 1624 0473 83000000 		.4byte	0x83
 1625 0477 97040000 		.4byte	.LLST18
 1626 047b 16       		.uleb128 0x16
 1627 047c 6D030000 		.4byte	.LASF52
 1628 0480 01       		.byte	0x1
 1629 0481 2A03     		.2byte	0x32a
 1630 0483 8F000000 		.4byte	0x8f
 1631 0487 C3040000 		.4byte	.LLST19
 1632 048b 1A       		.uleb128 0x1a
 1633 048c 25010000 		.4byte	.LASF66
 1634 0490 01       		.byte	0x1
 1635 0491 2C03     		.2byte	0x32c
 1636 0493 C1000000 		.4byte	0xc1
 1637 0497 0D       		.uleb128 0xd
 1638 0498 10000000 		.4byte	.LVL76
 1639 049c C3050000 		.4byte	0x5c3
 1640 04a0 0C       		.uleb128 0xc
 1641 04a1 01       		.uleb128 0x1
 1642 04a2 50       		.byte	0x50
 1643 04a3 01       		.uleb128 0x1
 1644 04a4 30       		.byte	0x30
 1645 04a5 00       		.byte	0
 1646 04a6 00       		.byte	0
 1647 04a7 18       		.uleb128 0x18
 1648 04a8 16000000 		.4byte	.LASF55
 1649 04ac 01       		.byte	0x1
 1650 04ad 5703     		.2byte	0x357
 1651 04af A7000000 		.4byte	0xa7
 1652 04b3 00000000 		.4byte	.LFB20
 1653 04b7 48000000 		.4byte	.LFE20-.LFB20
 1654 04bb 01       		.uleb128 0x1
 1655 04bc 9C       		.byte	0x9c
 1656 04bd FF040000 		.4byte	0x4ff
 1657 04c1 16       		.uleb128 0x16
 1658 04c2 3C030000 		.4byte	.LASF36
 1659 04c6 01       		.byte	0x1
 1660 04c7 5703     		.2byte	0x357
 1661 04c9 83000000 		.4byte	0x83
 1662 04cd EF040000 		.4byte	.LLST20
 1663 04d1 16       		.uleb128 0x16
 1664 04d2 6D030000 		.4byte	.LASF52
 1665 04d6 01       		.byte	0x1
 1666 04d7 5703     		.2byte	0x357
 1667 04d9 8F000000 		.4byte	0x8f
 1668 04dd 1B050000 		.4byte	.LLST21
 1669 04e1 19       		.uleb128 0x19
 1670 04e2 4D010000 		.4byte	.LASF56
 1671 04e6 01       		.byte	0x1
 1672 04e7 5903     		.2byte	0x359
 1673 04e9 A7000000 		.4byte	0xa7
 1674 04ed 01       		.uleb128 0x1
 1675 04ee 50       		.byte	0x50
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 46


 1676 04ef 0D       		.uleb128 0xd
 1677 04f0 10000000 		.4byte	.LVL83
 1678 04f4 C3050000 		.4byte	0x5c3
 1679 04f8 0C       		.uleb128 0xc
 1680 04f9 01       		.uleb128 0x1
 1681 04fa 50       		.byte	0x50
 1682 04fb 01       		.uleb128 0x1
 1683 04fc 30       		.byte	0x30
 1684 04fd 00       		.byte	0
 1685 04fe 00       		.byte	0
 1686 04ff 0E       		.uleb128 0xe
 1687 0500 83000000 		.4byte	0x83
 1688 0504 0F050000 		.4byte	0x50f
 1689 0508 0F       		.uleb128 0xf
 1690 0509 F8000000 		.4byte	0xf8
 1691 050d 01       		.byte	0x1
 1692 050e 00       		.byte	0
 1693 050f 0A       		.uleb128 0xa
 1694 0510 53030000 		.4byte	.LASF57
 1695 0514 01       		.byte	0x1
 1696 0515 21       		.byte	0x21
 1697 0516 20050000 		.4byte	0x520
 1698 051a 05       		.uleb128 0x5
 1699 051b 03       		.byte	0x3
 1700 051c 00000000 		.4byte	ADC_channelsConfig
 1701 0520 10       		.uleb128 0x10
 1702 0521 FF040000 		.4byte	0x4ff
 1703 0525 1B       		.uleb128 0x1b
 1704 0526 F3000000 		.4byte	.LASF58
 1705 052a 01       		.byte	0x1
 1706 052b 18       		.byte	0x18
 1707 052c 6B000000 		.4byte	0x6b
 1708 0530 05       		.uleb128 0x5
 1709 0531 03       		.byte	0x3
 1710 0532 00000000 		.4byte	ADC_initVar
 1711 0536 0E       		.uleb128 0xe
 1712 0537 8F000000 		.4byte	0x8f
 1713 053b 46050000 		.4byte	0x546
 1714 053f 0F       		.uleb128 0xf
 1715 0540 F8000000 		.4byte	0xf8
 1716 0544 01       		.byte	0x1
 1717 0545 00       		.byte	0
 1718 0546 1B       		.uleb128 0x1b
 1719 0547 18030000 		.4byte	.LASF59
 1720 054b 01       		.byte	0x1
 1721 054c 19       		.byte	0x19
 1722 054d 57050000 		.4byte	0x557
 1723 0551 05       		.uleb128 0x5
 1724 0552 03       		.byte	0x3
 1725 0553 00000000 		.4byte	ADC_offset
 1726 0557 05       		.uleb128 0x5
 1727 0558 36050000 		.4byte	0x536
 1728 055c 0E       		.uleb128 0xe
 1729 055d 9B000000 		.4byte	0x9b
 1730 0561 6C050000 		.4byte	0x56c
 1731 0565 0F       		.uleb128 0xf
 1732 0566 F8000000 		.4byte	0xf8
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 47


 1733 056a 01       		.byte	0x1
 1734 056b 00       		.byte	0
 1735 056c 1B       		.uleb128 0x1b
 1736 056d BC000000 		.4byte	.LASF60
 1737 0571 01       		.byte	0x1
 1738 0572 1A       		.byte	0x1a
 1739 0573 7D050000 		.4byte	0x57d
 1740 0577 05       		.uleb128 0x5
 1741 0578 03       		.byte	0x3
 1742 0579 00000000 		.4byte	ADC_countsPer10Volt
 1743 057d 05       		.uleb128 0x5
 1744 057e 5C050000 		.4byte	0x55c
 1745 0582 1C       		.uleb128 0x1c
 1746 0583 83020000 		.4byte	.LASF61
 1747 0587 03       		.byte	0x3
 1748 0588 BE       		.byte	0xbe
 1749 0589 98050000 		.4byte	0x598
 1750 058d 1D       		.uleb128 0x1d
 1751 058e 6B000000 		.4byte	0x6b
 1752 0592 1D       		.uleb128 0x1d
 1753 0593 6B000000 		.4byte	0x6b
 1754 0597 00       		.byte	0
 1755 0598 1E       		.uleb128 0x1e
 1756 0599 70010000 		.4byte	.LASF67
 1757 059d 03       		.byte	0x3
 1758 059e BB       		.byte	0xbb
 1759 059f E5000000 		.4byte	0xe5
 1760 05a3 B2050000 		.4byte	0x5b2
 1761 05a7 1D       		.uleb128 0x1d
 1762 05a8 6B000000 		.4byte	0x6b
 1763 05ac 1D       		.uleb128 0x1d
 1764 05ad E5000000 		.4byte	0xe5
 1765 05b1 00       		.byte	0
 1766 05b2 1C       		.uleb128 0x1c
 1767 05b3 D6000000 		.4byte	.LASF62
 1768 05b7 03       		.byte	0x3
 1769 05b8 D8       		.byte	0xd8
 1770 05b9 C3050000 		.4byte	0x5c3
 1771 05bd 1D       		.uleb128 0x1d
 1772 05be 77000000 		.4byte	0x77
 1773 05c2 00       		.byte	0
 1774 05c3 1F       		.uleb128 0x1f
 1775 05c4 E4020000 		.4byte	.LASF68
 1776 05c8 03       		.byte	0x3
 1777 05c9 E5       		.byte	0xe5
 1778 05ca 1D       		.uleb128 0x1d
 1779 05cb 6B000000 		.4byte	0x6b
 1780 05cf 00       		.byte	0
 1781 05d0 00       		.byte	0
 1782              		.section	.debug_abbrev,"",%progbits
 1783              	.Ldebug_abbrev0:
 1784 0000 01       		.uleb128 0x1
 1785 0001 11       		.uleb128 0x11
 1786 0002 01       		.byte	0x1
 1787 0003 25       		.uleb128 0x25
 1788 0004 0E       		.uleb128 0xe
 1789 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 48


 1790 0006 0B       		.uleb128 0xb
 1791 0007 03       		.uleb128 0x3
 1792 0008 0E       		.uleb128 0xe
 1793 0009 1B       		.uleb128 0x1b
 1794 000a 0E       		.uleb128 0xe
 1795 000b 55       		.uleb128 0x55
 1796 000c 17       		.uleb128 0x17
 1797 000d 11       		.uleb128 0x11
 1798 000e 01       		.uleb128 0x1
 1799 000f 10       		.uleb128 0x10
 1800 0010 17       		.uleb128 0x17
 1801 0011 00       		.byte	0
 1802 0012 00       		.byte	0
 1803 0013 02       		.uleb128 0x2
 1804 0014 24       		.uleb128 0x24
 1805 0015 00       		.byte	0
 1806 0016 0B       		.uleb128 0xb
 1807 0017 0B       		.uleb128 0xb
 1808 0018 3E       		.uleb128 0x3e
 1809 0019 0B       		.uleb128 0xb
 1810 001a 03       		.uleb128 0x3
 1811 001b 0E       		.uleb128 0xe
 1812 001c 00       		.byte	0
 1813 001d 00       		.byte	0
 1814 001e 03       		.uleb128 0x3
 1815 001f 24       		.uleb128 0x24
 1816 0020 00       		.byte	0
 1817 0021 0B       		.uleb128 0xb
 1818 0022 0B       		.uleb128 0xb
 1819 0023 3E       		.uleb128 0x3e
 1820 0024 0B       		.uleb128 0xb
 1821 0025 03       		.uleb128 0x3
 1822 0026 08       		.uleb128 0x8
 1823 0027 00       		.byte	0
 1824 0028 00       		.byte	0
 1825 0029 04       		.uleb128 0x4
 1826 002a 16       		.uleb128 0x16
 1827 002b 00       		.byte	0
 1828 002c 03       		.uleb128 0x3
 1829 002d 0E       		.uleb128 0xe
 1830 002e 3A       		.uleb128 0x3a
 1831 002f 0B       		.uleb128 0xb
 1832 0030 3B       		.uleb128 0x3b
 1833 0031 05       		.uleb128 0x5
 1834 0032 49       		.uleb128 0x49
 1835 0033 13       		.uleb128 0x13
 1836 0034 00       		.byte	0
 1837 0035 00       		.byte	0
 1838 0036 05       		.uleb128 0x5
 1839 0037 35       		.uleb128 0x35
 1840 0038 00       		.byte	0
 1841 0039 49       		.uleb128 0x49
 1842 003a 13       		.uleb128 0x13
 1843 003b 00       		.byte	0
 1844 003c 00       		.byte	0
 1845 003d 06       		.uleb128 0x6
 1846 003e 0F       		.uleb128 0xf
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 49


 1847 003f 00       		.byte	0
 1848 0040 0B       		.uleb128 0xb
 1849 0041 0B       		.uleb128 0xb
 1850 0042 49       		.uleb128 0x49
 1851 0043 13       		.uleb128 0x13
 1852 0044 00       		.byte	0
 1853 0045 00       		.byte	0
 1854 0046 07       		.uleb128 0x7
 1855 0047 15       		.uleb128 0x15
 1856 0048 00       		.byte	0
 1857 0049 27       		.uleb128 0x27
 1858 004a 19       		.uleb128 0x19
 1859 004b 00       		.byte	0
 1860 004c 00       		.byte	0
 1861 004d 08       		.uleb128 0x8
 1862 004e 2E       		.uleb128 0x2e
 1863 004f 01       		.byte	0x1
 1864 0050 3F       		.uleb128 0x3f
 1865 0051 19       		.uleb128 0x19
 1866 0052 03       		.uleb128 0x3
 1867 0053 0E       		.uleb128 0xe
 1868 0054 3A       		.uleb128 0x3a
 1869 0055 0B       		.uleb128 0xb
 1870 0056 3B       		.uleb128 0x3b
 1871 0057 0B       		.uleb128 0xb
 1872 0058 27       		.uleb128 0x27
 1873 0059 19       		.uleb128 0x19
 1874 005a 11       		.uleb128 0x11
 1875 005b 01       		.uleb128 0x1
 1876 005c 12       		.uleb128 0x12
 1877 005d 06       		.uleb128 0x6
 1878 005e 40       		.uleb128 0x40
 1879 005f 18       		.uleb128 0x18
 1880 0060 9642     		.uleb128 0x2116
 1881 0062 19       		.uleb128 0x19
 1882 0063 01       		.uleb128 0x1
 1883 0064 13       		.uleb128 0x13
 1884 0065 00       		.byte	0
 1885 0066 00       		.byte	0
 1886 0067 09       		.uleb128 0x9
 1887 0068 34       		.uleb128 0x34
 1888 0069 00       		.byte	0
 1889 006a 03       		.uleb128 0x3
 1890 006b 0E       		.uleb128 0xe
 1891 006c 3A       		.uleb128 0x3a
 1892 006d 0B       		.uleb128 0xb
 1893 006e 3B       		.uleb128 0x3b
 1894 006f 0B       		.uleb128 0xb
 1895 0070 49       		.uleb128 0x49
 1896 0071 13       		.uleb128 0x13
 1897 0072 02       		.uleb128 0x2
 1898 0073 17       		.uleb128 0x17
 1899 0074 00       		.byte	0
 1900 0075 00       		.byte	0
 1901 0076 0A       		.uleb128 0xa
 1902 0077 34       		.uleb128 0x34
 1903 0078 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 50


 1904 0079 03       		.uleb128 0x3
 1905 007a 0E       		.uleb128 0xe
 1906 007b 3A       		.uleb128 0x3a
 1907 007c 0B       		.uleb128 0xb
 1908 007d 3B       		.uleb128 0x3b
 1909 007e 0B       		.uleb128 0xb
 1910 007f 49       		.uleb128 0x49
 1911 0080 13       		.uleb128 0x13
 1912 0081 02       		.uleb128 0x2
 1913 0082 18       		.uleb128 0x18
 1914 0083 00       		.byte	0
 1915 0084 00       		.byte	0
 1916 0085 0B       		.uleb128 0xb
 1917 0086 898201   		.uleb128 0x4109
 1918 0089 01       		.byte	0x1
 1919 008a 11       		.uleb128 0x11
 1920 008b 01       		.uleb128 0x1
 1921 008c 31       		.uleb128 0x31
 1922 008d 13       		.uleb128 0x13
 1923 008e 01       		.uleb128 0x1
 1924 008f 13       		.uleb128 0x13
 1925 0090 00       		.byte	0
 1926 0091 00       		.byte	0
 1927 0092 0C       		.uleb128 0xc
 1928 0093 8A8201   		.uleb128 0x410a
 1929 0096 00       		.byte	0
 1930 0097 02       		.uleb128 0x2
 1931 0098 18       		.uleb128 0x18
 1932 0099 9142     		.uleb128 0x2111
 1933 009b 18       		.uleb128 0x18
 1934 009c 00       		.byte	0
 1935 009d 00       		.byte	0
 1936 009e 0D       		.uleb128 0xd
 1937 009f 898201   		.uleb128 0x4109
 1938 00a2 01       		.byte	0x1
 1939 00a3 11       		.uleb128 0x11
 1940 00a4 01       		.uleb128 0x1
 1941 00a5 31       		.uleb128 0x31
 1942 00a6 13       		.uleb128 0x13
 1943 00a7 00       		.byte	0
 1944 00a8 00       		.byte	0
 1945 00a9 0E       		.uleb128 0xe
 1946 00aa 01       		.uleb128 0x1
 1947 00ab 01       		.byte	0x1
 1948 00ac 49       		.uleb128 0x49
 1949 00ad 13       		.uleb128 0x13
 1950 00ae 01       		.uleb128 0x1
 1951 00af 13       		.uleb128 0x13
 1952 00b0 00       		.byte	0
 1953 00b1 00       		.byte	0
 1954 00b2 0F       		.uleb128 0xf
 1955 00b3 21       		.uleb128 0x21
 1956 00b4 00       		.byte	0
 1957 00b5 49       		.uleb128 0x49
 1958 00b6 13       		.uleb128 0x13
 1959 00b7 2F       		.uleb128 0x2f
 1960 00b8 0B       		.uleb128 0xb
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 51


 1961 00b9 00       		.byte	0
 1962 00ba 00       		.byte	0
 1963 00bb 10       		.uleb128 0x10
 1964 00bc 26       		.uleb128 0x26
 1965 00bd 00       		.byte	0
 1966 00be 49       		.uleb128 0x49
 1967 00bf 13       		.uleb128 0x13
 1968 00c0 00       		.byte	0
 1969 00c1 00       		.byte	0
 1970 00c2 11       		.uleb128 0x11
 1971 00c3 2E       		.uleb128 0x2e
 1972 00c4 01       		.byte	0x1
 1973 00c5 3F       		.uleb128 0x3f
 1974 00c6 19       		.uleb128 0x19
 1975 00c7 03       		.uleb128 0x3
 1976 00c8 0E       		.uleb128 0xe
 1977 00c9 3A       		.uleb128 0x3a
 1978 00ca 0B       		.uleb128 0xb
 1979 00cb 3B       		.uleb128 0x3b
 1980 00cc 05       		.uleb128 0x5
 1981 00cd 27       		.uleb128 0x27
 1982 00ce 19       		.uleb128 0x19
 1983 00cf 11       		.uleb128 0x11
 1984 00d0 01       		.uleb128 0x1
 1985 00d1 12       		.uleb128 0x12
 1986 00d2 06       		.uleb128 0x6
 1987 00d3 40       		.uleb128 0x40
 1988 00d4 18       		.uleb128 0x18
 1989 00d5 9742     		.uleb128 0x2117
 1990 00d7 19       		.uleb128 0x19
 1991 00d8 01       		.uleb128 0x1
 1992 00d9 13       		.uleb128 0x13
 1993 00da 00       		.byte	0
 1994 00db 00       		.byte	0
 1995 00dc 12       		.uleb128 0x12
 1996 00dd 2E       		.uleb128 0x2e
 1997 00de 01       		.byte	0x1
 1998 00df 3F       		.uleb128 0x3f
 1999 00e0 19       		.uleb128 0x19
 2000 00e1 03       		.uleb128 0x3
 2001 00e2 0E       		.uleb128 0xe
 2002 00e3 3A       		.uleb128 0x3a
 2003 00e4 0B       		.uleb128 0xb
 2004 00e5 3B       		.uleb128 0x3b
 2005 00e6 0B       		.uleb128 0xb
 2006 00e7 27       		.uleb128 0x27
 2007 00e8 19       		.uleb128 0x19
 2008 00e9 11       		.uleb128 0x11
 2009 00ea 01       		.uleb128 0x1
 2010 00eb 12       		.uleb128 0x12
 2011 00ec 06       		.uleb128 0x6
 2012 00ed 40       		.uleb128 0x40
 2013 00ee 18       		.uleb128 0x18
 2014 00ef 9742     		.uleb128 0x2117
 2015 00f1 19       		.uleb128 0x19
 2016 00f2 01       		.uleb128 0x1
 2017 00f3 13       		.uleb128 0x13
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 52


 2018 00f4 00       		.byte	0
 2019 00f5 00       		.byte	0
 2020 00f6 13       		.uleb128 0x13
 2021 00f7 898201   		.uleb128 0x4109
 2022 00fa 00       		.byte	0
 2023 00fb 11       		.uleb128 0x11
 2024 00fc 01       		.uleb128 0x1
 2025 00fd 31       		.uleb128 0x31
 2026 00fe 13       		.uleb128 0x13
 2027 00ff 00       		.byte	0
 2028 0100 00       		.byte	0
 2029 0101 14       		.uleb128 0x14
 2030 0102 2E       		.uleb128 0x2e
 2031 0103 00       		.byte	0
 2032 0104 3F       		.uleb128 0x3f
 2033 0105 19       		.uleb128 0x19
 2034 0106 03       		.uleb128 0x3
 2035 0107 0E       		.uleb128 0xe
 2036 0108 3A       		.uleb128 0x3a
 2037 0109 0B       		.uleb128 0xb
 2038 010a 3B       		.uleb128 0x3b
 2039 010b 05       		.uleb128 0x5
 2040 010c 27       		.uleb128 0x27
 2041 010d 19       		.uleb128 0x19
 2042 010e 11       		.uleb128 0x11
 2043 010f 01       		.uleb128 0x1
 2044 0110 12       		.uleb128 0x12
 2045 0111 06       		.uleb128 0x6
 2046 0112 40       		.uleb128 0x40
 2047 0113 18       		.uleb128 0x18
 2048 0114 9742     		.uleb128 0x2117
 2049 0116 19       		.uleb128 0x19
 2050 0117 00       		.byte	0
 2051 0118 00       		.byte	0
 2052 0119 15       		.uleb128 0x15
 2053 011a 2E       		.uleb128 0x2e
 2054 011b 01       		.byte	0x1
 2055 011c 3F       		.uleb128 0x3f
 2056 011d 19       		.uleb128 0x19
 2057 011e 03       		.uleb128 0x3
 2058 011f 0E       		.uleb128 0xe
 2059 0120 3A       		.uleb128 0x3a
 2060 0121 0B       		.uleb128 0xb
 2061 0122 3B       		.uleb128 0x3b
 2062 0123 05       		.uleb128 0x5
 2063 0124 27       		.uleb128 0x27
 2064 0125 19       		.uleb128 0x19
 2065 0126 49       		.uleb128 0x49
 2066 0127 13       		.uleb128 0x13
 2067 0128 11       		.uleb128 0x11
 2068 0129 01       		.uleb128 0x1
 2069 012a 12       		.uleb128 0x12
 2070 012b 06       		.uleb128 0x6
 2071 012c 40       		.uleb128 0x40
 2072 012d 18       		.uleb128 0x18
 2073 012e 9742     		.uleb128 0x2117
 2074 0130 19       		.uleb128 0x19
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 53


 2075 0131 01       		.uleb128 0x1
 2076 0132 13       		.uleb128 0x13
 2077 0133 00       		.byte	0
 2078 0134 00       		.byte	0
 2079 0135 16       		.uleb128 0x16
 2080 0136 05       		.uleb128 0x5
 2081 0137 00       		.byte	0
 2082 0138 03       		.uleb128 0x3
 2083 0139 0E       		.uleb128 0xe
 2084 013a 3A       		.uleb128 0x3a
 2085 013b 0B       		.uleb128 0xb
 2086 013c 3B       		.uleb128 0x3b
 2087 013d 05       		.uleb128 0x5
 2088 013e 49       		.uleb128 0x49
 2089 013f 13       		.uleb128 0x13
 2090 0140 02       		.uleb128 0x2
 2091 0141 17       		.uleb128 0x17
 2092 0142 00       		.byte	0
 2093 0143 00       		.byte	0
 2094 0144 17       		.uleb128 0x17
 2095 0145 34       		.uleb128 0x34
 2096 0146 00       		.byte	0
 2097 0147 03       		.uleb128 0x3
 2098 0148 0E       		.uleb128 0xe
 2099 0149 3A       		.uleb128 0x3a
 2100 014a 0B       		.uleb128 0xb
 2101 014b 3B       		.uleb128 0x3b
 2102 014c 05       		.uleb128 0x5
 2103 014d 49       		.uleb128 0x49
 2104 014e 13       		.uleb128 0x13
 2105 014f 02       		.uleb128 0x2
 2106 0150 17       		.uleb128 0x17
 2107 0151 00       		.byte	0
 2108 0152 00       		.byte	0
 2109 0153 18       		.uleb128 0x18
 2110 0154 2E       		.uleb128 0x2e
 2111 0155 01       		.byte	0x1
 2112 0156 3F       		.uleb128 0x3f
 2113 0157 19       		.uleb128 0x19
 2114 0158 03       		.uleb128 0x3
 2115 0159 0E       		.uleb128 0xe
 2116 015a 3A       		.uleb128 0x3a
 2117 015b 0B       		.uleb128 0xb
 2118 015c 3B       		.uleb128 0x3b
 2119 015d 05       		.uleb128 0x5
 2120 015e 27       		.uleb128 0x27
 2121 015f 19       		.uleb128 0x19
 2122 0160 49       		.uleb128 0x49
 2123 0161 13       		.uleb128 0x13
 2124 0162 11       		.uleb128 0x11
 2125 0163 01       		.uleb128 0x1
 2126 0164 12       		.uleb128 0x12
 2127 0165 06       		.uleb128 0x6
 2128 0166 40       		.uleb128 0x40
 2129 0167 18       		.uleb128 0x18
 2130 0168 9642     		.uleb128 0x2116
 2131 016a 19       		.uleb128 0x19
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 54


 2132 016b 01       		.uleb128 0x1
 2133 016c 13       		.uleb128 0x13
 2134 016d 00       		.byte	0
 2135 016e 00       		.byte	0
 2136 016f 19       		.uleb128 0x19
 2137 0170 34       		.uleb128 0x34
 2138 0171 00       		.byte	0
 2139 0172 03       		.uleb128 0x3
 2140 0173 0E       		.uleb128 0xe
 2141 0174 3A       		.uleb128 0x3a
 2142 0175 0B       		.uleb128 0xb
 2143 0176 3B       		.uleb128 0x3b
 2144 0177 05       		.uleb128 0x5
 2145 0178 49       		.uleb128 0x49
 2146 0179 13       		.uleb128 0x13
 2147 017a 02       		.uleb128 0x2
 2148 017b 18       		.uleb128 0x18
 2149 017c 00       		.byte	0
 2150 017d 00       		.byte	0
 2151 017e 1A       		.uleb128 0x1a
 2152 017f 34       		.uleb128 0x34
 2153 0180 00       		.byte	0
 2154 0181 03       		.uleb128 0x3
 2155 0182 0E       		.uleb128 0xe
 2156 0183 3A       		.uleb128 0x3a
 2157 0184 0B       		.uleb128 0xb
 2158 0185 3B       		.uleb128 0x3b
 2159 0186 05       		.uleb128 0x5
 2160 0187 49       		.uleb128 0x49
 2161 0188 13       		.uleb128 0x13
 2162 0189 00       		.byte	0
 2163 018a 00       		.byte	0
 2164 018b 1B       		.uleb128 0x1b
 2165 018c 34       		.uleb128 0x34
 2166 018d 00       		.byte	0
 2167 018e 03       		.uleb128 0x3
 2168 018f 0E       		.uleb128 0xe
 2169 0190 3A       		.uleb128 0x3a
 2170 0191 0B       		.uleb128 0xb
 2171 0192 3B       		.uleb128 0x3b
 2172 0193 0B       		.uleb128 0xb
 2173 0194 49       		.uleb128 0x49
 2174 0195 13       		.uleb128 0x13
 2175 0196 3F       		.uleb128 0x3f
 2176 0197 19       		.uleb128 0x19
 2177 0198 02       		.uleb128 0x2
 2178 0199 18       		.uleb128 0x18
 2179 019a 00       		.byte	0
 2180 019b 00       		.byte	0
 2181 019c 1C       		.uleb128 0x1c
 2182 019d 2E       		.uleb128 0x2e
 2183 019e 01       		.byte	0x1
 2184 019f 3F       		.uleb128 0x3f
 2185 01a0 19       		.uleb128 0x19
 2186 01a1 03       		.uleb128 0x3
 2187 01a2 0E       		.uleb128 0xe
 2188 01a3 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 55


 2189 01a4 0B       		.uleb128 0xb
 2190 01a5 3B       		.uleb128 0x3b
 2191 01a6 0B       		.uleb128 0xb
 2192 01a7 27       		.uleb128 0x27
 2193 01a8 19       		.uleb128 0x19
 2194 01a9 3C       		.uleb128 0x3c
 2195 01aa 19       		.uleb128 0x19
 2196 01ab 01       		.uleb128 0x1
 2197 01ac 13       		.uleb128 0x13
 2198 01ad 00       		.byte	0
 2199 01ae 00       		.byte	0
 2200 01af 1D       		.uleb128 0x1d
 2201 01b0 05       		.uleb128 0x5
 2202 01b1 00       		.byte	0
 2203 01b2 49       		.uleb128 0x49
 2204 01b3 13       		.uleb128 0x13
 2205 01b4 00       		.byte	0
 2206 01b5 00       		.byte	0
 2207 01b6 1E       		.uleb128 0x1e
 2208 01b7 2E       		.uleb128 0x2e
 2209 01b8 01       		.byte	0x1
 2210 01b9 3F       		.uleb128 0x3f
 2211 01ba 19       		.uleb128 0x19
 2212 01bb 03       		.uleb128 0x3
 2213 01bc 0E       		.uleb128 0xe
 2214 01bd 3A       		.uleb128 0x3a
 2215 01be 0B       		.uleb128 0xb
 2216 01bf 3B       		.uleb128 0x3b
 2217 01c0 0B       		.uleb128 0xb
 2218 01c1 27       		.uleb128 0x27
 2219 01c2 19       		.uleb128 0x19
 2220 01c3 49       		.uleb128 0x49
 2221 01c4 13       		.uleb128 0x13
 2222 01c5 3C       		.uleb128 0x3c
 2223 01c6 19       		.uleb128 0x19
 2224 01c7 01       		.uleb128 0x1
 2225 01c8 13       		.uleb128 0x13
 2226 01c9 00       		.byte	0
 2227 01ca 00       		.byte	0
 2228 01cb 1F       		.uleb128 0x1f
 2229 01cc 2E       		.uleb128 0x2e
 2230 01cd 01       		.byte	0x1
 2231 01ce 3F       		.uleb128 0x3f
 2232 01cf 19       		.uleb128 0x19
 2233 01d0 03       		.uleb128 0x3
 2234 01d1 0E       		.uleb128 0xe
 2235 01d2 3A       		.uleb128 0x3a
 2236 01d3 0B       		.uleb128 0xb
 2237 01d4 3B       		.uleb128 0x3b
 2238 01d5 0B       		.uleb128 0xb
 2239 01d6 27       		.uleb128 0x27
 2240 01d7 19       		.uleb128 0x19
 2241 01d8 3C       		.uleb128 0x3c
 2242 01d9 19       		.uleb128 0x19
 2243 01da 00       		.byte	0
 2244 01db 00       		.byte	0
 2245 01dc 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 56


 2246              		.section	.debug_loc,"",%progbits
 2247              	.Ldebug_loc0:
 2248              	.LLST0:
 2249 0000 7C000000 		.4byte	.LVL5
 2250 0004 80000000 		.4byte	.LVL6
 2251 0008 0200     		.2byte	0x2
 2252 000a 30       		.byte	0x30
 2253 000b 9F       		.byte	0x9f
 2254 000c 80000000 		.4byte	.LVL6
 2255 0010 4A010000 		.4byte	.LVL27
 2256 0014 0100     		.2byte	0x1
 2257 0016 54       		.byte	0x54
 2258 0017 00000000 		.4byte	0
 2259 001b 00000000 		.4byte	0
 2260              	.LLST1:
 2261 001f 70000000 		.4byte	.LVL2
 2262 0023 76000000 		.4byte	.LVL3
 2263 0027 0700     		.2byte	0x7
 2264 0029 71       		.byte	0x71
 2265 002a 00       		.sleb128 0
 2266 002b 40       		.byte	0x40
 2267 002c 49       		.byte	0x49
 2268 002d 24       		.byte	0x24
 2269 002e 21       		.byte	0x21
 2270 002f 9F       		.byte	0x9f
 2271 0030 7A000000 		.4byte	.LVL4
 2272 0034 80000000 		.4byte	.LVL6
 2273 0038 0100     		.2byte	0x1
 2274 003a 53       		.byte	0x53
 2275 003b 8C000000 		.4byte	.LVL7
 2276 003f A4000000 		.4byte	.LVL9
 2277 0043 0100     		.2byte	0x1
 2278 0045 53       		.byte	0x53
 2279 0046 A4000000 		.4byte	.LVL9
 2280 004a A6000000 		.4byte	.LVL10
 2281 004e 0200     		.2byte	0x2
 2282 0050 72       		.byte	0x72
 2283 0051 00       		.sleb128 0
 2284 0052 A6000000 		.4byte	.LVL10
 2285 0056 B4000000 		.4byte	.LVL11
 2286 005a 0700     		.2byte	0x7
 2287 005c 74       		.byte	0x74
 2288 005d 00       		.sleb128 0
 2289 005e 32       		.byte	0x32
 2290 005f 24       		.byte	0x24
 2291 0060 70       		.byte	0x70
 2292 0061 00       		.sleb128 0
 2293 0062 22       		.byte	0x22
 2294 0063 B4000000 		.4byte	.LVL11
 2295 0067 B8000000 		.4byte	.LVL12
 2296 006b 1E00     		.2byte	0x1e
 2297 006d 74       		.byte	0x74
 2298 006e 00       		.sleb128 0
 2299 006f 32       		.byte	0x32
 2300 0070 24       		.byte	0x24
 2301 0071 03       		.byte	0x3
 2302 0072 00000000 		.4byte	.LANCHOR0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 57


 2303 0076 22       		.byte	0x22
 2304 0077 06       		.byte	0x6
 2305 0078 0A       		.byte	0xa
 2306 0079 0037     		.2byte	0x3700
 2307 007b 1A       		.byte	0x1a
 2308 007c 74       		.byte	0x74
 2309 007d 00       		.sleb128 0
 2310 007e 03       		.byte	0x3
 2311 007f 08000000 		.4byte	.LANCHOR0+8
 2312 0083 22       		.byte	0x22
 2313 0084 94       		.byte	0x94
 2314 0085 01       		.byte	0x1
 2315 0086 08       		.byte	0x8
 2316 0087 FF       		.byte	0xff
 2317 0088 1A       		.byte	0x1a
 2318 0089 21       		.byte	0x21
 2319 008a 9F       		.byte	0x9f
 2320 008b B8000000 		.4byte	.LVL12
 2321 008f C0000000 		.4byte	.LVL13
 2322 0093 1A00     		.2byte	0x1a
 2323 0095 74       		.byte	0x74
 2324 0096 00       		.sleb128 0
 2325 0097 32       		.byte	0x32
 2326 0098 24       		.byte	0x24
 2327 0099 72       		.byte	0x72
 2328 009a 00       		.sleb128 0
 2329 009b 22       		.byte	0x22
 2330 009c 06       		.byte	0x6
 2331 009d 0A       		.byte	0xa
 2332 009e 0037     		.2byte	0x3700
 2333 00a0 1A       		.byte	0x1a
 2334 00a1 72       		.byte	0x72
 2335 00a2 00       		.sleb128 0
 2336 00a3 74       		.byte	0x74
 2337 00a4 00       		.sleb128 0
 2338 00a5 22       		.byte	0x22
 2339 00a6 23       		.byte	0x23
 2340 00a7 08       		.uleb128 0x8
 2341 00a8 94       		.byte	0x94
 2342 00a9 01       		.byte	0x1
 2343 00aa 08       		.byte	0x8
 2344 00ab FF       		.byte	0xff
 2345 00ac 1A       		.byte	0x1a
 2346 00ad 21       		.byte	0x21
 2347 00ae 9F       		.byte	0x9f
 2348 00af C0000000 		.4byte	.LVL13
 2349 00b3 D0000000 		.4byte	.LVL14
 2350 00b7 1E00     		.2byte	0x1e
 2351 00b9 74       		.byte	0x74
 2352 00ba 00       		.sleb128 0
 2353 00bb 32       		.byte	0x32
 2354 00bc 24       		.byte	0x24
 2355 00bd 03       		.byte	0x3
 2356 00be 00000000 		.4byte	.LANCHOR0
 2357 00c2 22       		.byte	0x22
 2358 00c3 06       		.byte	0x6
 2359 00c4 0A       		.byte	0xa
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 58


 2360 00c5 0037     		.2byte	0x3700
 2361 00c7 1A       		.byte	0x1a
 2362 00c8 74       		.byte	0x74
 2363 00c9 00       		.sleb128 0
 2364 00ca 03       		.byte	0x3
 2365 00cb 08000000 		.4byte	.LANCHOR0+8
 2366 00cf 22       		.byte	0x22
 2367 00d0 94       		.byte	0x94
 2368 00d1 01       		.byte	0x1
 2369 00d2 08       		.byte	0x8
 2370 00d3 FF       		.byte	0xff
 2371 00d4 1A       		.byte	0x1a
 2372 00d5 21       		.byte	0x21
 2373 00d6 9F       		.byte	0x9f
 2374 00d7 D0000000 		.4byte	.LVL14
 2375 00db D6000000 		.4byte	.LVL15
 2376 00df 0100     		.2byte	0x1
 2377 00e1 53       		.byte	0x53
 2378 00e2 D6000000 		.4byte	.LVL15
 2379 00e6 DE000000 		.4byte	.LVL16
 2380 00ea 1500     		.2byte	0x15
 2381 00ec 71       		.byte	0x71
 2382 00ed 00       		.sleb128 0
 2383 00ee 0A       		.byte	0xa
 2384 00ef 0037     		.2byte	0x3700
 2385 00f1 1A       		.byte	0x1a
 2386 00f2 74       		.byte	0x74
 2387 00f3 00       		.sleb128 0
 2388 00f4 03       		.byte	0x3
 2389 00f5 08000000 		.4byte	.LANCHOR0+8
 2390 00f9 22       		.byte	0x22
 2391 00fa 94       		.byte	0x94
 2392 00fb 01       		.byte	0x1
 2393 00fc 08       		.byte	0x8
 2394 00fd FF       		.byte	0xff
 2395 00fe 1A       		.byte	0x1a
 2396 00ff 21       		.byte	0x21
 2397 0100 9F       		.byte	0x9f
 2398 0101 DE000000 		.4byte	.LVL16
 2399 0105 E6000000 		.4byte	.LVL17
 2400 0109 1400     		.2byte	0x14
 2401 010b 71       		.byte	0x71
 2402 010c 00       		.sleb128 0
 2403 010d 0A       		.byte	0xa
 2404 010e 0037     		.2byte	0x3700
 2405 0110 1A       		.byte	0x1a
 2406 0111 72       		.byte	0x72
 2407 0112 00       		.sleb128 0
 2408 0113 74       		.byte	0x74
 2409 0114 00       		.sleb128 0
 2410 0115 22       		.byte	0x22
 2411 0116 23       		.byte	0x23
 2412 0117 08       		.uleb128 0x8
 2413 0118 94       		.byte	0x94
 2414 0119 01       		.byte	0x1
 2415 011a 08       		.byte	0x8
 2416 011b FF       		.byte	0xff
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 59


 2417 011c 1A       		.byte	0x1a
 2418 011d 21       		.byte	0x21
 2419 011e 9F       		.byte	0x9f
 2420 011f E6000000 		.4byte	.LVL17
 2421 0123 E8000000 		.4byte	.LVL18
 2422 0127 1500     		.2byte	0x15
 2423 0129 71       		.byte	0x71
 2424 012a 00       		.sleb128 0
 2425 012b 0A       		.byte	0xa
 2426 012c 0037     		.2byte	0x3700
 2427 012e 1A       		.byte	0x1a
 2428 012f 74       		.byte	0x74
 2429 0130 00       		.sleb128 0
 2430 0131 03       		.byte	0x3
 2431 0132 08000000 		.4byte	.LANCHOR0+8
 2432 0136 22       		.byte	0x22
 2433 0137 94       		.byte	0x94
 2434 0138 01       		.byte	0x1
 2435 0139 08       		.byte	0x8
 2436 013a FF       		.byte	0xff
 2437 013b 1A       		.byte	0x1a
 2438 013c 21       		.byte	0x21
 2439 013d 9F       		.byte	0x9f
 2440 013e E8000000 		.4byte	.LVL18
 2441 0142 F2000000 		.4byte	.LVL19
 2442 0146 1E00     		.2byte	0x1e
 2443 0148 74       		.byte	0x74
 2444 0149 00       		.sleb128 0
 2445 014a 32       		.byte	0x32
 2446 014b 24       		.byte	0x24
 2447 014c 03       		.byte	0x3
 2448 014d 00000000 		.4byte	.LANCHOR0
 2449 0151 22       		.byte	0x22
 2450 0152 06       		.byte	0x6
 2451 0153 0A       		.byte	0xa
 2452 0154 0037     		.2byte	0x3700
 2453 0156 1A       		.byte	0x1a
 2454 0157 74       		.byte	0x74
 2455 0158 00       		.sleb128 0
 2456 0159 03       		.byte	0x3
 2457 015a 08000000 		.4byte	.LANCHOR0+8
 2458 015e 22       		.byte	0x22
 2459 015f 94       		.byte	0x94
 2460 0160 01       		.byte	0x1
 2461 0161 08       		.byte	0x8
 2462 0162 FF       		.byte	0xff
 2463 0163 1A       		.byte	0x1a
 2464 0164 21       		.byte	0x21
 2465 0165 9F       		.byte	0x9f
 2466 0166 F2000000 		.4byte	.LVL19
 2467 016a FA000000 		.4byte	.LVL20
 2468 016e 1A00     		.2byte	0x1a
 2469 0170 74       		.byte	0x74
 2470 0171 00       		.sleb128 0
 2471 0172 32       		.byte	0x32
 2472 0173 24       		.byte	0x24
 2473 0174 72       		.byte	0x72
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 60


 2474 0175 00       		.sleb128 0
 2475 0176 22       		.byte	0x22
 2476 0177 06       		.byte	0x6
 2477 0178 0A       		.byte	0xa
 2478 0179 0037     		.2byte	0x3700
 2479 017b 1A       		.byte	0x1a
 2480 017c 72       		.byte	0x72
 2481 017d 00       		.sleb128 0
 2482 017e 74       		.byte	0x74
 2483 017f 00       		.sleb128 0
 2484 0180 22       		.byte	0x22
 2485 0181 23       		.byte	0x23
 2486 0182 08       		.uleb128 0x8
 2487 0183 94       		.byte	0x94
 2488 0184 01       		.byte	0x1
 2489 0185 08       		.byte	0x8
 2490 0186 FF       		.byte	0xff
 2491 0187 1A       		.byte	0x1a
 2492 0188 21       		.byte	0x21
 2493 0189 9F       		.byte	0x9f
 2494 018a FA000000 		.4byte	.LVL20
 2495 018e 06010000 		.4byte	.LVL21
 2496 0192 1E00     		.2byte	0x1e
 2497 0194 74       		.byte	0x74
 2498 0195 00       		.sleb128 0
 2499 0196 32       		.byte	0x32
 2500 0197 24       		.byte	0x24
 2501 0198 03       		.byte	0x3
 2502 0199 00000000 		.4byte	.LANCHOR0
 2503 019d 22       		.byte	0x22
 2504 019e 06       		.byte	0x6
 2505 019f 0A       		.byte	0xa
 2506 01a0 0037     		.2byte	0x3700
 2507 01a2 1A       		.byte	0x1a
 2508 01a3 74       		.byte	0x74
 2509 01a4 00       		.sleb128 0
 2510 01a5 03       		.byte	0x3
 2511 01a6 08000000 		.4byte	.LANCHOR0+8
 2512 01aa 22       		.byte	0x22
 2513 01ab 94       		.byte	0x94
 2514 01ac 01       		.byte	0x1
 2515 01ad 08       		.byte	0x8
 2516 01ae FF       		.byte	0xff
 2517 01af 1A       		.byte	0x1a
 2518 01b0 21       		.byte	0x21
 2519 01b1 9F       		.byte	0x9f
 2520 01b2 06010000 		.4byte	.LVL21
 2521 01b6 0C010000 		.4byte	.LVL22
 2522 01ba 1A00     		.2byte	0x1a
 2523 01bc 74       		.byte	0x74
 2524 01bd 00       		.sleb128 0
 2525 01be 32       		.byte	0x32
 2526 01bf 24       		.byte	0x24
 2527 01c0 72       		.byte	0x72
 2528 01c1 00       		.sleb128 0
 2529 01c2 22       		.byte	0x22
 2530 01c3 06       		.byte	0x6
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 61


 2531 01c4 0A       		.byte	0xa
 2532 01c5 0037     		.2byte	0x3700
 2533 01c7 1A       		.byte	0x1a
 2534 01c8 72       		.byte	0x72
 2535 01c9 00       		.sleb128 0
 2536 01ca 74       		.byte	0x74
 2537 01cb 00       		.sleb128 0
 2538 01cc 22       		.byte	0x22
 2539 01cd 23       		.byte	0x23
 2540 01ce 08       		.uleb128 0x8
 2541 01cf 94       		.byte	0x94
 2542 01d0 01       		.byte	0x1
 2543 01d1 08       		.byte	0x8
 2544 01d2 FF       		.byte	0xff
 2545 01d3 1A       		.byte	0x1a
 2546 01d4 21       		.byte	0x21
 2547 01d5 9F       		.byte	0x9f
 2548 01d6 0C010000 		.4byte	.LVL22
 2549 01da 46010000 		.4byte	.LVL26
 2550 01de 1E00     		.2byte	0x1e
 2551 01e0 74       		.byte	0x74
 2552 01e1 00       		.sleb128 0
 2553 01e2 32       		.byte	0x32
 2554 01e3 24       		.byte	0x24
 2555 01e4 03       		.byte	0x3
 2556 01e5 00000000 		.4byte	.LANCHOR0
 2557 01e9 22       		.byte	0x22
 2558 01ea 06       		.byte	0x6
 2559 01eb 0A       		.byte	0xa
 2560 01ec 0037     		.2byte	0x3700
 2561 01ee 1A       		.byte	0x1a
 2562 01ef 74       		.byte	0x74
 2563 01f0 00       		.sleb128 0
 2564 01f1 03       		.byte	0x3
 2565 01f2 08000000 		.4byte	.LANCHOR0+8
 2566 01f6 22       		.byte	0x22
 2567 01f7 94       		.byte	0x94
 2568 01f8 01       		.byte	0x1
 2569 01f9 08       		.byte	0x8
 2570 01fa FF       		.byte	0xff
 2571 01fb 1A       		.byte	0x1a
 2572 01fc 21       		.byte	0x21
 2573 01fd 9F       		.byte	0x9f
 2574 01fe 00000000 		.4byte	0
 2575 0202 00000000 		.4byte	0
 2576              	.LLST2:
 2577 0206 16010000 		.4byte	.LVL23
 2578 020a 30010000 		.4byte	.LVL24
 2579 020e 0100     		.2byte	0x1
 2580 0210 50       		.byte	0x50
 2581 0211 00000000 		.4byte	0
 2582 0215 00000000 		.4byte	0
 2583              	.LLST3:
 2584 0219 00000000 		.4byte	.LVL31
 2585 021d 06000000 		.4byte	.LVL33
 2586 0221 0100     		.2byte	0x1
 2587 0223 50       		.byte	0x50
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 62


 2588 0224 06000000 		.4byte	.LVL33
 2589 0228 20000000 		.4byte	.LVL35
 2590 022c 0100     		.2byte	0x1
 2591 022e 51       		.byte	0x51
 2592 022f 20000000 		.4byte	.LVL35
 2593 0233 22000000 		.4byte	.LVL36
 2594 0237 0100     		.2byte	0x1
 2595 0239 50       		.byte	0x50
 2596 023a 22000000 		.4byte	.LVL36
 2597 023e 4C000000 		.4byte	.LFE8
 2598 0242 0100     		.2byte	0x1
 2599 0244 51       		.byte	0x51
 2600 0245 00000000 		.4byte	0
 2601 0249 00000000 		.4byte	0
 2602              	.LLST4:
 2603 024d 02000000 		.4byte	.LVL32
 2604 0251 06000000 		.4byte	.LVL33
 2605 0255 0200     		.2byte	0x2
 2606 0257 30       		.byte	0x30
 2607 0258 9F       		.byte	0x9f
 2608 0259 0E000000 		.4byte	.LVL34
 2609 025d 20000000 		.4byte	.LVL35
 2610 0261 0100     		.2byte	0x1
 2611 0263 50       		.byte	0x50
 2612 0264 20000000 		.4byte	.LVL35
 2613 0268 22000000 		.4byte	.LVL36
 2614 026c 0200     		.2byte	0x2
 2615 026e 30       		.byte	0x30
 2616 026f 9F       		.byte	0x9f
 2617 0270 22000000 		.4byte	.LVL36
 2618 0274 4C000000 		.4byte	.LFE8
 2619 0278 0100     		.2byte	0x1
 2620 027a 50       		.byte	0x50
 2621 027b 00000000 		.4byte	0
 2622 027f 00000000 		.4byte	0
 2623              	.LLST5:
 2624 0283 00000000 		.4byte	.LVL38
 2625 0287 0A000000 		.4byte	.LVL39
 2626 028b 0100     		.2byte	0x1
 2627 028d 50       		.byte	0x50
 2628 028e 0A000000 		.4byte	.LVL39
 2629 0292 14000000 		.4byte	.LVL41
 2630 0296 0100     		.2byte	0x1
 2631 0298 54       		.byte	0x54
 2632 0299 14000000 		.4byte	.LVL41
 2633 029d 22000000 		.4byte	.LVL43
 2634 02a1 0400     		.2byte	0x4
 2635 02a3 F3       		.byte	0xf3
 2636 02a4 01       		.uleb128 0x1
 2637 02a5 50       		.byte	0x50
 2638 02a6 9F       		.byte	0x9f
 2639 02a7 22000000 		.4byte	.LVL43
 2640 02ab 2A000000 		.4byte	.LVL44
 2641 02af 0100     		.2byte	0x1
 2642 02b1 54       		.byte	0x54
 2643 02b2 2A000000 		.4byte	.LVL44
 2644 02b6 38000000 		.4byte	.LFE9
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 63


 2645 02ba 0400     		.2byte	0x4
 2646 02bc F3       		.byte	0xf3
 2647 02bd 01       		.uleb128 0x1
 2648 02be 50       		.byte	0x50
 2649 02bf 9F       		.byte	0x9f
 2650 02c0 00000000 		.4byte	0
 2651 02c4 00000000 		.4byte	0
 2652              	.LLST6:
 2653 02c8 20000000 		.4byte	.LVL42
 2654 02cc 22000000 		.4byte	.LVL43
 2655 02d0 0100     		.2byte	0x1
 2656 02d2 50       		.byte	0x50
 2657 02d3 2A000000 		.4byte	.LVL44
 2658 02d7 2C000000 		.4byte	.LVL45
 2659 02db 0100     		.2byte	0x1
 2660 02dd 50       		.byte	0x50
 2661 02de 00000000 		.4byte	0
 2662 02e2 00000000 		.4byte	0
 2663              	.LLST7:
 2664 02e6 00000000 		.4byte	.LVL46
 2665 02ea 04000000 		.4byte	.LVL47
 2666 02ee 0100     		.2byte	0x1
 2667 02f0 50       		.byte	0x50
 2668 02f1 04000000 		.4byte	.LVL47
 2669 02f5 10000000 		.4byte	.LFE10
 2670 02f9 0400     		.2byte	0x4
 2671 02fb F3       		.byte	0xf3
 2672 02fc 01       		.uleb128 0x1
 2673 02fd 50       		.byte	0x50
 2674 02fe 9F       		.byte	0x9f
 2675 02ff 00000000 		.4byte	0
 2676 0303 00000000 		.4byte	0
 2677              	.LLST8:
 2678 0307 00000000 		.4byte	.LVL48
 2679 030b 0E000000 		.4byte	.LVL49
 2680 030f 0100     		.2byte	0x1
 2681 0311 50       		.byte	0x50
 2682 0312 0E000000 		.4byte	.LVL49
 2683 0316 1C000000 		.4byte	.LFE12
 2684 031a 0400     		.2byte	0x4
 2685 031c F3       		.byte	0xf3
 2686 031d 01       		.uleb128 0x1
 2687 031e 50       		.byte	0x50
 2688 031f 9F       		.byte	0x9f
 2689 0320 00000000 		.4byte	0
 2690 0324 00000000 		.4byte	0
 2691              	.LLST9:
 2692 0328 00000000 		.4byte	.LVL50
 2693 032c 0E000000 		.4byte	.LVL51
 2694 0330 0100     		.2byte	0x1
 2695 0332 50       		.byte	0x50
 2696 0333 0E000000 		.4byte	.LVL51
 2697 0337 18000000 		.4byte	.LFE13
 2698 033b 0400     		.2byte	0x4
 2699 033d F3       		.byte	0xf3
 2700 033e 01       		.uleb128 0x1
 2701 033f 50       		.byte	0x50
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 64


 2702 0340 9F       		.byte	0x9f
 2703 0341 00000000 		.4byte	0
 2704 0345 00000000 		.4byte	0
 2705              	.LLST10:
 2706 0349 00000000 		.4byte	.LVL52
 2707 034d 04000000 		.4byte	.LVL53
 2708 0351 0100     		.2byte	0x1
 2709 0353 50       		.byte	0x50
 2710 0354 04000000 		.4byte	.LVL53
 2711 0358 10000000 		.4byte	.LFE14
 2712 035c 0400     		.2byte	0x4
 2713 035e F3       		.byte	0xf3
 2714 035f 01       		.uleb128 0x1
 2715 0360 50       		.byte	0x50
 2716 0361 9F       		.byte	0x9f
 2717 0362 00000000 		.4byte	0
 2718 0366 00000000 		.4byte	0
 2719              	.LLST11:
 2720 036a 00000000 		.4byte	.LVL54
 2721 036e 04000000 		.4byte	.LVL55
 2722 0372 0100     		.2byte	0x1
 2723 0374 50       		.byte	0x50
 2724 0375 04000000 		.4byte	.LVL55
 2725 0379 10000000 		.4byte	.LFE15
 2726 037d 0400     		.2byte	0x4
 2727 037f F3       		.byte	0xf3
 2728 0380 01       		.uleb128 0x1
 2729 0381 50       		.byte	0x50
 2730 0382 9F       		.byte	0x9f
 2731 0383 00000000 		.4byte	0
 2732 0387 00000000 		.4byte	0
 2733              	.LLST12:
 2734 038b 00000000 		.4byte	.LVL56
 2735 038f 0C000000 		.4byte	.LVL57
 2736 0393 0100     		.2byte	0x1
 2737 0395 50       		.byte	0x50
 2738 0396 0C000000 		.4byte	.LVL57
 2739 039a 12000000 		.4byte	.LVL59
 2740 039e 0100     		.2byte	0x1
 2741 03a0 54       		.byte	0x54
 2742 03a1 12000000 		.4byte	.LVL59
 2743 03a5 1C000000 		.4byte	.LFE16
 2744 03a9 0400     		.2byte	0x4
 2745 03ab F3       		.byte	0xf3
 2746 03ac 01       		.uleb128 0x1
 2747 03ad 50       		.byte	0x50
 2748 03ae 9F       		.byte	0x9f
 2749 03af 00000000 		.4byte	0
 2750 03b3 00000000 		.4byte	0
 2751              	.LLST13:
 2752 03b7 00000000 		.4byte	.LVL56
 2753 03bb 0F000000 		.4byte	.LVL58-1
 2754 03bf 0100     		.2byte	0x1
 2755 03c1 51       		.byte	0x51
 2756 03c2 0F000000 		.4byte	.LVL58-1
 2757 03c6 1C000000 		.4byte	.LFE16
 2758 03ca 0400     		.2byte	0x4
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 65


 2759 03cc F3       		.byte	0xf3
 2760 03cd 01       		.uleb128 0x1
 2761 03ce 51       		.byte	0x51
 2762 03cf 9F       		.byte	0x9f
 2763 03d0 00000000 		.4byte	0
 2764 03d4 00000000 		.4byte	0
 2765              	.LLST14:
 2766 03d8 00000000 		.4byte	.LVL60
 2767 03dc 0C000000 		.4byte	.LVL61
 2768 03e0 0100     		.2byte	0x1
 2769 03e2 50       		.byte	0x50
 2770 03e3 0C000000 		.4byte	.LVL61
 2771 03e7 12000000 		.4byte	.LVL63
 2772 03eb 0100     		.2byte	0x1
 2773 03ed 54       		.byte	0x54
 2774 03ee 12000000 		.4byte	.LVL63
 2775 03f2 1C000000 		.4byte	.LFE17
 2776 03f6 0400     		.2byte	0x4
 2777 03f8 F3       		.byte	0xf3
 2778 03f9 01       		.uleb128 0x1
 2779 03fa 50       		.byte	0x50
 2780 03fb 9F       		.byte	0x9f
 2781 03fc 00000000 		.4byte	0
 2782 0400 00000000 		.4byte	0
 2783              	.LLST15:
 2784 0404 00000000 		.4byte	.LVL60
 2785 0408 0F000000 		.4byte	.LVL62-1
 2786 040c 0100     		.2byte	0x1
 2787 040e 51       		.byte	0x51
 2788 040f 0F000000 		.4byte	.LVL62-1
 2789 0413 16000000 		.4byte	.LVL64
 2790 0417 0100     		.2byte	0x1
 2791 0419 55       		.byte	0x55
 2792 041a 16000000 		.4byte	.LVL64
 2793 041e 1C000000 		.4byte	.LFE17
 2794 0422 0800     		.2byte	0x8
 2795 0424 F3       		.byte	0xf3
 2796 0425 01       		.uleb128 0x1
 2797 0426 50       		.byte	0x50
 2798 0427 32       		.byte	0x32
 2799 0428 24       		.byte	0x24
 2800 0429 73       		.byte	0x73
 2801 042a 00       		.sleb128 0
 2802 042b 22       		.byte	0x22
 2803 042c 00000000 		.4byte	0
 2804 0430 00000000 		.4byte	0
 2805              	.LLST16:
 2806 0434 00000000 		.4byte	.LVL65
 2807 0438 0C000000 		.4byte	.LVL66
 2808 043c 0100     		.2byte	0x1
 2809 043e 50       		.byte	0x50
 2810 043f 0C000000 		.4byte	.LVL66
 2811 0443 44000000 		.4byte	.LVL72
 2812 0447 0100     		.2byte	0x1
 2813 0449 54       		.byte	0x54
 2814 044a 44000000 		.4byte	.LVL72
 2815 044e 5C000000 		.4byte	.LFE18
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 66


 2816 0452 0400     		.2byte	0x4
 2817 0454 F3       		.byte	0xf3
 2818 0455 01       		.uleb128 0x1
 2819 0456 50       		.byte	0x50
 2820 0457 9F       		.byte	0x9f
 2821 0458 00000000 		.4byte	0
 2822 045c 00000000 		.4byte	0
 2823              	.LLST17:
 2824 0460 00000000 		.4byte	.LVL65
 2825 0464 0F000000 		.4byte	.LVL67-1
 2826 0468 0100     		.2byte	0x1
 2827 046a 51       		.byte	0x51
 2828 046b 0F000000 		.4byte	.LVL67-1
 2829 046f 1A000000 		.4byte	.LVL68
 2830 0473 0400     		.2byte	0x4
 2831 0475 F3       		.byte	0xf3
 2832 0476 01       		.uleb128 0x1
 2833 0477 51       		.byte	0x51
 2834 0478 9F       		.byte	0x9f
 2835 0479 1A000000 		.4byte	.LVL68
 2836 047d 28000000 		.4byte	.LVL69
 2837 0481 0100     		.2byte	0x1
 2838 0483 51       		.byte	0x51
 2839 0484 32000000 		.4byte	.LVL70
 2840 0488 36000000 		.4byte	.LVL71
 2841 048c 0100     		.2byte	0x1
 2842 048e 51       		.byte	0x51
 2843 048f 00000000 		.4byte	0
 2844 0493 00000000 		.4byte	0
 2845              	.LLST18:
 2846 0497 00000000 		.4byte	.LVL74
 2847 049b 0C000000 		.4byte	.LVL75
 2848 049f 0100     		.2byte	0x1
 2849 04a1 50       		.byte	0x50
 2850 04a2 0C000000 		.4byte	.LVL75
 2851 04a6 26000000 		.4byte	.LVL79
 2852 04aa 0100     		.2byte	0x1
 2853 04ac 55       		.byte	0x55
 2854 04ad 26000000 		.4byte	.LVL79
 2855 04b1 40000000 		.4byte	.LFE19
 2856 04b5 0400     		.2byte	0x4
 2857 04b7 F3       		.byte	0xf3
 2858 04b8 01       		.uleb128 0x1
 2859 04b9 50       		.byte	0x50
 2860 04ba 9F       		.byte	0x9f
 2861 04bb 00000000 		.4byte	0
 2862 04bf 00000000 		.4byte	0
 2863              	.LLST19:
 2864 04c3 00000000 		.4byte	.LVL74
 2865 04c7 0F000000 		.4byte	.LVL76-1
 2866 04cb 0100     		.2byte	0x1
 2867 04cd 51       		.byte	0x51
 2868 04ce 0F000000 		.4byte	.LVL76-1
 2869 04d2 1A000000 		.4byte	.LVL77
 2870 04d6 0400     		.2byte	0x4
 2871 04d8 F3       		.byte	0xf3
 2872 04d9 01       		.uleb128 0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 67


 2873 04da 51       		.byte	0x51
 2874 04db 9F       		.byte	0x9f
 2875 04dc 1A000000 		.4byte	.LVL77
 2876 04e0 23000000 		.4byte	.LVL78-1
 2877 04e4 0100     		.2byte	0x1
 2878 04e6 50       		.byte	0x50
 2879 04e7 00000000 		.4byte	0
 2880 04eb 00000000 		.4byte	0
 2881              	.LLST20:
 2882 04ef 00000000 		.4byte	.LVL81
 2883 04f3 0C000000 		.4byte	.LVL82
 2884 04f7 0100     		.2byte	0x1
 2885 04f9 50       		.byte	0x50
 2886 04fa 0C000000 		.4byte	.LVL82
 2887 04fe 28000000 		.4byte	.LVL87
 2888 0502 0100     		.2byte	0x1
 2889 0504 54       		.byte	0x54
 2890 0505 28000000 		.4byte	.LVL87
 2891 0509 48000000 		.4byte	.LFE20
 2892 050d 0400     		.2byte	0x4
 2893 050f F3       		.byte	0xf3
 2894 0510 01       		.uleb128 0x1
 2895 0511 50       		.byte	0x50
 2896 0512 9F       		.byte	0x9f
 2897 0513 00000000 		.4byte	0
 2898 0517 00000000 		.4byte	0
 2899              	.LLST21:
 2900 051b 00000000 		.4byte	.LVL81
 2901 051f 0F000000 		.4byte	.LVL83-1
 2902 0523 0100     		.2byte	0x1
 2903 0525 51       		.byte	0x51
 2904 0526 0F000000 		.4byte	.LVL83-1
 2905 052a 1A000000 		.4byte	.LVL84
 2906 052e 0400     		.2byte	0x4
 2907 0530 F3       		.byte	0xf3
 2908 0531 01       		.uleb128 0x1
 2909 0532 51       		.byte	0x51
 2910 0533 9F       		.byte	0x9f
 2911 0534 1A000000 		.4byte	.LVL84
 2912 0538 1D000000 		.4byte	.LVL85-1
 2913 053c 0100     		.2byte	0x1
 2914 053e 50       		.byte	0x50
 2915 053f 00000000 		.4byte	0
 2916 0543 00000000 		.4byte	0
 2917              		.section	.debug_aranges,"",%progbits
 2918 0000 AC000000 		.4byte	0xac
 2919 0004 0200     		.2byte	0x2
 2920 0006 00000000 		.4byte	.Ldebug_info0
 2921 000a 04       		.byte	0x4
 2922 000b 00       		.byte	0
 2923 000c 0000     		.2byte	0
 2924 000e 0000     		.2byte	0
 2925 0010 00000000 		.4byte	.LFB3
 2926 0014 C0010000 		.4byte	.LFE3-.LFB3
 2927 0018 00000000 		.4byte	.LFB4
 2928 001c 30000000 		.4byte	.LFE4-.LFB4
 2929 0020 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 68


 2930 0024 20000000 		.4byte	.LFE2-.LFB2
 2931 0028 00000000 		.4byte	.LFB5
 2932 002c 10000000 		.4byte	.LFE5-.LFB5
 2933 0030 00000000 		.4byte	.LFB6
 2934 0034 0C000000 		.4byte	.LFE6-.LFB6
 2935 0038 00000000 		.4byte	.LFB7
 2936 003c 02000000 		.4byte	.LFE7-.LFB7
 2937 0040 00000000 		.4byte	.LFB8
 2938 0044 4C000000 		.4byte	.LFE8-.LFB8
 2939 0048 00000000 		.4byte	.LFB9
 2940 004c 38000000 		.4byte	.LFE9-.LFB9
 2941 0050 00000000 		.4byte	.LFB10
 2942 0054 10000000 		.4byte	.LFE10-.LFB10
 2943 0058 00000000 		.4byte	.LFB11
 2944 005c 14000000 		.4byte	.LFE11-.LFB11
 2945 0060 00000000 		.4byte	.LFB12
 2946 0064 1C000000 		.4byte	.LFE12-.LFB12
 2947 0068 00000000 		.4byte	.LFB13
 2948 006c 18000000 		.4byte	.LFE13-.LFB13
 2949 0070 00000000 		.4byte	.LFB14
 2950 0074 10000000 		.4byte	.LFE14-.LFB14
 2951 0078 00000000 		.4byte	.LFB15
 2952 007c 10000000 		.4byte	.LFE15-.LFB15
 2953 0080 00000000 		.4byte	.LFB16
 2954 0084 1C000000 		.4byte	.LFE16-.LFB16
 2955 0088 00000000 		.4byte	.LFB17
 2956 008c 1C000000 		.4byte	.LFE17-.LFB17
 2957 0090 00000000 		.4byte	.LFB18
 2958 0094 5C000000 		.4byte	.LFE18-.LFB18
 2959 0098 00000000 		.4byte	.LFB19
 2960 009c 40000000 		.4byte	.LFE19-.LFB19
 2961 00a0 00000000 		.4byte	.LFB20
 2962 00a4 48000000 		.4byte	.LFE20-.LFB20
 2963 00a8 00000000 		.4byte	0
 2964 00ac 00000000 		.4byte	0
 2965              		.section	.debug_ranges,"",%progbits
 2966              	.Ldebug_ranges0:
 2967 0000 00000000 		.4byte	.LFB3
 2968 0004 C0010000 		.4byte	.LFE3
 2969 0008 00000000 		.4byte	.LFB4
 2970 000c 30000000 		.4byte	.LFE4
 2971 0010 00000000 		.4byte	.LFB2
 2972 0014 20000000 		.4byte	.LFE2
 2973 0018 00000000 		.4byte	.LFB5
 2974 001c 10000000 		.4byte	.LFE5
 2975 0020 00000000 		.4byte	.LFB6
 2976 0024 0C000000 		.4byte	.LFE6
 2977 0028 00000000 		.4byte	.LFB7
 2978 002c 02000000 		.4byte	.LFE7
 2979 0030 00000000 		.4byte	.LFB8
 2980 0034 4C000000 		.4byte	.LFE8
 2981 0038 00000000 		.4byte	.LFB9
 2982 003c 38000000 		.4byte	.LFE9
 2983 0040 00000000 		.4byte	.LFB10
 2984 0044 10000000 		.4byte	.LFE10
 2985 0048 00000000 		.4byte	.LFB11
 2986 004c 14000000 		.4byte	.LFE11
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 69


 2987 0050 00000000 		.4byte	.LFB12
 2988 0054 1C000000 		.4byte	.LFE12
 2989 0058 00000000 		.4byte	.LFB13
 2990 005c 18000000 		.4byte	.LFE13
 2991 0060 00000000 		.4byte	.LFB14
 2992 0064 10000000 		.4byte	.LFE14
 2993 0068 00000000 		.4byte	.LFB15
 2994 006c 10000000 		.4byte	.LFE15
 2995 0070 00000000 		.4byte	.LFB16
 2996 0074 1C000000 		.4byte	.LFE16
 2997 0078 00000000 		.4byte	.LFB17
 2998 007c 1C000000 		.4byte	.LFE17
 2999 0080 00000000 		.4byte	.LFB18
 3000 0084 5C000000 		.4byte	.LFE18
 3001 0088 00000000 		.4byte	.LFB19
 3002 008c 40000000 		.4byte	.LFE19
 3003 0090 00000000 		.4byte	.LFB20
 3004 0094 48000000 		.4byte	.LFE20
 3005 0098 00000000 		.4byte	0
 3006 009c 00000000 		.4byte	0
 3007              		.section	.debug_line,"",%progbits
 3008              	.Ldebug_line0:
 3009 0000 B0020000 		.section	.debug_str,"MS",%progbits,1
 3009      02004D00 
 3009      00000201 
 3009      FB0E0D00 
 3009      01010101 
 3010              	.LASF10:
 3011 0000 75696E74 		.ascii	"uint16\000"
 3011      313600
 3012              	.LASF50:
 3013 0007 61646347 		.ascii	"adcGain\000"
 3013      61696E00 
 3014              	.LASF24:
 3015 000f 636F756E 		.ascii	"counts\000"
 3015      747300
 3016              	.LASF55:
 3017 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 3017      436F756E 
 3017      7473546F 
 3017      5F566F6C 
 3017      747300
 3018              	.LASF26:
 3019 0029 4144435F 		.ascii	"ADC_Init\000"
 3019      496E6974 
 3019      00
 3020              	.LASF7:
 3021 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 3021      206C6F6E 
 3021      6720756E 
 3021      7369676E 
 3021      65642069 
 3022              	.LASF25:
 3023 0049 4144435F 		.ascii	"ADC_InputsPlacement\000"
 3023      496E7075 
 3023      7473506C 
 3023      6163656D 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 70


 3023      656E7400 
 3024              	.LASF30:
 3025 005d 4144435F 		.ascii	"ADC_StartConvert\000"
 3025      53746172 
 3025      74436F6E 
 3025      76657274 
 3025      00
 3026              	.LASF6:
 3027 006e 6C6F6E67 		.ascii	"long long int\000"
 3027      206C6F6E 
 3027      6720696E 
 3027      7400
 3028              	.LASF0:
 3029 007c 7369676E 		.ascii	"signed char\000"
 3029      65642063 
 3029      68617200 
 3030              	.LASF32:
 3031 0088 73746174 		.ascii	"status\000"
 3031      757300
 3032              	.LASF13:
 3033 008f 696E7433 		.ascii	"int32\000"
 3033      3200
 3034              	.LASF28:
 3035 0095 4144435F 		.ascii	"ADC_Start\000"
 3035      53746172 
 3035      7400
 3036              	.LASF4:
 3037 009f 6C6F6E67 		.ascii	"long int\000"
 3037      20696E74 
 3037      00
 3038              	.LASF54:
 3039 00a8 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 3039      436F756E 
 3039      7473546F 
 3039      5F75566F 
 3039      6C747300 
 3040              	.LASF60:
 3041 00bc 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 3041      636F756E 
 3041      74735065 
 3041      72313056 
 3041      6F6C7400 
 3042              	.LASF9:
 3043 00d0 75696E74 		.ascii	"uint8\000"
 3043      3800
 3044              	.LASF62:
 3045 00d6 43794465 		.ascii	"CyDelayUs\000"
 3045      6C617955 
 3045      7300
 3046              	.LASF16:
 3047 00e0 646F7562 		.ascii	"double\000"
 3047      6C6500
 3048              	.LASF11:
 3049 00e7 75696E74 		.ascii	"uint32\000"
 3049      333200
 3050              	.LASF39:
 3051 00ee 6D61736B 		.ascii	"mask\000"
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 71


 3051      00
 3052              	.LASF58:
 3053 00f3 4144435F 		.ascii	"ADC_initVar\000"
 3053      696E6974 
 3053      56617200 
 3054              	.LASF35:
 3055 00ff 7265744D 		.ascii	"retMode\000"
 3055      6F646500 
 3056              	.LASF45:
 3057 0107 4144435F 		.ascii	"ADC_SetLimitMask\000"
 3057      5365744C 
 3057      696D6974 
 3057      4D61736B 
 3057      00
 3058              	.LASF8:
 3059 0118 756E7369 		.ascii	"unsigned int\000"
 3059      676E6564 
 3059      20696E74 
 3059      00
 3060              	.LASF66:
 3061 0125 75566F6C 		.ascii	"uVolts\000"
 3061      747300
 3062              	.LASF5:
 3063 012c 6C6F6E67 		.ascii	"long unsigned int\000"
 3063      20756E73 
 3063      69676E65 
 3063      6420696E 
 3063      7400
 3064              	.LASF46:
 3065 013e 4144435F 		.ascii	"ADC_SetSatMask\000"
 3065      53657453 
 3065      61744D61 
 3065      736B00
 3066              	.LASF56:
 3067 014d 766F6C74 		.ascii	"volts\000"
 3067      7300
 3068              	.LASF23:
 3069 0153 746D7052 		.ascii	"tmpRegVal\000"
 3069      65675661 
 3069      6C00
 3070              	.LASF3:
 3071 015d 73686F72 		.ascii	"short unsigned int\000"
 3071      7420756E 
 3071      7369676E 
 3071      65642069 
 3071      6E7400
 3072              	.LASF67:
 3073 0170 4379496E 		.ascii	"CyIntSetVector\000"
 3073      74536574 
 3073      56656374 
 3073      6F7200
 3074              	.LASF31:
 3075 017f 4144435F 		.ascii	"ADC_StopConvert\000"
 3075      53746F70 
 3075      436F6E76 
 3075      65727400 
 3076              	.LASF53:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 72


 3077 018f 6D566F6C 		.ascii	"mVolts\000"
 3077      747300
 3078              	.LASF19:
 3079 0196 72656733 		.ascii	"reg32\000"
 3079      3200
 3080              	.LASF14:
 3081 019c 666C6F61 		.ascii	"float32\000"
 3081      74333200 
 3082              	.LASF21:
 3083 01a4 73697A65 		.ascii	"sizetype\000"
 3083      74797065 
 3083      00
 3084              	.LASF42:
 3085 01ad 6C6F774C 		.ascii	"lowLimit\000"
 3085      696D6974 
 3085      00
 3086              	.LASF43:
 3087 01b6 4144435F 		.ascii	"ADC_SetHighLimit\000"
 3087      53657448 
 3087      6967684C 
 3087      696D6974 
 3087      00
 3088              	.LASF40:
 3089 01c7 4144435F 		.ascii	"ADC_EnableInjection\000"
 3089      456E6162 
 3089      6C65496E 
 3089      6A656374 
 3089      696F6E00 
 3090              	.LASF33:
 3091 01db 4144435F 		.ascii	"ADC_IsEndConversion\000"
 3091      4973456E 
 3091      64436F6E 
 3091      76657273 
 3091      696F6E00 
 3092              	.LASF63:
 3093 01ef 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3093      4320342E 
 3093      392E3320 
 3093      32303135 
 3093      30333033 
 3094 0222 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3094      20726576 
 3094      6973696F 
 3094      6E203232 
 3094      31323230 
 3095 0255 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3095      66756E63 
 3095      74696F6E 
 3095      2D736563 
 3095      74696F6E 
 3096              	.LASF17:
 3097 027d 696E7436 		.ascii	"int64\000"
 3097      3400
 3098              	.LASF61:
 3099 0283 4379496E 		.ascii	"CyIntSetPriority\000"
 3099      74536574 
 3099      5072696F 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 73


 3099      72697479 
 3099      00
 3100              	.LASF38:
 3101 0294 4144435F 		.ascii	"ADC_SetChanMask\000"
 3101      53657443 
 3101      68616E4D 
 3101      61736B00 
 3102              	.LASF49:
 3103 02a4 4144435F 		.ascii	"ADC_SetGain\000"
 3103      53657447 
 3103      61696E00 
 3104              	.LASF15:
 3105 02b0 666C6F61 		.ascii	"float\000"
 3105      7400
 3106              	.LASF44:
 3107 02b6 68696768 		.ascii	"highLimit\000"
 3107      4C696D69 
 3107      7400
 3108              	.LASF51:
 3109 02c0 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 3109      436F756E 
 3109      7473546F 
 3109      5F6D566F 
 3109      6C747300 
 3110              	.LASF41:
 3111 02d4 4144435F 		.ascii	"ADC_SetLowLimit\000"
 3111      5365744C 
 3111      6F774C69 
 3111      6D697400 
 3112              	.LASF68:
 3113 02e4 43794861 		.ascii	"CyHalt\000"
 3113      6C7400
 3114              	.LASF64:
 3115 02eb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 3115      6E657261 
 3115      7465645F 
 3115      536F7572 
 3115      63655C50 
 3116              	.LASF1:
 3117 030a 756E7369 		.ascii	"unsigned char\000"
 3117      676E6564 
 3117      20636861 
 3117      7200
 3118              	.LASF59:
 3119 0318 4144435F 		.ascii	"ADC_offset\000"
 3119      6F666673 
 3119      657400
 3120              	.LASF2:
 3121 0323 73686F72 		.ascii	"short int\000"
 3121      7420696E 
 3121      7400
 3122              	.LASF29:
 3123 032d 4144435F 		.ascii	"ADC_Stop\000"
 3123      53746F70 
 3123      00
 3124              	.LASF22:
 3125 0336 63684E75 		.ascii	"chNum\000"
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cc6ze5Ri.s 			page 74


 3125      6D00
 3126              	.LASF36:
 3127 033c 6368616E 		.ascii	"chan\000"
 3127      00
 3128              	.LASF18:
 3129 0341 63686172 		.ascii	"char\000"
 3129      00
 3130              	.LASF20:
 3131 0346 63796973 		.ascii	"cyisraddress\000"
 3131      72616464 
 3131      72657373 
 3131      00
 3132              	.LASF57:
 3133 0353 4144435F 		.ascii	"ADC_channelsConfig\000"
 3133      6368616E 
 3133      6E656C73 
 3133      436F6E66 
 3133      696700
 3134              	.LASF48:
 3135 0366 6F666673 		.ascii	"offset\000"
 3135      657400
 3136              	.LASF52:
 3137 036d 61646343 		.ascii	"adcCounts\000"
 3137      6F756E74 
 3137      7300
 3138              	.LASF27:
 3139 0377 4144435F 		.ascii	"ADC_Enable\000"
 3139      456E6162 
 3139      6C6500
 3140              	.LASF12:
 3141 0382 696E7431 		.ascii	"int16\000"
 3141      3600
 3142              	.LASF47:
 3143 0388 4144435F 		.ascii	"ADC_SetOffset\000"
 3143      5365744F 
 3143      66667365 
 3143      7400
 3144              	.LASF65:
 3145 0396 433A5C55 		.ascii	"C:\\Users\\mlgjmoor\\Documents\\PSoC Creator\\Nodus"
 3145      73657273 
 3145      5C6D6C67 
 3145      6A6D6F6F 
 3145      725C446F 
 3146 03c4 435C6E6F 		.ascii	"C\\nodusC.cydsn\000"
 3146      64757343 
 3146      2E637964 
 3146      736E00
 3147              	.LASF37:
 3148 03d3 72657375 		.ascii	"result\000"
 3148      6C7400
 3149              	.LASF34:
 3150 03da 4144435F 		.ascii	"ADC_GetResult16\000"
 3150      47657452 
 3150      6573756C 
 3150      74313600 
 3151              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
