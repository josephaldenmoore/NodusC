ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB3:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u, 0x00000500u, 0x00001400u, 0x000014
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 4


 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 0F20     		mov	r0, #15
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  37              		.loc 1 173 0
  38 000a 0F20     		mov	r0, #15
  39 000c 4C49     		ldr	r1, .L14
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0F22     		mov	r2, #15
  44 0014 4B4B     		ldr	r3, .L14+4
  45 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 4B4B     		ldr	r3, .L14+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 5


 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L12
  52 0020 4A49     		ldr	r1, .L14+12
  53 0022 00E0     		b	.L2
  54              	.L12:
  55 0024 4A49     		ldr	r1, .L14+16
  56              	.L2:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 4B4A     		ldr	r2, .L14+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 4A4A     		ldr	r2, .L14+24
  64 0030 4A4B     		ldr	r3, .L14+28
  65 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 4A4A     		ldr	r2, .L14+32
  68 0036 4B4B     		ldr	r3, .L14+36
  69 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 0023     		mov	r3, #0
  72 003c 4A4A     		ldr	r2, .L14+40
  73 003e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  74              		.loc 1 185 0 discriminator 4
  75 0040 4A49     		ldr	r1, .L14+44
  76 0042 4B4A     		ldr	r2, .L14+48
  77 0044 1160     		str	r1, [r2]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  78              		.loc 1 186 0 discriminator 4
  79 0046 4B49     		ldr	r1, .L14+52
  80 0048 4B4A     		ldr	r2, .L14+56
  81 004a 1160     		str	r1, [r2]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  82              		.loc 1 197 0 discriminator 4
  83 004c 4B4A     		ldr	r2, .L14+60
  84 004e 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  85              		.loc 1 198 0 discriminator 4
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 6


  86 0050 4B4A     		ldr	r2, .L14+64
  87 0052 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  88              		.loc 1 199 0 discriminator 4
  89 0054 1122     		mov	r2, #17
  90 0056 4B4B     		ldr	r3, .L14+68
  91 0058 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
  92              		.loc 1 206 0 discriminator 4
  93 005a 4B49     		ldr	r1, .L14+72
  94 005c 0A68     		ldr	r2, [r1]
  95              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
  96              		.loc 1 207 0 discriminator 4
  97 005e 4B4B     		ldr	r3, .L14+76
  98 0060 1340     		and	r3, r2
  99              	.LVL3:
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 100              		.loc 1 218 0 discriminator 4
 101 0062 0122     		mov	r2, #1
 102 0064 1343     		orr	r3, r2
 103              	.LVL4:
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 104              		.loc 1 226 0 discriminator 4
 105 0066 0B60     		str	r3, [r1]
 106              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 107              		.loc 1 232 0 discriminator 4
 108 0068 0022     		mov	r2, #0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 7


 109 006a 66E0     		b	.L3
 110              	.LVL6:
 111              	.L11:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 112              		.loc 1 234 0
 113 006c 4849     		ldr	r1, .L14+80
 114 006e 9300     		lsl	r3, r2, #2
 115 0070 5858     		ldr	r0, [r3, r1]
 116 0072 DC23     		mov	r3, #220
 117 0074 9B01     		lsl	r3, r3, #6
 118 0076 0340     		and	r3, r0
 119              	.LVL7:
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 120              		.loc 1 236 0
 121 0078 8918     		add	r1, r1, r2
 122 007a 097D     		ldrb	r1, [r1, #20]
 123 007c 0B43     		orr	r3, r1
 124              	.LVL8:
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 125              		.loc 1 250 0
 126 007e 032A     		cmp	r2, #3
 127 0080 1ED8     		bhi	.L4
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 128              		.loc 1 253 0
 129 0082 9100     		lsl	r1, r2, #2
 130 0084 434C     		ldr	r4, .L14+84
 131 0086 A446     		mov	ip, r4
 132 0088 6144     		add	r1, r1, ip
 133 008a 0B60     		str	r3, [r1]
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 134              		.loc 1 255 0
 135 008c C307     		lsl	r3, r0, #31
 136 008e 08D5     		bpl	.L5
 137              	.LVL9:
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 138              		.loc 1 257 0
 139 0090 3A48     		ldr	r0, .L14+60
 140 0092 0468     		ldr	r4, [r0]
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 8


 141 0094 8021     		mov	r1, #128
 142              	.LVL10:
 143 0096 4902     		lsl	r1, r1, #9
 144 0098 0B1C     		mov	r3, r1
 145 009a 9340     		lsl	r3, r3, r2
 146 009c 1B0C     		lsr	r3, r3, #16
 147 009e 2343     		orr	r3, r4
 148 00a0 0360     		str	r3, [r0]
 149              	.LVL11:
 150              	.L5:
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 151              		.loc 1 260 0
 152 00a2 9300     		lsl	r3, r2, #2
 153 00a4 3A49     		ldr	r1, .L14+80
 154              	.LVL12:
 155 00a6 5B58     		ldr	r3, [r3, r1]
 156 00a8 9B07     		lsl	r3, r3, #30
 157 00aa 22D5     		bpl	.L6
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 158              		.loc 1 262 0
 159 00ac 3448     		ldr	r0, .L14+64
 160 00ae 0468     		ldr	r4, [r0]
 161 00b0 8021     		mov	r1, #128
 162              	.LVL13:
 163 00b2 4902     		lsl	r1, r1, #9
 164 00b4 0B1C     		mov	r3, r1
 165 00b6 9340     		lsl	r3, r3, r2
 166 00b8 1B0C     		lsr	r3, r3, #16
 167 00ba 2343     		orr	r3, r4
 168 00bc 0360     		str	r3, [r0]
 169 00be 18E0     		b	.L6
 170              	.LVL14:
 171              	.L4:
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 172              		.loc 1 268 0
 173 00c0 8021     		mov	r1, #128
 174 00c2 C905     		lsl	r1, r1, #23
 175 00c4 0B43     		orr	r3, r1
 176              	.LVL15:
 177 00c6 3449     		ldr	r1, .L14+88
 178 00c8 0B60     		str	r3, [r1]
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 179              		.loc 1 270 0
 180 00ca 9300     		lsl	r3, r2, #2
 181 00cc 3049     		ldr	r1, .L14+80
 182              	.LVL16:
 183 00ce 5B58     		ldr	r3, [r3, r1]
 184 00d0 DB07     		lsl	r3, r3, #31
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 9


 185 00d2 04D5     		bpl	.L7
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 186              		.loc 1 272 0
 187 00d4 2B49     		ldr	r1, .L14+68
 188              	.LVL17:
 189 00d6 0868     		ldr	r0, [r1]
 190              	.LVL18:
 191 00d8 2023     		mov	r3, #32
 192 00da 0343     		orr	r3, r0
 193 00dc 0B60     		str	r3, [r1]
 194              	.L7:
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 195              		.loc 1 275 0
 196 00de 9300     		lsl	r3, r2, #2
 197 00e0 2B49     		ldr	r1, .L14+80
 198              	.LVL19:
 199 00e2 5B58     		ldr	r3, [r3, r1]
 200 00e4 9B07     		lsl	r3, r3, #30
 201 00e6 04D5     		bpl	.L6
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 202              		.loc 1 277 0
 203 00e8 2649     		ldr	r1, .L14+68
 204              	.LVL20:
 205 00ea 0868     		ldr	r0, [r1]
 206 00ec 4023     		mov	r3, #64
 207 00ee 0343     		orr	r3, r0
 208 00f0 0B60     		str	r3, [r1]
 209              	.L6:
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 210              		.loc 1 282 0
 211 00f2 9300     		lsl	r3, r2, #2
 212 00f4 2649     		ldr	r1, .L14+80
 213              	.LVL21:
 214 00f6 5958     		ldr	r1, [r3, r1]
 215              	.LVL22:
 216 00f8 8B05     		lsl	r3, r1, #22
 217 00fa 02D5     		bpl	.L13
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 218              		.loc 1 284 0
 219 00fc 8020     		mov	r0, #128
 220 00fe 4000     		lsl	r0, r0, #1
 221 0100 01E0     		b	.L8
 222              	.L13:
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 223              		.loc 1 288 0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 10


 224 0102 8020     		mov	r0, #128
 225 0104 4001     		lsl	r0, r0, #5
 226              	.L8:
 227              	.LVL23:
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 228              		.loc 1 291 0
 229 0106 CB05     		lsl	r3, r1, #23
 230 0108 04D4     		bmi	.L9
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 231              		.loc 1 298 0
 232 010a 5300     		lsl	r3, r2, #1
 233 010c 0024     		mov	r4, #0
 234 010e 2349     		ldr	r1, .L14+92
 235 0110 5C52     		strh	r4, [r3, r1]
 236 0112 03E0     		b	.L10
 237              	.L9:
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 238              		.loc 1 307 0
 239 0114 5300     		lsl	r3, r2, #1
 240 0116 0024     		mov	r4, #0
 241 0118 2049     		ldr	r1, .L14+92
 242 011a 5C52     		strh	r4, [r3, r1]
 243              	.L10:
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 244              		.loc 1 311 0 discriminator 2
 245 011c 204B     		ldr	r3, .L14+96
 246 011e 4343     		mul	r3, r0
 247 0120 8021     		mov	r1, #128
 248 0122 C900     		lsl	r1, r1, #3
 249 0124 8C46     		mov	ip, r1
 250 0126 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 251              		.loc 1 312 0 discriminator 2
 252 0128 D917     		asr	r1, r3, #31
 253 012a 490D     		lsr	r1, r1, #21
 254 012c CB18     		add	r3, r1, r3
 255 012e DB12     		asr	r3, r3, #11
 311:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 11


 256              		.loc 1 311 0 discriminator 2
 257 0130 1BB2     		sxth	r3, r3
 258 0132 9000     		lsl	r0, r2, #2
 259              	.LVL24:
 260 0134 1B49     		ldr	r1, .L14+100
 261 0136 4350     		str	r3, [r0, r1]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 262              		.loc 1 232 0 discriminator 2
 263 0138 0132     		add	r2, r2, #1
 264              	.LVL25:
 265              	.L3:
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 266              		.loc 1 232 0 is_stmt 0 discriminator 1
 267 013a 042A     		cmp	r2, #4
 268 013c 96D9     		bls	.L11
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 269              		.loc 1 314 0 is_stmt 1
 270              		@ sp needed
 271 013e 10BD     		pop	{r4, pc}
 272              	.L15:
 273              		.align	2
 274              	.L14:
 275 0140 00000000 		.word	ADC_ISR
 276 0144 20003A40 		.word	1077542944
 277 0148 80033A40 		.word	1077543808
 278 014c 402E1013 		.word	319827520
 279 0150 402E0013 		.word	318778944
 280 0154 00003A40 		.word	1077542912
 281 0158 A8000080 		.word	-2147483480
 282 015c 04003A40 		.word	1077542916
 283 0160 0000FF07 		.word	134152192
 284 0164 18003A40 		.word	1077542936
 285 0168 1C003A40 		.word	1077542940
 286 016c E9030400 		.word	263145
 287 0170 10003A40 		.word	1077542928
 288 0174 04000400 		.word	262148
 289 0178 14003A40 		.word	1077542932
 290 017c 28023A40 		.word	1077543464
 291 0180 38023A40 		.word	1077543480
 292 0184 18023A40 		.word	1077543448
 293 0188 30003A40 		.word	1077542960
 294 018c FFFFFFDF 		.word	-536870913
 295 0190 00000000 		.word	.LANCHOR0
 296 0194 80003A40 		.word	1077543040
 297 0198 80023A40 		.word	1077543552
 298 019c 00000000 		.word	ADC_offset
 299 01a0 10270000 		.word	10000
 300 01a4 00000000 		.word	ADC_countsPer10Volt
 301              		.cfi_endproc
 302              	.LFE3:
 303              		.size	ADC_Init, .-ADC_Init
 304              		.section	.text.ADC_Enable,"ax",%progbits
 305              		.align	2
 306              		.global	ADC_Enable
 307              		.code	16
 308              		.thumb_func
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 12


 309              		.type	ADC_Enable, %function
 310              	ADC_Enable:
 311              	.LFB4:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 312              		.loc 1 331 0
 313              		.cfi_startproc
 314 0000 08B5     		push	{r3, lr}
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 3, -8
 317              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 318              		.loc 1 332 0
 319 0002 094B     		ldr	r3, .L19
 320 0004 1B68     		ldr	r3, [r3]
 321 0006 002B     		cmp	r3, #0
 322 0008 0CDB     		blt	.L16
 323              	.L18:
 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 324              		.loc 1 336 0 discriminator 1
 325 000a 084B     		ldr	r3, .L19+4
 326 000c 1B68     		ldr	r3, [r3]
 327 000e 002B     		cmp	r3, #0
 328 0010 FBDB     		blt	.L18
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 329              		.loc 1 342 0
 330 0012 054A     		ldr	r2, .L19
 331 0014 1368     		ldr	r3, [r2]
 332 0016 8021     		mov	r1, #128
 333 0018 0906     		lsl	r1, r1, #24
 334 001a 0B43     		orr	r3, r1
 335 001c 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 13


 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 336              		.loc 1 345 0
 337 001e 0A20     		mov	r0, #10
 338 0020 FFF7FEFF 		bl	CyDelayUs
 339              	.LVL26:
 340              	.L16:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 341              		.loc 1 347 0
 342              		@ sp needed
 343 0024 08BD     		pop	{r3, pc}
 344              	.L20:
 345 0026 C046     		.align	2
 346              	.L19:
 347 0028 00003A40 		.word	1077542912
 348 002c 08023A40 		.word	1077543432
 349              		.cfi_endproc
 350              	.LFE4:
 351              		.size	ADC_Enable, .-ADC_Enable
 352              		.section	.text.ADC_Start,"ax",%progbits
 353              		.align	2
 354              		.global	ADC_Start
 355              		.code	16
 356              		.thumb_func
 357              		.type	ADC_Start, %function
 358              	ADC_Start:
 359              	.LFB2:
  64:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 360              		.loc 1 64 0
 361              		.cfi_startproc
 362 0000 08B5     		push	{r3, lr}
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 3, -8
 365              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC.c ****     {
 366              		.loc 1 66 0
 367 0002 064B     		ldr	r3, .L23
 368 0004 1B78     		ldrb	r3, [r3]
 369 0006 002B     		cmp	r3, #0
 370 0008 04D1     		bne	.L22
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 371              		.loc 1 68 0
 372 000a FFF7FEFF 		bl	ADC_Init
 373              	.LVL27:
  69:.\Generated_Source\PSoC4/ADC.c ****     }
 374              		.loc 1 69 0
 375 000e 0122     		mov	r2, #1
 376 0010 024B     		ldr	r3, .L23
 377 0012 1A70     		strb	r2, [r3]
 378              	.L22:
  71:.\Generated_Source\PSoC4/ADC.c **** }
 379              		.loc 1 71 0
 380 0014 FFF7FEFF 		bl	ADC_Enable
 381              	.LVL28:
  72:.\Generated_Source\PSoC4/ADC.c **** 
 382              		.loc 1 72 0
 383              		@ sp needed
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 14


 384 0018 08BD     		pop	{r3, pc}
 385              	.L24:
 386 001a C046     		.align	2
 387              	.L23:
 388 001c 00000000 		.word	.LANCHOR1
 389              		.cfi_endproc
 390              	.LFE2:
 391              		.size	ADC_Start, .-ADC_Start
 392              		.section	.text.ADC_Stop,"ax",%progbits
 393              		.align	2
 394              		.global	ADC_Stop
 395              		.code	16
 396              		.thumb_func
 397              		.type	ADC_Stop, %function
 398              	ADC_Stop:
 399              	.LFB5:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:.\Generated_Source\PSoC4/ADC.c **** {
 400              		.loc 1 366 0
 401              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 402              		.loc 1 367 0
 403 0000 024A     		ldr	r2, .L26
 404 0002 1368     		ldr	r3, [r2]
 405 0004 5B00     		lsl	r3, r3, #1
 406 0006 5B08     		lsr	r3, r3, #1
 407 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC.c **** }
 408              		.loc 1 368 0
 409              		@ sp needed
 410 000a 7047     		bx	lr
 411              	.L27:
 412              		.align	2
 413              	.L26:
 414 000c 00003A40 		.word	1077542912
 415              		.cfi_endproc
 416              	.LFE5:
 417              		.size	ADC_Stop, .-ADC_Stop
 418              		.section	.text.ADC_StartConvert,"ax",%progbits
 419              		.align	2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 15


 420              		.global	ADC_StartConvert
 421              		.code	16
 422              		.thumb_func
 423              		.type	ADC_StartConvert, %function
 424              	ADC_StartConvert:
 425              	.LFB6:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 426              		.loc 1 392 0
 427              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 428              		.loc 1 394 0
 429 0000 034A     		ldr	r2, .L29
 430 0002 1368     		ldr	r3, [r2]
 431 0004 8021     		mov	r1, #128
 432 0006 4902     		lsl	r1, r1, #9
 433 0008 0B43     		orr	r3, r1
 434 000a 1360     		str	r3, [r2]
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 435              		.loc 1 399 0
 436              		@ sp needed
 437 000c 7047     		bx	lr
 438              	.L30:
 439 000e C046     		.align	2
 440              	.L29:
 441 0010 04003A40 		.word	1077542916
 442              		.cfi_endproc
 443              	.LFE6:
 444              		.size	ADC_StartConvert, .-ADC_StartConvert
 445              		.section	.text.ADC_StopConvert,"ax",%progbits
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 16


 446              		.align	2
 447              		.global	ADC_StopConvert
 448              		.code	16
 449              		.thumb_func
 450              		.type	ADC_StopConvert, %function
 451              	ADC_StopConvert:
 452              	.LFB7:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 453              		.loc 1 417 0
 454              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 455              		.loc 1 419 0
 456 0000 024A     		ldr	r2, .L32
 457 0002 1168     		ldr	r1, [r2]
 458 0004 024B     		ldr	r3, .L32+4
 459 0006 0B40     		and	r3, r1
 460 0008 1360     		str	r3, [r2]
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 461              		.loc 1 421 0
 462              		@ sp needed
 463 000a 7047     		bx	lr
 464              	.L33:
 465              		.align	2
 466              	.L32:
 467 000c 04003A40 		.word	1077542916
 468 0010 FFFFFEFF 		.word	-65537
 469              		.cfi_endproc
 470              	.LFE7:
 471              		.size	ADC_StopConvert, .-ADC_StopConvert
 472              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 473              		.align	2
 474              		.global	ADC_IsEndConversion
 475              		.code	16
 476              		.thumb_func
 477              		.type	ADC_IsEndConversion, %function
 478              	ADC_IsEndConversion:
 479              	.LFB8:
 422:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 17


 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 480              		.loc 1 451 0
 481              		.cfi_startproc
 482              	.LVL29:
 483 0000 011C     		mov	r1, r0
 484              	.LVL30:
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 485              		.loc 1 454 0
 486 0002 8307     		lsl	r3, r0, #30
 487 0004 0CD0     		beq	.L41
 488              	.LVL31:
 489              	.L37:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 490              		.loc 1 458 0 discriminator 2
 491 0006 104B     		ldr	r3, .L42
 492 0008 1B68     		ldr	r3, [r3]
 493 000a 0120     		mov	r0, #1
 494 000c 1840     		and	r0, r3
 495              	.LVL32:
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 496              		.loc 1 459 0 discriminator 2
 497 000e 01D1     		bne	.L36
 498              		.loc 1 459 0 is_stmt 0 discriminator 1
 499 0010 8B07     		lsl	r3, r1, #30
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 18


 500 0012 F8D4     		bmi	.L37
 501              	.L36:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 502              		.loc 1 461 0 is_stmt 1
 503 0014 0028     		cmp	r0, #0
 504 0016 04D0     		beq	.L35
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 505              		.loc 1 464 0
 506 0018 0122     		mov	r2, #1
 507 001a 0B4B     		ldr	r3, .L42
 508 001c 1A60     		str	r2, [r3]
 509 001e 00E0     		b	.L35
 510              	.LVL33:
 511              	.L41:
 452:.\Generated_Source\PSoC4/ADC.c **** 
 512              		.loc 1 452 0
 513 0020 0020     		mov	r0, #0
 514              	.LVL34:
 515              	.L35:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 516              		.loc 1 469 0
 517 0022 0C23     		mov	r3, #12
 518 0024 0B42     		tst	r3, r1
 519 0026 0DD0     		beq	.L38
 520              	.L40:
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 521              		.loc 1 473 0
 522 0028 074B     		ldr	r3, .L42
 523 002a 1A68     		ldr	r2, [r3]
 524 002c 1023     		mov	r3, #16
 525 002e 1A40     		and	r2, r3
 526 0030 1043     		orr	r0, r2
 527              	.LVL35:
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 528              		.loc 1 474 0
 529 0032 0340     		and	r3, r0
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 530              		.loc 1 475 0
 531 0034 01D1     		bne	.L39
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 532              		.loc 1 474 0 discriminator 1
 533 0036 0A07     		lsl	r2, r1, #28
 534 0038 F6D4     		bmi	.L40
 535              	.L39:
 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 536              		.loc 1 477 0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 19


 537 003a 002B     		cmp	r3, #0
 538 003c 02D0     		beq	.L38
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 539              		.loc 1 480 0
 540 003e 1022     		mov	r2, #16
 541 0040 014B     		ldr	r3, .L42
 542 0042 1A60     		str	r2, [r3]
 543              	.L38:
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC.c **** }
 544              		.loc 1 486 0
 545              		@ sp needed
 546 0044 7047     		bx	lr
 547              	.L43:
 548 0046 C046     		.align	2
 549              	.L42:
 550 0048 10023A40 		.word	1077543440
 551              		.cfi_endproc
 552              	.LFE8:
 553              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 554              		.section	.text.ADC_GetResult16,"ax",%progbits
 555              		.align	2
 556              		.global	ADC_GetResult16
 557              		.code	16
 558              		.thumb_func
 559              		.type	ADC_GetResult16, %function
 560              	ADC_GetResult16:
 561              	.LFB9:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 562              		.loc 1 505 0
 563              		.cfi_startproc
 564              	.LVL36:
 565 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 20


 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 4, -8
 568              		.cfi_offset 14, -4
 569 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 570              		.loc 1 509 0
 571 0004 042C     		cmp	r4, #4
 572 0006 02D9     		bls	.L45
 573              		.loc 1 509 0 is_stmt 0 discriminator 1
 574 0008 0020     		mov	r0, #0
 575              	.LVL37:
 576 000a FFF7FEFF 		bl	CyHalt
 577              	.LVL38:
 578              	.L45:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 579              		.loc 1 511 0 is_stmt 1
 580 000e 032C     		cmp	r4, #3
 581 0010 07D8     		bhi	.L46
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 582              		.loc 1 513 0
 583 0012 A400     		lsl	r4, r4, #2
 584              	.LVL39:
 585 0014 064B     		ldr	r3, .L48
 586 0016 9C46     		mov	ip, r3
 587 0018 6444     		add	r4, r4, ip
 588 001a 2068     		ldr	r0, [r4]
 589 001c 0004     		lsl	r0, r0, #16
 590 001e 000C     		lsr	r0, r0, #16
 591              	.LVL40:
 592 0020 03E0     		b	.L47
 593              	.LVL41:
 594              	.L46:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 595              		.loc 1 519 0
 596 0022 044B     		ldr	r3, .L48+4
 597 0024 1868     		ldr	r0, [r3]
 598 0026 0004     		lsl	r0, r0, #16
 599 0028 000C     		lsr	r0, r0, #16
 600              	.LVL42:
 601              	.L47:
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 602              		.loc 1 525 0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 21


 603 002a 00B2     		sxth	r0, r0
 604              	.LVL43:
 526:.\Generated_Source\PSoC4/ADC.c **** }
 605              		.loc 1 526 0
 606              		@ sp needed
 607 002c 10BD     		pop	{r4, pc}
 608              	.L49:
 609 002e C046     		.align	2
 610              	.L48:
 611 0030 80013A40 		.word	1077543296
 612 0034 90023A40 		.word	1077543568
 613              		.cfi_endproc
 614              	.LFE9:
 615              		.size	ADC_GetResult16, .-ADC_GetResult16
 616              		.section	.text.ADC_SetChanMask,"ax",%progbits
 617              		.align	2
 618              		.global	ADC_SetChanMask
 619              		.code	16
 620              		.thumb_func
 621              		.type	ADC_SetChanMask, %function
 622              	ADC_SetChanMask:
 623              	.LFB10:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 624              		.loc 1 550 0
 625              		.cfi_startproc
 626              	.LVL44:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 627              		.loc 1 551 0
 628 0000 0F23     		mov	r3, #15
 629 0002 1840     		and	r0, r3
 630              	.LVL45:
 631 0004 014B     		ldr	r3, .L51
 632 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 22


 633              		.loc 1 552 0
 634              		@ sp needed
 635 0008 7047     		bx	lr
 636              	.L52:
 637 000a C046     		.align	2
 638              	.L51:
 639 000c 20003A40 		.word	1077542944
 640              		.cfi_endproc
 641              	.LFE10:
 642              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 643              		.section	.text.ADC_EnableInjection,"ax",%progbits
 644              		.align	2
 645              		.global	ADC_EnableInjection
 646              		.code	16
 647              		.thumb_func
 648              		.type	ADC_EnableInjection, %function
 649              	ADC_EnableInjection:
 650              	.LFB11:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 651              		.loc 1 572 0
 652              		.cfi_startproc
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 653              		.loc 1 573 0
 654 0000 034A     		ldr	r2, .L54
 655 0002 1368     		ldr	r3, [r2]
 656 0004 8021     		mov	r1, #128
 657 0006 0906     		lsl	r1, r1, #24
 658 0008 0B43     		orr	r3, r1
 659 000a 1360     		str	r3, [r2]
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 660              		.loc 1 574 0
 661              		@ sp needed
 662 000c 7047     		bx	lr
 663              	.L55:
 664 000e C046     		.align	2
 665              	.L54:
 666 0010 80023A40 		.word	1077543552
 667              		.cfi_endproc
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 23


 668              	.LFE11:
 669              		.size	ADC_EnableInjection, .-ADC_EnableInjection
 670              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 671              		.align	2
 672              		.global	ADC_SetLowLimit
 673              		.code	16
 674              		.thumb_func
 675              		.type	ADC_SetLowLimit, %function
 676              	ADC_SetLowLimit:
 677              	.LFB12:
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 678              		.loc 1 594 0
 679              		.cfi_startproc
 680              	.LVL46:
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 681              		.loc 1 595 0
 682 0000 054A     		ldr	r2, .L57
 683 0002 1368     		ldr	r3, [r2]
 684 0004 1B0C     		lsr	r3, r3, #16
 685 0006 1B04     		lsl	r3, r3, #16
 686 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 687              		.loc 1 596 0
 688 000a 1368     		ldr	r3, [r2]
 689 000c 0004     		lsl	r0, r0, #16
 690              	.LVL47:
 691 000e 000C     		lsr	r0, r0, #16
 692 0010 1843     		orr	r0, r3
 693 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 694              		.loc 1 597 0
 695              		@ sp needed
 696 0014 7047     		bx	lr
 697              	.L58:
 698 0016 C046     		.align	2
 699              	.L57:
 700 0018 18003A40 		.word	1077542936
 701              		.cfi_endproc
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 24


 702              	.LFE12:
 703              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 704              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 705              		.align	2
 706              		.global	ADC_SetHighLimit
 707              		.code	16
 708              		.thumb_func
 709              		.type	ADC_SetHighLimit, %function
 710              	ADC_SetHighLimit:
 711              	.LFB13:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 712              		.loc 1 615 0
 713              		.cfi_startproc
 714              	.LVL48:
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 715              		.loc 1 616 0
 716 0000 044A     		ldr	r2, .L60
 717 0002 1368     		ldr	r3, [r2]
 718 0004 1B04     		lsl	r3, r3, #16
 719 0006 1B0C     		lsr	r3, r3, #16
 720 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 721              		.loc 1 617 0
 722 000a 1368     		ldr	r3, [r2]
 723 000c 0004     		lsl	r0, r0, #16
 724              	.LVL49:
 725 000e 1843     		orr	r0, r3
 726 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 727              		.loc 1 618 0
 728              		@ sp needed
 729 0012 7047     		bx	lr
 730              	.L61:
 731              		.align	2
 732              	.L60:
 733 0014 18003A40 		.word	1077542936
 734              		.cfi_endproc
 735              	.LFE13:
 736              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 737              		.section	.text.ADC_SetLimitMask,"ax",%progbits
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 25


 738              		.align	2
 739              		.global	ADC_SetLimitMask
 740              		.code	16
 741              		.thumb_func
 742              		.type	ADC_SetLimitMask, %function
 743              	ADC_SetLimitMask:
 744              	.LFB14:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 745              		.loc 1 639 0
 746              		.cfi_startproc
 747              	.LVL50:
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 748              		.loc 1 640 0
 749 0000 0F23     		mov	r3, #15
 750 0002 1840     		and	r0, r3
 751              	.LVL51:
 752 0004 014B     		ldr	r3, .L63
 753 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 754              		.loc 1 641 0
 755              		@ sp needed
 756 0008 7047     		bx	lr
 757              	.L64:
 758 000a C046     		.align	2
 759              	.L63:
 760 000c 38023A40 		.word	1077543480
 761              		.cfi_endproc
 762              	.LFE14:
 763              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 764              		.section	.text.ADC_SetSatMask,"ax",%progbits
 765              		.align	2
 766              		.global	ADC_SetSatMask
 767              		.code	16
 768              		.thumb_func
 769              		.type	ADC_SetSatMask, %function
 770              	ADC_SetSatMask:
 771              	.LFB15:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 26


 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 772              		.loc 1 662 0
 773              		.cfi_startproc
 774              	.LVL52:
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 775              		.loc 1 663 0
 776 0000 0F23     		mov	r3, #15
 777 0002 1840     		and	r0, r3
 778              	.LVL53:
 779 0004 014B     		ldr	r3, .L66
 780 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 781              		.loc 1 664 0
 782              		@ sp needed
 783 0008 7047     		bx	lr
 784              	.L67:
 785 000a C046     		.align	2
 786              	.L66:
 787 000c 28023A40 		.word	1077543464
 788              		.cfi_endproc
 789              	.LFE15:
 790              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 791              		.section	.text.ADC_SetOffset,"ax",%progbits
 792              		.align	2
 793              		.global	ADC_SetOffset
 794              		.code	16
 795              		.thumb_func
 796              		.type	ADC_SetOffset, %function
 797              	ADC_SetOffset:
 798              	.LFB16:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 27


 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 799              		.loc 1 690 0
 800              		.cfi_startproc
 801              	.LVL54:
 802 0000 38B5     		push	{r3, r4, r5, lr}
 803              		.cfi_def_cfa_offset 16
 804              		.cfi_offset 3, -16
 805              		.cfi_offset 4, -12
 806              		.cfi_offset 5, -8
 807              		.cfi_offset 14, -4
 808 0002 041C     		mov	r4, r0
 809 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 810              		.loc 1 692 0
 811 0006 0428     		cmp	r0, #4
 812 0008 02D9     		bls	.L69
 813              		.loc 1 692 0 is_stmt 0 discriminator 1
 814 000a 0020     		mov	r0, #0
 815              	.LVL55:
 816 000c FFF7FEFF 		bl	CyHalt
 817              	.LVL56:
 818              	.L69:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 819              		.loc 1 694 0 is_stmt 1
 820 0010 6400     		lsl	r4, r4, #1
 821              	.LVL57:
 822 0012 014B     		ldr	r3, .L70
 823 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 824              		.loc 1 695 0
 825              		@ sp needed
 826 0016 38BD     		pop	{r3, r4, r5, pc}
 827              	.L71:
 828              		.align	2
 829              	.L70:
 830 0018 00000000 		.word	ADC_offset
 831              		.cfi_endproc
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 28


 832              	.LFE16:
 833              		.size	ADC_SetOffset, .-ADC_SetOffset
 834              		.section	.text.ADC_SetGain,"ax",%progbits
 835              		.align	2
 836              		.global	ADC_SetGain
 837              		.code	16
 838              		.thumb_func
 839              		.type	ADC_SetGain, %function
 840              	ADC_SetGain:
 841              	.LFB17:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 842              		.loc 1 724 0
 843              		.cfi_startproc
 844              	.LVL58:
 845 0000 38B5     		push	{r3, r4, r5, lr}
 846              		.cfi_def_cfa_offset 16
 847              		.cfi_offset 3, -16
 848              		.cfi_offset 4, -12
 849              		.cfi_offset 5, -8
 850              		.cfi_offset 14, -4
 851 0002 041C     		mov	r4, r0
 852 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 853              		.loc 1 726 0
 854 0006 0428     		cmp	r0, #4
 855 0008 02D9     		bls	.L73
 856              		.loc 1 726 0 is_stmt 0 discriminator 1
 857 000a 0020     		mov	r0, #0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 29


 858              	.LVL59:
 859 000c FFF7FEFF 		bl	CyHalt
 860              	.LVL60:
 861              	.L73:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 862              		.loc 1 728 0 is_stmt 1
 863 0010 A400     		lsl	r4, r4, #2
 864              	.LVL61:
 865 0012 014B     		ldr	r3, .L74
 866 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 867              		.loc 1 729 0
 868              		@ sp needed
 869              	.LVL62:
 870 0016 38BD     		pop	{r3, r4, r5, pc}
 871              	.L75:
 872              		.align	2
 873              	.L74:
 874 0018 00000000 		.word	ADC_countsPer10Volt
 875              		.cfi_endproc
 876              	.LFE17:
 877              		.size	ADC_SetGain, .-ADC_SetGain
 878              		.global	__aeabi_idiv
 879              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 880              		.align	2
 881              		.global	ADC_CountsTo_mVolts
 882              		.code	16
 883              		.thumb_func
 884              		.type	ADC_CountsTo_mVolts, %function
 885              	ADC_CountsTo_mVolts:
 886              	.LFB18:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 30


 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 887              		.loc 1 757 0
 888              		.cfi_startproc
 889              	.LVL63:
 890 0000 38B5     		push	{r3, r4, r5, lr}
 891              		.cfi_def_cfa_offset 16
 892              		.cfi_offset 3, -16
 893              		.cfi_offset 4, -12
 894              		.cfi_offset 5, -8
 895              		.cfi_offset 14, -4
 896 0002 041C     		mov	r4, r0
 897 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 898              		.loc 1 761 0
 899 0006 0428     		cmp	r0, #4
 900 0008 02D9     		bls	.L77
 901              		.loc 1 761 0 is_stmt 0 discriminator 1
 902 000a 0020     		mov	r0, #0
 903              	.LVL64:
 904 000c FFF7FEFF 		bl	CyHalt
 905              	.LVL65:
 906              	.L77:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 907              		.loc 1 772 0 is_stmt 1
 908 0010 6300     		lsl	r3, r4, #1
 909 0012 0F4A     		ldr	r2, .L80
 910 0014 995A     		ldrh	r1, [r3, r2]
 911 0016 691A     		sub	r1, r5, r1
 912 0018 09B2     		sxth	r1, r1
 913              	.LVL66:
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 914              		.loc 1 774 0
 915 001a 0E48     		ldr	r0, .L80+4
 916 001c 021C     		mov	r2, r0
 917 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 918              		.loc 1 775 0
 919 0020 0029     		cmp	r1, #0
 920 0022 06DD     		ble	.L78
 921              		.loc 1 775 0 is_stmt 0 discriminator 1
 922 0024 A300     		lsl	r3, r4, #2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 31


 923 0026 0C49     		ldr	r1, .L80+8
 924              	.LVL67:
 925 0028 5B58     		ldr	r3, [r3, r1]
 926 002a D80F     		lsr	r0, r3, #31
 927 002c C018     		add	r0, r0, r3
 928 002e 4310     		asr	r3, r0, #1
 929 0030 06E0     		b	.L79
 930              	.LVL68:
 931              	.L78:
 932              		.loc 1 775 0 discriminator 2
 933 0032 A300     		lsl	r3, r4, #2
 934 0034 0849     		ldr	r1, .L80+8
 935              	.LVL69:
 936 0036 5B58     		ldr	r3, [r3, r1]
 937 0038 D80F     		lsr	r0, r3, #31
 938 003a C318     		add	r3, r0, r3
 939 003c 5B10     		asr	r3, r3, #1
 940 003e 5B42     		neg	r3, r3
 941              	.L79:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 942              		.loc 1 774 0 is_stmt 1
 943 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 944              		.loc 1 776 0
 945 0042 A400     		lsl	r4, r4, #2
 946              	.LVL70:
 947 0044 044B     		ldr	r3, .L80+8
 948 0046 E158     		ldr	r1, [r4, r3]
 949 0048 FFF7FEFF 		bl	__aeabi_idiv
 950              	.LVL71:
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 951              		.loc 1 778 0
 952 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 953              		.loc 1 779 0
 954              		@ sp needed
 955 004e 38BD     		pop	{r3, r4, r5, pc}
 956              	.L81:
 957              		.align	2
 958              	.L80:
 959 0050 00000000 		.word	ADC_offset
 960 0054 10270000 		.word	10000
 961 0058 00000000 		.word	ADC_countsPer10Volt
 962              		.cfi_endproc
 963              	.LFE18:
 964              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 965              		.global	__aeabi_lmul
 966              		.global	__aeabi_ldivmod
 967              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 968              		.align	2
 969              		.global	ADC_CountsTo_uVolts
 970              		.code	16
 971              		.thumb_func
 972              		.type	ADC_CountsTo_uVolts, %function
 973              	ADC_CountsTo_uVolts:
 974              	.LFB19:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 32


 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 975              		.loc 1 811 0
 976              		.cfi_startproc
 977              	.LVL72:
 978 0000 38B5     		push	{r3, r4, r5, lr}
 979              		.cfi_def_cfa_offset 16
 980              		.cfi_offset 3, -16
 981              		.cfi_offset 4, -12
 982              		.cfi_offset 5, -8
 983              		.cfi_offset 14, -4
 984 0002 051C     		mov	r5, r0
 985 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 986              		.loc 1 815 0
 987 0006 0428     		cmp	r0, #4
 988 0008 02D9     		bls	.L83
 989              		.loc 1 815 0 is_stmt 0 discriminator 1
 990 000a 0020     		mov	r0, #0
 991              	.LVL73:
 992 000c FFF7FEFF 		bl	CyHalt
 993              	.LVL74:
 994              	.L83:
 816:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 33


 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 995              		.loc 1 826 0 is_stmt 1
 996 0010 6A00     		lsl	r2, r5, #1
 997 0012 084B     		ldr	r3, .L84
 998 0014 D05A     		ldrh	r0, [r2, r3]
 999 0016 201A     		sub	r0, r4, r0
 1000 0018 00B2     		sxth	r0, r0
 1001              	.LVL75:
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1002              		.loc 1 828 0
 1003 001a C117     		asr	r1, r0, #31
 1004 001c 064A     		ldr	r2, .L84+4
 1005 001e 0023     		mov	r3, #0
 1006 0020 FFF7FEFF 		bl	__aeabi_lmul
 1007              	.LVL76:
 1008 0024 AD00     		lsl	r5, r5, #2
 1009              	.LVL77:
 1010 0026 054B     		ldr	r3, .L84+8
 1011 0028 EA58     		ldr	r2, [r5, r3]
 1012 002a D317     		asr	r3, r2, #31
 1013 002c FFF7FEFF 		bl	__aeabi_ldivmod
 1014              	.LVL78:
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 1015              		.loc 1 831 0
 1016              		@ sp needed
 1017 0030 38BD     		pop	{r3, r4, r5, pc}
 1018              	.L85:
 1019 0032 C046     		.align	2
 1020              	.L84:
 1021 0034 00000000 		.word	ADC_offset
 1022 0038 80969800 		.word	10000000
 1023 003c 00000000 		.word	ADC_countsPer10Volt
 1024              		.cfi_endproc
 1025              	.LFE19:
 1026              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1027              		.global	__aeabi_i2f
 1028              		.global	__aeabi_fmul
 1029              		.global	__aeabi_fdiv
 1030              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1031              		.align	2
 1032              		.global	ADC_CountsTo_Volts
 1033              		.code	16
 1034              		.thumb_func
 1035              		.type	ADC_CountsTo_Volts, %function
 1036              	ADC_CountsTo_Volts:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 34


 1037              	.LFB20:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 1038              		.loc 1 856 0
 1039              		.cfi_startproc
 1040              	.LVL79:
 1041 0000 38B5     		push	{r3, r4, r5, lr}
 1042              		.cfi_def_cfa_offset 16
 1043              		.cfi_offset 3, -16
 1044              		.cfi_offset 4, -12
 1045              		.cfi_offset 5, -8
 1046              		.cfi_offset 14, -4
 1047 0002 041C     		mov	r4, r0
 1048 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1049              		.loc 1 860 0
 1050 0006 0428     		cmp	r0, #4
 1051 0008 02D9     		bls	.L87
 1052              		.loc 1 860 0 is_stmt 0 discriminator 1
 1053 000a 0020     		mov	r0, #0
 1054              	.LVL80:
 1055 000c FFF7FEFF 		bl	CyHalt
 1056              	.LVL81:
 1057              	.L87:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 35


 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1058              		.loc 1 871 0 is_stmt 1
 1059 0010 6200     		lsl	r2, r4, #1
 1060 0012 0A4B     		ldr	r3, .L88
 1061 0014 D05A     		ldrh	r0, [r2, r3]
 1062 0016 281A     		sub	r0, r5, r0
 1063 0018 00B2     		sxth	r0, r0
 1064              	.LVL82:
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1065              		.loc 1 873 0
 1066 001a FFF7FEFF 		bl	__aeabi_i2f
 1067              	.LVL83:
 1068 001e 0849     		ldr	r1, .L88+4
 1069 0020 FFF7FEFF 		bl	__aeabi_fmul
 1070              	.LVL84:
 1071 0024 051C     		add	r5, r0, #0
 1072 0026 A400     		lsl	r4, r4, #2
 1073              	.LVL85:
 1074 0028 064B     		ldr	r3, .L88+8
 1075 002a E058     		ldr	r0, [r4, r3]
 1076 002c FFF7FEFF 		bl	__aeabi_i2f
 1077              	.LVL86:
 1078 0030 011C     		add	r1, r0, #0
 1079 0032 281C     		add	r0, r5, #0
 1080 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1081              	.LVL87:
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 1082              		.loc 1 876 0
 1083              		@ sp needed
 1084 0038 38BD     		pop	{r3, r4, r5, pc}
 1085              	.L89:
 1086 003a C046     		.align	2
 1087              	.L88:
 1088 003c 00000000 		.word	ADC_offset
 1089 0040 00002041 		.word	1092616192
 1090 0044 00000000 		.word	ADC_countsPer10Volt
 1091              		.cfi_endproc
 1092              	.LFE20:
 1093              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1094              		.comm	ADC_countsPer10Volt,20,4
 1095              		.comm	ADC_offset,10,4
 1096              		.global	ADC_initVar
 1097              		.section	.rodata
 1098              		.align	2
 1099              		.set	.LANCHOR0,. + 0
 1100              		.type	ADC_channelsConfig, %object
 1101              		.size	ADC_channelsConfig, 20
 1102              	ADC_channelsConfig:
 1103 0000 00040000 		.word	1024
 1104 0004 00050000 		.word	1280
 1105 0008 00140000 		.word	5120
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 36


 1106 000c 00140000 		.word	5120
 1107 0010 00000000 		.word	0
 1108              		.type	ADC_InputsPlacement.4795, %object
 1109              		.size	ADC_InputsPlacement.4795, 5
 1110              	ADC_InputsPlacement.4795:
 1111 0014 07       		.byte	7
 1112 0015 02       		.byte	2
 1113 0016 12       		.byte	18
 1114 0017 13       		.byte	19
 1115 0018 70       		.byte	112
 1116 0019 000000   		.bss
 1117              		.set	.LANCHOR1,. + 0
 1118              		.type	ADC_initVar, %object
 1119              		.size	ADC_initVar, 1
 1120              	ADC_initVar:
 1121 0000 00       		.space	1
 1122              		.text
 1123              	.Letext0:
 1124              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1125              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1126              		.section	.debug_info,"",%progbits
 1127              	.Ldebug_info0:
 1128 0000 CD050000 		.4byte	0x5cd
 1129 0004 0400     		.2byte	0x4
 1130 0006 00000000 		.4byte	.Ldebug_abbrev0
 1131 000a 04       		.byte	0x4
 1132 000b 01       		.uleb128 0x1
 1133 000c EF010000 		.4byte	.LASF63
 1134 0010 01       		.byte	0x1
 1135 0011 EB020000 		.4byte	.LASF64
 1136 0015 96030000 		.4byte	.LASF65
 1137 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1138 001d 00000000 		.4byte	0
 1139 0021 00000000 		.4byte	.Ldebug_line0
 1140 0025 02       		.uleb128 0x2
 1141 0026 01       		.byte	0x1
 1142 0027 06       		.byte	0x6
 1143 0028 7C000000 		.4byte	.LASF0
 1144 002c 02       		.uleb128 0x2
 1145 002d 01       		.byte	0x1
 1146 002e 08       		.byte	0x8
 1147 002f 0A030000 		.4byte	.LASF1
 1148 0033 02       		.uleb128 0x2
 1149 0034 02       		.byte	0x2
 1150 0035 05       		.byte	0x5
 1151 0036 23030000 		.4byte	.LASF2
 1152 003a 02       		.uleb128 0x2
 1153 003b 02       		.byte	0x2
 1154 003c 07       		.byte	0x7
 1155 003d 5D010000 		.4byte	.LASF3
 1156 0041 02       		.uleb128 0x2
 1157 0042 04       		.byte	0x4
 1158 0043 05       		.byte	0x5
 1159 0044 9F000000 		.4byte	.LASF4
 1160 0048 02       		.uleb128 0x2
 1161 0049 04       		.byte	0x4
 1162 004a 07       		.byte	0x7
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 37


 1163 004b 2C010000 		.4byte	.LASF5
 1164 004f 02       		.uleb128 0x2
 1165 0050 08       		.byte	0x8
 1166 0051 05       		.byte	0x5
 1167 0052 6E000000 		.4byte	.LASF6
 1168 0056 02       		.uleb128 0x2
 1169 0057 08       		.byte	0x8
 1170 0058 07       		.byte	0x7
 1171 0059 32000000 		.4byte	.LASF7
 1172 005d 03       		.uleb128 0x3
 1173 005e 04       		.byte	0x4
 1174 005f 05       		.byte	0x5
 1175 0060 696E7400 		.ascii	"int\000"
 1176 0064 02       		.uleb128 0x2
 1177 0065 04       		.byte	0x4
 1178 0066 07       		.byte	0x7
 1179 0067 18010000 		.4byte	.LASF8
 1180 006b 04       		.uleb128 0x4
 1181 006c D0000000 		.4byte	.LASF9
 1182 0070 02       		.byte	0x2
 1183 0071 9801     		.2byte	0x198
 1184 0073 2C000000 		.4byte	0x2c
 1185 0077 04       		.uleb128 0x4
 1186 0078 00000000 		.4byte	.LASF10
 1187 007c 02       		.byte	0x2
 1188 007d 9901     		.2byte	0x199
 1189 007f 3A000000 		.4byte	0x3a
 1190 0083 04       		.uleb128 0x4
 1191 0084 E7000000 		.4byte	.LASF11
 1192 0088 02       		.byte	0x2
 1193 0089 9A01     		.2byte	0x19a
 1194 008b 48000000 		.4byte	0x48
 1195 008f 04       		.uleb128 0x4
 1196 0090 82030000 		.4byte	.LASF12
 1197 0094 02       		.byte	0x2
 1198 0095 9C01     		.2byte	0x19c
 1199 0097 33000000 		.4byte	0x33
 1200 009b 04       		.uleb128 0x4
 1201 009c 8F000000 		.4byte	.LASF13
 1202 00a0 02       		.byte	0x2
 1203 00a1 9D01     		.2byte	0x19d
 1204 00a3 41000000 		.4byte	0x41
 1205 00a7 04       		.uleb128 0x4
 1206 00a8 9C010000 		.4byte	.LASF14
 1207 00ac 02       		.byte	0x2
 1208 00ad 9E01     		.2byte	0x19e
 1209 00af B3000000 		.4byte	0xb3
 1210 00b3 02       		.uleb128 0x2
 1211 00b4 04       		.byte	0x4
 1212 00b5 04       		.byte	0x4
 1213 00b6 B0020000 		.4byte	.LASF15
 1214 00ba 02       		.uleb128 0x2
 1215 00bb 08       		.byte	0x8
 1216 00bc 04       		.byte	0x4
 1217 00bd E0000000 		.4byte	.LASF16
 1218 00c1 04       		.uleb128 0x4
 1219 00c2 7D020000 		.4byte	.LASF17
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 38


 1220 00c6 02       		.byte	0x2
 1221 00c7 A301     		.2byte	0x1a3
 1222 00c9 4F000000 		.4byte	0x4f
 1223 00cd 02       		.uleb128 0x2
 1224 00ce 01       		.byte	0x1
 1225 00cf 08       		.byte	0x8
 1226 00d0 41030000 		.4byte	.LASF18
 1227 00d4 04       		.uleb128 0x4
 1228 00d5 96010000 		.4byte	.LASF19
 1229 00d9 02       		.byte	0x2
 1230 00da 4402     		.2byte	0x244
 1231 00dc E0000000 		.4byte	0xe0
 1232 00e0 05       		.uleb128 0x5
 1233 00e1 83000000 		.4byte	0x83
 1234 00e5 04       		.uleb128 0x4
 1235 00e6 46030000 		.4byte	.LASF20
 1236 00ea 02       		.byte	0x2
 1237 00eb 5402     		.2byte	0x254
 1238 00ed F1000000 		.4byte	0xf1
 1239 00f1 06       		.uleb128 0x6
 1240 00f2 04       		.byte	0x4
 1241 00f3 F7000000 		.4byte	0xf7
 1242 00f7 07       		.uleb128 0x7
 1243 00f8 02       		.uleb128 0x2
 1244 00f9 04       		.byte	0x4
 1245 00fa 07       		.byte	0x7
 1246 00fb A4010000 		.4byte	.LASF21
 1247 00ff 08       		.uleb128 0x8
 1248 0100 29000000 		.4byte	.LASF26
 1249 0104 01       		.byte	0x1
 1250 0105 5E       		.byte	0x5e
 1251 0106 00000000 		.4byte	.LFB3
 1252 010a A8010000 		.4byte	.LFE3-.LFB3
 1253 010e 01       		.uleb128 0x1
 1254 010f 9C       		.byte	0x9c
 1255 0110 7A010000 		.4byte	0x17a
 1256 0114 09       		.uleb128 0x9
 1257 0115 36030000 		.4byte	.LASF22
 1258 0119 01       		.byte	0x1
 1259 011a 60       		.byte	0x60
 1260 011b 83000000 		.4byte	0x83
 1261 011f 00000000 		.4byte	.LLST0
 1262 0123 09       		.uleb128 0x9
 1263 0124 53010000 		.4byte	.LASF23
 1264 0128 01       		.byte	0x1
 1265 0129 61       		.byte	0x61
 1266 012a 83000000 		.4byte	0x83
 1267 012e 1F000000 		.4byte	.LLST1
 1268 0132 09       		.uleb128 0x9
 1269 0133 0F000000 		.4byte	.LASF24
 1270 0137 01       		.byte	0x1
 1271 0138 62       		.byte	0x62
 1272 0139 9B000000 		.4byte	0x9b
 1273 013d 00020000 		.4byte	.LLST2
 1274 0141 0A       		.uleb128 0xa
 1275 0142 49000000 		.4byte	.LASF25
 1276 0146 01       		.byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 39


 1277 0147 65       		.byte	0x65
 1278 0148 8A010000 		.4byte	0x18a
 1279 014c 05       		.uleb128 0x5
 1280 014d 03       		.byte	0x3
 1281 014e 14000000 		.4byte	ADC_InputsPlacement.4795
 1282 0152 0B       		.uleb128 0xb
 1283 0153 0A000000 		.4byte	.LVL0
 1284 0157 82050000 		.4byte	0x582
 1285 015b 6A010000 		.4byte	0x16a
 1286 015f 0C       		.uleb128 0xc
 1287 0160 01       		.uleb128 0x1
 1288 0161 51       		.byte	0x51
 1289 0162 01       		.uleb128 0x1
 1290 0163 33       		.byte	0x33
 1291 0164 0C       		.uleb128 0xc
 1292 0165 01       		.uleb128 0x1
 1293 0166 50       		.byte	0x50
 1294 0167 01       		.uleb128 0x1
 1295 0168 3F       		.byte	0x3f
 1296 0169 00       		.byte	0
 1297 016a 0D       		.uleb128 0xd
 1298 016b 12000000 		.4byte	.LVL1
 1299 016f 98050000 		.4byte	0x598
 1300 0173 0C       		.uleb128 0xc
 1301 0174 01       		.uleb128 0x1
 1302 0175 50       		.byte	0x50
 1303 0176 01       		.uleb128 0x1
 1304 0177 3F       		.byte	0x3f
 1305 0178 00       		.byte	0
 1306 0179 00       		.byte	0
 1307 017a 0E       		.uleb128 0xe
 1308 017b 6B000000 		.4byte	0x6b
 1309 017f 8A010000 		.4byte	0x18a
 1310 0183 0F       		.uleb128 0xf
 1311 0184 F8000000 		.4byte	0xf8
 1312 0188 04       		.byte	0x4
 1313 0189 00       		.byte	0
 1314 018a 10       		.uleb128 0x10
 1315 018b 7A010000 		.4byte	0x17a
 1316 018f 11       		.uleb128 0x11
 1317 0190 77030000 		.4byte	.LASF27
 1318 0194 01       		.byte	0x1
 1319 0195 4A01     		.2byte	0x14a
 1320 0197 00000000 		.4byte	.LFB4
 1321 019b 30000000 		.4byte	.LFE4-.LFB4
 1322 019f 01       		.uleb128 0x1
 1323 01a0 9C       		.byte	0x9c
 1324 01a1 B5010000 		.4byte	0x1b5
 1325 01a5 0D       		.uleb128 0xd
 1326 01a6 24000000 		.4byte	.LVL26
 1327 01aa B2050000 		.4byte	0x5b2
 1328 01ae 0C       		.uleb128 0xc
 1329 01af 01       		.uleb128 0x1
 1330 01b0 50       		.byte	0x50
 1331 01b1 01       		.uleb128 0x1
 1332 01b2 3A       		.byte	0x3a
 1333 01b3 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 40


 1334 01b4 00       		.byte	0
 1335 01b5 08       		.uleb128 0x8
 1336 01b6 95000000 		.4byte	.LASF28
 1337 01ba 01       		.byte	0x1
 1338 01bb 3F       		.byte	0x3f
 1339 01bc 00000000 		.4byte	.LFB2
 1340 01c0 20000000 		.4byte	.LFE2-.LFB2
 1341 01c4 01       		.uleb128 0x1
 1342 01c5 9C       		.byte	0x9c
 1343 01c6 DD010000 		.4byte	0x1dd
 1344 01ca 12       		.uleb128 0x12
 1345 01cb 0E000000 		.4byte	.LVL27
 1346 01cf FF000000 		.4byte	0xff
 1347 01d3 12       		.uleb128 0x12
 1348 01d4 18000000 		.4byte	.LVL28
 1349 01d8 8F010000 		.4byte	0x18f
 1350 01dc 00       		.byte	0
 1351 01dd 13       		.uleb128 0x13
 1352 01de 2D030000 		.4byte	.LASF29
 1353 01e2 01       		.byte	0x1
 1354 01e3 6D01     		.2byte	0x16d
 1355 01e5 00000000 		.4byte	.LFB5
 1356 01e9 10000000 		.4byte	.LFE5-.LFB5
 1357 01ed 01       		.uleb128 0x1
 1358 01ee 9C       		.byte	0x9c
 1359 01ef 13       		.uleb128 0x13
 1360 01f0 5D000000 		.4byte	.LASF30
 1361 01f4 01       		.byte	0x1
 1362 01f5 8701     		.2byte	0x187
 1363 01f7 00000000 		.4byte	.LFB6
 1364 01fb 14000000 		.4byte	.LFE6-.LFB6
 1365 01ff 01       		.uleb128 0x1
 1366 0200 9C       		.byte	0x9c
 1367 0201 13       		.uleb128 0x13
 1368 0202 7F010000 		.4byte	.LASF31
 1369 0206 01       		.byte	0x1
 1370 0207 A001     		.2byte	0x1a0
 1371 0209 00000000 		.4byte	.LFB7
 1372 020d 14000000 		.4byte	.LFE7-.LFB7
 1373 0211 01       		.uleb128 0x1
 1374 0212 9C       		.byte	0x9c
 1375 0213 14       		.uleb128 0x14
 1376 0214 DB010000 		.4byte	.LASF33
 1377 0218 01       		.byte	0x1
 1378 0219 C201     		.2byte	0x1c2
 1379 021b 83000000 		.4byte	0x83
 1380 021f 00000000 		.4byte	.LFB8
 1381 0223 4C000000 		.4byte	.LFE8-.LFB8
 1382 0227 01       		.uleb128 0x1
 1383 0228 9C       		.byte	0x9c
 1384 0229 4E020000 		.4byte	0x24e
 1385 022d 15       		.uleb128 0x15
 1386 022e FF000000 		.4byte	.LASF35
 1387 0232 01       		.byte	0x1
 1388 0233 C201     		.2byte	0x1c2
 1389 0235 83000000 		.4byte	0x83
 1390 0239 13020000 		.4byte	.LLST3
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 41


 1391 023d 16       		.uleb128 0x16
 1392 023e 88000000 		.4byte	.LASF32
 1393 0242 01       		.byte	0x1
 1394 0243 C401     		.2byte	0x1c4
 1395 0245 83000000 		.4byte	0x83
 1396 0249 47020000 		.4byte	.LLST4
 1397 024d 00       		.byte	0
 1398 024e 14       		.uleb128 0x14
 1399 024f DA030000 		.4byte	.LASF34
 1400 0253 01       		.byte	0x1
 1401 0254 F801     		.2byte	0x1f8
 1402 0256 8F000000 		.4byte	0x8f
 1403 025a 00000000 		.4byte	.LFB9
 1404 025e 38000000 		.4byte	.LFE9-.LFB9
 1405 0262 01       		.uleb128 0x1
 1406 0263 9C       		.byte	0x9c
 1407 0264 98020000 		.4byte	0x298
 1408 0268 15       		.uleb128 0x15
 1409 0269 3C030000 		.4byte	.LASF36
 1410 026d 01       		.byte	0x1
 1411 026e F801     		.2byte	0x1f8
 1412 0270 83000000 		.4byte	0x83
 1413 0274 7D020000 		.4byte	.LLST5
 1414 0278 16       		.uleb128 0x16
 1415 0279 D3030000 		.4byte	.LASF37
 1416 027d 01       		.byte	0x1
 1417 027e FA01     		.2byte	0x1fa
 1418 0280 83000000 		.4byte	0x83
 1419 0284 C2020000 		.4byte	.LLST6
 1420 0288 0D       		.uleb128 0xd
 1421 0289 0E000000 		.4byte	.LVL38
 1422 028d C3050000 		.4byte	0x5c3
 1423 0291 0C       		.uleb128 0xc
 1424 0292 01       		.uleb128 0x1
 1425 0293 50       		.byte	0x50
 1426 0294 01       		.uleb128 0x1
 1427 0295 30       		.byte	0x30
 1428 0296 00       		.byte	0
 1429 0297 00       		.byte	0
 1430 0298 11       		.uleb128 0x11
 1431 0299 94020000 		.4byte	.LASF38
 1432 029d 01       		.byte	0x1
 1433 029e 2502     		.2byte	0x225
 1434 02a0 00000000 		.4byte	.LFB10
 1435 02a4 10000000 		.4byte	.LFE10-.LFB10
 1436 02a8 01       		.uleb128 0x1
 1437 02a9 9C       		.byte	0x9c
 1438 02aa BF020000 		.4byte	0x2bf
 1439 02ae 15       		.uleb128 0x15
 1440 02af EE000000 		.4byte	.LASF39
 1441 02b3 01       		.byte	0x1
 1442 02b4 2502     		.2byte	0x225
 1443 02b6 83000000 		.4byte	0x83
 1444 02ba E0020000 		.4byte	.LLST7
 1445 02be 00       		.byte	0
 1446 02bf 13       		.uleb128 0x13
 1447 02c0 C7010000 		.4byte	.LASF40
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 42


 1448 02c4 01       		.byte	0x1
 1449 02c5 3B02     		.2byte	0x23b
 1450 02c7 00000000 		.4byte	.LFB11
 1451 02cb 14000000 		.4byte	.LFE11-.LFB11
 1452 02cf 01       		.uleb128 0x1
 1453 02d0 9C       		.byte	0x9c
 1454 02d1 11       		.uleb128 0x11
 1455 02d2 D4020000 		.4byte	.LASF41
 1456 02d6 01       		.byte	0x1
 1457 02d7 5102     		.2byte	0x251
 1458 02d9 00000000 		.4byte	.LFB12
 1459 02dd 1C000000 		.4byte	.LFE12-.LFB12
 1460 02e1 01       		.uleb128 0x1
 1461 02e2 9C       		.byte	0x9c
 1462 02e3 F8020000 		.4byte	0x2f8
 1463 02e7 15       		.uleb128 0x15
 1464 02e8 AD010000 		.4byte	.LASF42
 1465 02ec 01       		.byte	0x1
 1466 02ed 5102     		.2byte	0x251
 1467 02ef 83000000 		.4byte	0x83
 1468 02f3 01030000 		.4byte	.LLST8
 1469 02f7 00       		.byte	0
 1470 02f8 11       		.uleb128 0x11
 1471 02f9 B6010000 		.4byte	.LASF43
 1472 02fd 01       		.byte	0x1
 1473 02fe 6602     		.2byte	0x266
 1474 0300 00000000 		.4byte	.LFB13
 1475 0304 18000000 		.4byte	.LFE13-.LFB13
 1476 0308 01       		.uleb128 0x1
 1477 0309 9C       		.byte	0x9c
 1478 030a 1F030000 		.4byte	0x31f
 1479 030e 15       		.uleb128 0x15
 1480 030f B6020000 		.4byte	.LASF44
 1481 0313 01       		.byte	0x1
 1482 0314 6602     		.2byte	0x266
 1483 0316 83000000 		.4byte	0x83
 1484 031a 22030000 		.4byte	.LLST9
 1485 031e 00       		.byte	0
 1486 031f 11       		.uleb128 0x11
 1487 0320 07010000 		.4byte	.LASF45
 1488 0324 01       		.byte	0x1
 1489 0325 7E02     		.2byte	0x27e
 1490 0327 00000000 		.4byte	.LFB14
 1491 032b 10000000 		.4byte	.LFE14-.LFB14
 1492 032f 01       		.uleb128 0x1
 1493 0330 9C       		.byte	0x9c
 1494 0331 46030000 		.4byte	0x346
 1495 0335 15       		.uleb128 0x15
 1496 0336 EE000000 		.4byte	.LASF39
 1497 033a 01       		.byte	0x1
 1498 033b 7E02     		.2byte	0x27e
 1499 033d 83000000 		.4byte	0x83
 1500 0341 43030000 		.4byte	.LLST10
 1501 0345 00       		.byte	0
 1502 0346 11       		.uleb128 0x11
 1503 0347 3E010000 		.4byte	.LASF46
 1504 034b 01       		.byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 43


 1505 034c 9502     		.2byte	0x295
 1506 034e 00000000 		.4byte	.LFB15
 1507 0352 10000000 		.4byte	.LFE15-.LFB15
 1508 0356 01       		.uleb128 0x1
 1509 0357 9C       		.byte	0x9c
 1510 0358 6D030000 		.4byte	0x36d
 1511 035c 15       		.uleb128 0x15
 1512 035d EE000000 		.4byte	.LASF39
 1513 0361 01       		.byte	0x1
 1514 0362 9502     		.2byte	0x295
 1515 0364 83000000 		.4byte	0x83
 1516 0368 64030000 		.4byte	.LLST11
 1517 036c 00       		.byte	0
 1518 036d 11       		.uleb128 0x11
 1519 036e 88030000 		.4byte	.LASF47
 1520 0372 01       		.byte	0x1
 1521 0373 B102     		.2byte	0x2b1
 1522 0375 00000000 		.4byte	.LFB16
 1523 0379 1C000000 		.4byte	.LFE16-.LFB16
 1524 037d 01       		.uleb128 0x1
 1525 037e 9C       		.byte	0x9c
 1526 037f B3030000 		.4byte	0x3b3
 1527 0383 15       		.uleb128 0x15
 1528 0384 3C030000 		.4byte	.LASF36
 1529 0388 01       		.byte	0x1
 1530 0389 B102     		.2byte	0x2b1
 1531 038b 83000000 		.4byte	0x83
 1532 038f 85030000 		.4byte	.LLST12
 1533 0393 15       		.uleb128 0x15
 1534 0394 66030000 		.4byte	.LASF48
 1535 0398 01       		.byte	0x1
 1536 0399 B102     		.2byte	0x2b1
 1537 039b 8F000000 		.4byte	0x8f
 1538 039f B1030000 		.4byte	.LLST13
 1539 03a3 0D       		.uleb128 0xd
 1540 03a4 10000000 		.4byte	.LVL56
 1541 03a8 C3050000 		.4byte	0x5c3
 1542 03ac 0C       		.uleb128 0xc
 1543 03ad 01       		.uleb128 0x1
 1544 03ae 50       		.byte	0x50
 1545 03af 01       		.uleb128 0x1
 1546 03b0 30       		.byte	0x30
 1547 03b1 00       		.byte	0
 1548 03b2 00       		.byte	0
 1549 03b3 11       		.uleb128 0x11
 1550 03b4 A4020000 		.4byte	.LASF49
 1551 03b8 01       		.byte	0x1
 1552 03b9 D302     		.2byte	0x2d3
 1553 03bb 00000000 		.4byte	.LFB17
 1554 03bf 1C000000 		.4byte	.LFE17-.LFB17
 1555 03c3 01       		.uleb128 0x1
 1556 03c4 9C       		.byte	0x9c
 1557 03c5 F9030000 		.4byte	0x3f9
 1558 03c9 15       		.uleb128 0x15
 1559 03ca 3C030000 		.4byte	.LASF36
 1560 03ce 01       		.byte	0x1
 1561 03cf D302     		.2byte	0x2d3
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 44


 1562 03d1 83000000 		.4byte	0x83
 1563 03d5 D2030000 		.4byte	.LLST14
 1564 03d9 15       		.uleb128 0x15
 1565 03da 07000000 		.4byte	.LASF50
 1566 03de 01       		.byte	0x1
 1567 03df D302     		.2byte	0x2d3
 1568 03e1 9B000000 		.4byte	0x9b
 1569 03e5 FE030000 		.4byte	.LLST15
 1570 03e9 0D       		.uleb128 0xd
 1571 03ea 10000000 		.4byte	.LVL60
 1572 03ee C3050000 		.4byte	0x5c3
 1573 03f2 0C       		.uleb128 0xc
 1574 03f3 01       		.uleb128 0x1
 1575 03f4 50       		.byte	0x50
 1576 03f5 01       		.uleb128 0x1
 1577 03f6 30       		.byte	0x30
 1578 03f7 00       		.byte	0
 1579 03f8 00       		.byte	0
 1580 03f9 17       		.uleb128 0x17
 1581 03fa C0020000 		.4byte	.LASF51
 1582 03fe 01       		.byte	0x1
 1583 03ff F402     		.2byte	0x2f4
 1584 0401 8F000000 		.4byte	0x8f
 1585 0405 00000000 		.4byte	.LFB18
 1586 0409 5C000000 		.4byte	.LFE18-.LFB18
 1587 040d 01       		.uleb128 0x1
 1588 040e 9C       		.byte	0x9c
 1589 040f 51040000 		.4byte	0x451
 1590 0413 15       		.uleb128 0x15
 1591 0414 3C030000 		.4byte	.LASF36
 1592 0418 01       		.byte	0x1
 1593 0419 F402     		.2byte	0x2f4
 1594 041b 83000000 		.4byte	0x83
 1595 041f 2E040000 		.4byte	.LLST16
 1596 0423 15       		.uleb128 0x15
 1597 0424 6D030000 		.4byte	.LASF52
 1598 0428 01       		.byte	0x1
 1599 0429 F402     		.2byte	0x2f4
 1600 042b 8F000000 		.4byte	0x8f
 1601 042f 5A040000 		.4byte	.LLST17
 1602 0433 18       		.uleb128 0x18
 1603 0434 8F010000 		.4byte	.LASF53
 1604 0438 01       		.byte	0x1
 1605 0439 F602     		.2byte	0x2f6
 1606 043b 8F000000 		.4byte	0x8f
 1607 043f 01       		.uleb128 0x1
 1608 0440 50       		.byte	0x50
 1609 0441 0D       		.uleb128 0xd
 1610 0442 10000000 		.4byte	.LVL65
 1611 0446 C3050000 		.4byte	0x5c3
 1612 044a 0C       		.uleb128 0xc
 1613 044b 01       		.uleb128 0x1
 1614 044c 50       		.byte	0x50
 1615 044d 01       		.uleb128 0x1
 1616 044e 30       		.byte	0x30
 1617 044f 00       		.byte	0
 1618 0450 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 45


 1619 0451 17       		.uleb128 0x17
 1620 0452 A8000000 		.4byte	.LASF54
 1621 0456 01       		.byte	0x1
 1622 0457 2A03     		.2byte	0x32a
 1623 0459 9B000000 		.4byte	0x9b
 1624 045d 00000000 		.4byte	.LFB19
 1625 0461 40000000 		.4byte	.LFE19-.LFB19
 1626 0465 01       		.uleb128 0x1
 1627 0466 9C       		.byte	0x9c
 1628 0467 A7040000 		.4byte	0x4a7
 1629 046b 15       		.uleb128 0x15
 1630 046c 3C030000 		.4byte	.LASF36
 1631 0470 01       		.byte	0x1
 1632 0471 2A03     		.2byte	0x32a
 1633 0473 83000000 		.4byte	0x83
 1634 0477 91040000 		.4byte	.LLST18
 1635 047b 15       		.uleb128 0x15
 1636 047c 6D030000 		.4byte	.LASF52
 1637 0480 01       		.byte	0x1
 1638 0481 2A03     		.2byte	0x32a
 1639 0483 8F000000 		.4byte	0x8f
 1640 0487 BD040000 		.4byte	.LLST19
 1641 048b 19       		.uleb128 0x19
 1642 048c 25010000 		.4byte	.LASF66
 1643 0490 01       		.byte	0x1
 1644 0491 2C03     		.2byte	0x32c
 1645 0493 C1000000 		.4byte	0xc1
 1646 0497 0D       		.uleb128 0xd
 1647 0498 10000000 		.4byte	.LVL74
 1648 049c C3050000 		.4byte	0x5c3
 1649 04a0 0C       		.uleb128 0xc
 1650 04a1 01       		.uleb128 0x1
 1651 04a2 50       		.byte	0x50
 1652 04a3 01       		.uleb128 0x1
 1653 04a4 30       		.byte	0x30
 1654 04a5 00       		.byte	0
 1655 04a6 00       		.byte	0
 1656 04a7 17       		.uleb128 0x17
 1657 04a8 16000000 		.4byte	.LASF55
 1658 04ac 01       		.byte	0x1
 1659 04ad 5703     		.2byte	0x357
 1660 04af A7000000 		.4byte	0xa7
 1661 04b3 00000000 		.4byte	.LFB20
 1662 04b7 48000000 		.4byte	.LFE20-.LFB20
 1663 04bb 01       		.uleb128 0x1
 1664 04bc 9C       		.byte	0x9c
 1665 04bd FF040000 		.4byte	0x4ff
 1666 04c1 15       		.uleb128 0x15
 1667 04c2 3C030000 		.4byte	.LASF36
 1668 04c6 01       		.byte	0x1
 1669 04c7 5703     		.2byte	0x357
 1670 04c9 83000000 		.4byte	0x83
 1671 04cd E9040000 		.4byte	.LLST20
 1672 04d1 15       		.uleb128 0x15
 1673 04d2 6D030000 		.4byte	.LASF52
 1674 04d6 01       		.byte	0x1
 1675 04d7 5703     		.2byte	0x357
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 46


 1676 04d9 8F000000 		.4byte	0x8f
 1677 04dd 15050000 		.4byte	.LLST21
 1678 04e1 18       		.uleb128 0x18
 1679 04e2 4D010000 		.4byte	.LASF56
 1680 04e6 01       		.byte	0x1
 1681 04e7 5903     		.2byte	0x359
 1682 04e9 A7000000 		.4byte	0xa7
 1683 04ed 01       		.uleb128 0x1
 1684 04ee 50       		.byte	0x50
 1685 04ef 0D       		.uleb128 0xd
 1686 04f0 10000000 		.4byte	.LVL81
 1687 04f4 C3050000 		.4byte	0x5c3
 1688 04f8 0C       		.uleb128 0xc
 1689 04f9 01       		.uleb128 0x1
 1690 04fa 50       		.byte	0x50
 1691 04fb 01       		.uleb128 0x1
 1692 04fc 30       		.byte	0x30
 1693 04fd 00       		.byte	0
 1694 04fe 00       		.byte	0
 1695 04ff 0E       		.uleb128 0xe
 1696 0500 83000000 		.4byte	0x83
 1697 0504 0F050000 		.4byte	0x50f
 1698 0508 0F       		.uleb128 0xf
 1699 0509 F8000000 		.4byte	0xf8
 1700 050d 04       		.byte	0x4
 1701 050e 00       		.byte	0
 1702 050f 0A       		.uleb128 0xa
 1703 0510 53030000 		.4byte	.LASF57
 1704 0514 01       		.byte	0x1
 1705 0515 21       		.byte	0x21
 1706 0516 20050000 		.4byte	0x520
 1707 051a 05       		.uleb128 0x5
 1708 051b 03       		.byte	0x3
 1709 051c 00000000 		.4byte	ADC_channelsConfig
 1710 0520 10       		.uleb128 0x10
 1711 0521 FF040000 		.4byte	0x4ff
 1712 0525 1A       		.uleb128 0x1a
 1713 0526 F3000000 		.4byte	.LASF58
 1714 052a 01       		.byte	0x1
 1715 052b 18       		.byte	0x18
 1716 052c 6B000000 		.4byte	0x6b
 1717 0530 05       		.uleb128 0x5
 1718 0531 03       		.byte	0x3
 1719 0532 00000000 		.4byte	ADC_initVar
 1720 0536 0E       		.uleb128 0xe
 1721 0537 8F000000 		.4byte	0x8f
 1722 053b 46050000 		.4byte	0x546
 1723 053f 0F       		.uleb128 0xf
 1724 0540 F8000000 		.4byte	0xf8
 1725 0544 04       		.byte	0x4
 1726 0545 00       		.byte	0
 1727 0546 1A       		.uleb128 0x1a
 1728 0547 18030000 		.4byte	.LASF59
 1729 054b 01       		.byte	0x1
 1730 054c 19       		.byte	0x19
 1731 054d 57050000 		.4byte	0x557
 1732 0551 05       		.uleb128 0x5
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 47


 1733 0552 03       		.byte	0x3
 1734 0553 00000000 		.4byte	ADC_offset
 1735 0557 05       		.uleb128 0x5
 1736 0558 36050000 		.4byte	0x536
 1737 055c 0E       		.uleb128 0xe
 1738 055d 9B000000 		.4byte	0x9b
 1739 0561 6C050000 		.4byte	0x56c
 1740 0565 0F       		.uleb128 0xf
 1741 0566 F8000000 		.4byte	0xf8
 1742 056a 04       		.byte	0x4
 1743 056b 00       		.byte	0
 1744 056c 1A       		.uleb128 0x1a
 1745 056d BC000000 		.4byte	.LASF60
 1746 0571 01       		.byte	0x1
 1747 0572 1A       		.byte	0x1a
 1748 0573 7D050000 		.4byte	0x57d
 1749 0577 05       		.uleb128 0x5
 1750 0578 03       		.byte	0x3
 1751 0579 00000000 		.4byte	ADC_countsPer10Volt
 1752 057d 05       		.uleb128 0x5
 1753 057e 5C050000 		.4byte	0x55c
 1754 0582 1B       		.uleb128 0x1b
 1755 0583 83020000 		.4byte	.LASF61
 1756 0587 03       		.byte	0x3
 1757 0588 BE       		.byte	0xbe
 1758 0589 98050000 		.4byte	0x598
 1759 058d 1C       		.uleb128 0x1c
 1760 058e 6B000000 		.4byte	0x6b
 1761 0592 1C       		.uleb128 0x1c
 1762 0593 6B000000 		.4byte	0x6b
 1763 0597 00       		.byte	0
 1764 0598 1D       		.uleb128 0x1d
 1765 0599 70010000 		.4byte	.LASF67
 1766 059d 03       		.byte	0x3
 1767 059e BB       		.byte	0xbb
 1768 059f E5000000 		.4byte	0xe5
 1769 05a3 B2050000 		.4byte	0x5b2
 1770 05a7 1C       		.uleb128 0x1c
 1771 05a8 6B000000 		.4byte	0x6b
 1772 05ac 1C       		.uleb128 0x1c
 1773 05ad E5000000 		.4byte	0xe5
 1774 05b1 00       		.byte	0
 1775 05b2 1B       		.uleb128 0x1b
 1776 05b3 D6000000 		.4byte	.LASF62
 1777 05b7 03       		.byte	0x3
 1778 05b8 D8       		.byte	0xd8
 1779 05b9 C3050000 		.4byte	0x5c3
 1780 05bd 1C       		.uleb128 0x1c
 1781 05be 77000000 		.4byte	0x77
 1782 05c2 00       		.byte	0
 1783 05c3 1E       		.uleb128 0x1e
 1784 05c4 E4020000 		.4byte	.LASF68
 1785 05c8 03       		.byte	0x3
 1786 05c9 E5       		.byte	0xe5
 1787 05ca 1C       		.uleb128 0x1c
 1788 05cb 6B000000 		.4byte	0x6b
 1789 05cf 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 48


 1790 05d0 00       		.byte	0
 1791              		.section	.debug_abbrev,"",%progbits
 1792              	.Ldebug_abbrev0:
 1793 0000 01       		.uleb128 0x1
 1794 0001 11       		.uleb128 0x11
 1795 0002 01       		.byte	0x1
 1796 0003 25       		.uleb128 0x25
 1797 0004 0E       		.uleb128 0xe
 1798 0005 13       		.uleb128 0x13
 1799 0006 0B       		.uleb128 0xb
 1800 0007 03       		.uleb128 0x3
 1801 0008 0E       		.uleb128 0xe
 1802 0009 1B       		.uleb128 0x1b
 1803 000a 0E       		.uleb128 0xe
 1804 000b 55       		.uleb128 0x55
 1805 000c 17       		.uleb128 0x17
 1806 000d 11       		.uleb128 0x11
 1807 000e 01       		.uleb128 0x1
 1808 000f 10       		.uleb128 0x10
 1809 0010 17       		.uleb128 0x17
 1810 0011 00       		.byte	0
 1811 0012 00       		.byte	0
 1812 0013 02       		.uleb128 0x2
 1813 0014 24       		.uleb128 0x24
 1814 0015 00       		.byte	0
 1815 0016 0B       		.uleb128 0xb
 1816 0017 0B       		.uleb128 0xb
 1817 0018 3E       		.uleb128 0x3e
 1818 0019 0B       		.uleb128 0xb
 1819 001a 03       		.uleb128 0x3
 1820 001b 0E       		.uleb128 0xe
 1821 001c 00       		.byte	0
 1822 001d 00       		.byte	0
 1823 001e 03       		.uleb128 0x3
 1824 001f 24       		.uleb128 0x24
 1825 0020 00       		.byte	0
 1826 0021 0B       		.uleb128 0xb
 1827 0022 0B       		.uleb128 0xb
 1828 0023 3E       		.uleb128 0x3e
 1829 0024 0B       		.uleb128 0xb
 1830 0025 03       		.uleb128 0x3
 1831 0026 08       		.uleb128 0x8
 1832 0027 00       		.byte	0
 1833 0028 00       		.byte	0
 1834 0029 04       		.uleb128 0x4
 1835 002a 16       		.uleb128 0x16
 1836 002b 00       		.byte	0
 1837 002c 03       		.uleb128 0x3
 1838 002d 0E       		.uleb128 0xe
 1839 002e 3A       		.uleb128 0x3a
 1840 002f 0B       		.uleb128 0xb
 1841 0030 3B       		.uleb128 0x3b
 1842 0031 05       		.uleb128 0x5
 1843 0032 49       		.uleb128 0x49
 1844 0033 13       		.uleb128 0x13
 1845 0034 00       		.byte	0
 1846 0035 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 49


 1847 0036 05       		.uleb128 0x5
 1848 0037 35       		.uleb128 0x35
 1849 0038 00       		.byte	0
 1850 0039 49       		.uleb128 0x49
 1851 003a 13       		.uleb128 0x13
 1852 003b 00       		.byte	0
 1853 003c 00       		.byte	0
 1854 003d 06       		.uleb128 0x6
 1855 003e 0F       		.uleb128 0xf
 1856 003f 00       		.byte	0
 1857 0040 0B       		.uleb128 0xb
 1858 0041 0B       		.uleb128 0xb
 1859 0042 49       		.uleb128 0x49
 1860 0043 13       		.uleb128 0x13
 1861 0044 00       		.byte	0
 1862 0045 00       		.byte	0
 1863 0046 07       		.uleb128 0x7
 1864 0047 15       		.uleb128 0x15
 1865 0048 00       		.byte	0
 1866 0049 27       		.uleb128 0x27
 1867 004a 19       		.uleb128 0x19
 1868 004b 00       		.byte	0
 1869 004c 00       		.byte	0
 1870 004d 08       		.uleb128 0x8
 1871 004e 2E       		.uleb128 0x2e
 1872 004f 01       		.byte	0x1
 1873 0050 3F       		.uleb128 0x3f
 1874 0051 19       		.uleb128 0x19
 1875 0052 03       		.uleb128 0x3
 1876 0053 0E       		.uleb128 0xe
 1877 0054 3A       		.uleb128 0x3a
 1878 0055 0B       		.uleb128 0xb
 1879 0056 3B       		.uleb128 0x3b
 1880 0057 0B       		.uleb128 0xb
 1881 0058 27       		.uleb128 0x27
 1882 0059 19       		.uleb128 0x19
 1883 005a 11       		.uleb128 0x11
 1884 005b 01       		.uleb128 0x1
 1885 005c 12       		.uleb128 0x12
 1886 005d 06       		.uleb128 0x6
 1887 005e 40       		.uleb128 0x40
 1888 005f 18       		.uleb128 0x18
 1889 0060 9742     		.uleb128 0x2117
 1890 0062 19       		.uleb128 0x19
 1891 0063 01       		.uleb128 0x1
 1892 0064 13       		.uleb128 0x13
 1893 0065 00       		.byte	0
 1894 0066 00       		.byte	0
 1895 0067 09       		.uleb128 0x9
 1896 0068 34       		.uleb128 0x34
 1897 0069 00       		.byte	0
 1898 006a 03       		.uleb128 0x3
 1899 006b 0E       		.uleb128 0xe
 1900 006c 3A       		.uleb128 0x3a
 1901 006d 0B       		.uleb128 0xb
 1902 006e 3B       		.uleb128 0x3b
 1903 006f 0B       		.uleb128 0xb
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 50


 1904 0070 49       		.uleb128 0x49
 1905 0071 13       		.uleb128 0x13
 1906 0072 02       		.uleb128 0x2
 1907 0073 17       		.uleb128 0x17
 1908 0074 00       		.byte	0
 1909 0075 00       		.byte	0
 1910 0076 0A       		.uleb128 0xa
 1911 0077 34       		.uleb128 0x34
 1912 0078 00       		.byte	0
 1913 0079 03       		.uleb128 0x3
 1914 007a 0E       		.uleb128 0xe
 1915 007b 3A       		.uleb128 0x3a
 1916 007c 0B       		.uleb128 0xb
 1917 007d 3B       		.uleb128 0x3b
 1918 007e 0B       		.uleb128 0xb
 1919 007f 49       		.uleb128 0x49
 1920 0080 13       		.uleb128 0x13
 1921 0081 02       		.uleb128 0x2
 1922 0082 18       		.uleb128 0x18
 1923 0083 00       		.byte	0
 1924 0084 00       		.byte	0
 1925 0085 0B       		.uleb128 0xb
 1926 0086 898201   		.uleb128 0x4109
 1927 0089 01       		.byte	0x1
 1928 008a 11       		.uleb128 0x11
 1929 008b 01       		.uleb128 0x1
 1930 008c 31       		.uleb128 0x31
 1931 008d 13       		.uleb128 0x13
 1932 008e 01       		.uleb128 0x1
 1933 008f 13       		.uleb128 0x13
 1934 0090 00       		.byte	0
 1935 0091 00       		.byte	0
 1936 0092 0C       		.uleb128 0xc
 1937 0093 8A8201   		.uleb128 0x410a
 1938 0096 00       		.byte	0
 1939 0097 02       		.uleb128 0x2
 1940 0098 18       		.uleb128 0x18
 1941 0099 9142     		.uleb128 0x2111
 1942 009b 18       		.uleb128 0x18
 1943 009c 00       		.byte	0
 1944 009d 00       		.byte	0
 1945 009e 0D       		.uleb128 0xd
 1946 009f 898201   		.uleb128 0x4109
 1947 00a2 01       		.byte	0x1
 1948 00a3 11       		.uleb128 0x11
 1949 00a4 01       		.uleb128 0x1
 1950 00a5 31       		.uleb128 0x31
 1951 00a6 13       		.uleb128 0x13
 1952 00a7 00       		.byte	0
 1953 00a8 00       		.byte	0
 1954 00a9 0E       		.uleb128 0xe
 1955 00aa 01       		.uleb128 0x1
 1956 00ab 01       		.byte	0x1
 1957 00ac 49       		.uleb128 0x49
 1958 00ad 13       		.uleb128 0x13
 1959 00ae 01       		.uleb128 0x1
 1960 00af 13       		.uleb128 0x13
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 51


 1961 00b0 00       		.byte	0
 1962 00b1 00       		.byte	0
 1963 00b2 0F       		.uleb128 0xf
 1964 00b3 21       		.uleb128 0x21
 1965 00b4 00       		.byte	0
 1966 00b5 49       		.uleb128 0x49
 1967 00b6 13       		.uleb128 0x13
 1968 00b7 2F       		.uleb128 0x2f
 1969 00b8 0B       		.uleb128 0xb
 1970 00b9 00       		.byte	0
 1971 00ba 00       		.byte	0
 1972 00bb 10       		.uleb128 0x10
 1973 00bc 26       		.uleb128 0x26
 1974 00bd 00       		.byte	0
 1975 00be 49       		.uleb128 0x49
 1976 00bf 13       		.uleb128 0x13
 1977 00c0 00       		.byte	0
 1978 00c1 00       		.byte	0
 1979 00c2 11       		.uleb128 0x11
 1980 00c3 2E       		.uleb128 0x2e
 1981 00c4 01       		.byte	0x1
 1982 00c5 3F       		.uleb128 0x3f
 1983 00c6 19       		.uleb128 0x19
 1984 00c7 03       		.uleb128 0x3
 1985 00c8 0E       		.uleb128 0xe
 1986 00c9 3A       		.uleb128 0x3a
 1987 00ca 0B       		.uleb128 0xb
 1988 00cb 3B       		.uleb128 0x3b
 1989 00cc 05       		.uleb128 0x5
 1990 00cd 27       		.uleb128 0x27
 1991 00ce 19       		.uleb128 0x19
 1992 00cf 11       		.uleb128 0x11
 1993 00d0 01       		.uleb128 0x1
 1994 00d1 12       		.uleb128 0x12
 1995 00d2 06       		.uleb128 0x6
 1996 00d3 40       		.uleb128 0x40
 1997 00d4 18       		.uleb128 0x18
 1998 00d5 9742     		.uleb128 0x2117
 1999 00d7 19       		.uleb128 0x19
 2000 00d8 01       		.uleb128 0x1
 2001 00d9 13       		.uleb128 0x13
 2002 00da 00       		.byte	0
 2003 00db 00       		.byte	0
 2004 00dc 12       		.uleb128 0x12
 2005 00dd 898201   		.uleb128 0x4109
 2006 00e0 00       		.byte	0
 2007 00e1 11       		.uleb128 0x11
 2008 00e2 01       		.uleb128 0x1
 2009 00e3 31       		.uleb128 0x31
 2010 00e4 13       		.uleb128 0x13
 2011 00e5 00       		.byte	0
 2012 00e6 00       		.byte	0
 2013 00e7 13       		.uleb128 0x13
 2014 00e8 2E       		.uleb128 0x2e
 2015 00e9 00       		.byte	0
 2016 00ea 3F       		.uleb128 0x3f
 2017 00eb 19       		.uleb128 0x19
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 52


 2018 00ec 03       		.uleb128 0x3
 2019 00ed 0E       		.uleb128 0xe
 2020 00ee 3A       		.uleb128 0x3a
 2021 00ef 0B       		.uleb128 0xb
 2022 00f0 3B       		.uleb128 0x3b
 2023 00f1 05       		.uleb128 0x5
 2024 00f2 27       		.uleb128 0x27
 2025 00f3 19       		.uleb128 0x19
 2026 00f4 11       		.uleb128 0x11
 2027 00f5 01       		.uleb128 0x1
 2028 00f6 12       		.uleb128 0x12
 2029 00f7 06       		.uleb128 0x6
 2030 00f8 40       		.uleb128 0x40
 2031 00f9 18       		.uleb128 0x18
 2032 00fa 9742     		.uleb128 0x2117
 2033 00fc 19       		.uleb128 0x19
 2034 00fd 00       		.byte	0
 2035 00fe 00       		.byte	0
 2036 00ff 14       		.uleb128 0x14
 2037 0100 2E       		.uleb128 0x2e
 2038 0101 01       		.byte	0x1
 2039 0102 3F       		.uleb128 0x3f
 2040 0103 19       		.uleb128 0x19
 2041 0104 03       		.uleb128 0x3
 2042 0105 0E       		.uleb128 0xe
 2043 0106 3A       		.uleb128 0x3a
 2044 0107 0B       		.uleb128 0xb
 2045 0108 3B       		.uleb128 0x3b
 2046 0109 05       		.uleb128 0x5
 2047 010a 27       		.uleb128 0x27
 2048 010b 19       		.uleb128 0x19
 2049 010c 49       		.uleb128 0x49
 2050 010d 13       		.uleb128 0x13
 2051 010e 11       		.uleb128 0x11
 2052 010f 01       		.uleb128 0x1
 2053 0110 12       		.uleb128 0x12
 2054 0111 06       		.uleb128 0x6
 2055 0112 40       		.uleb128 0x40
 2056 0113 18       		.uleb128 0x18
 2057 0114 9742     		.uleb128 0x2117
 2058 0116 19       		.uleb128 0x19
 2059 0117 01       		.uleb128 0x1
 2060 0118 13       		.uleb128 0x13
 2061 0119 00       		.byte	0
 2062 011a 00       		.byte	0
 2063 011b 15       		.uleb128 0x15
 2064 011c 05       		.uleb128 0x5
 2065 011d 00       		.byte	0
 2066 011e 03       		.uleb128 0x3
 2067 011f 0E       		.uleb128 0xe
 2068 0120 3A       		.uleb128 0x3a
 2069 0121 0B       		.uleb128 0xb
 2070 0122 3B       		.uleb128 0x3b
 2071 0123 05       		.uleb128 0x5
 2072 0124 49       		.uleb128 0x49
 2073 0125 13       		.uleb128 0x13
 2074 0126 02       		.uleb128 0x2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 53


 2075 0127 17       		.uleb128 0x17
 2076 0128 00       		.byte	0
 2077 0129 00       		.byte	0
 2078 012a 16       		.uleb128 0x16
 2079 012b 34       		.uleb128 0x34
 2080 012c 00       		.byte	0
 2081 012d 03       		.uleb128 0x3
 2082 012e 0E       		.uleb128 0xe
 2083 012f 3A       		.uleb128 0x3a
 2084 0130 0B       		.uleb128 0xb
 2085 0131 3B       		.uleb128 0x3b
 2086 0132 05       		.uleb128 0x5
 2087 0133 49       		.uleb128 0x49
 2088 0134 13       		.uleb128 0x13
 2089 0135 02       		.uleb128 0x2
 2090 0136 17       		.uleb128 0x17
 2091 0137 00       		.byte	0
 2092 0138 00       		.byte	0
 2093 0139 17       		.uleb128 0x17
 2094 013a 2E       		.uleb128 0x2e
 2095 013b 01       		.byte	0x1
 2096 013c 3F       		.uleb128 0x3f
 2097 013d 19       		.uleb128 0x19
 2098 013e 03       		.uleb128 0x3
 2099 013f 0E       		.uleb128 0xe
 2100 0140 3A       		.uleb128 0x3a
 2101 0141 0B       		.uleb128 0xb
 2102 0142 3B       		.uleb128 0x3b
 2103 0143 05       		.uleb128 0x5
 2104 0144 27       		.uleb128 0x27
 2105 0145 19       		.uleb128 0x19
 2106 0146 49       		.uleb128 0x49
 2107 0147 13       		.uleb128 0x13
 2108 0148 11       		.uleb128 0x11
 2109 0149 01       		.uleb128 0x1
 2110 014a 12       		.uleb128 0x12
 2111 014b 06       		.uleb128 0x6
 2112 014c 40       		.uleb128 0x40
 2113 014d 18       		.uleb128 0x18
 2114 014e 9642     		.uleb128 0x2116
 2115 0150 19       		.uleb128 0x19
 2116 0151 01       		.uleb128 0x1
 2117 0152 13       		.uleb128 0x13
 2118 0153 00       		.byte	0
 2119 0154 00       		.byte	0
 2120 0155 18       		.uleb128 0x18
 2121 0156 34       		.uleb128 0x34
 2122 0157 00       		.byte	0
 2123 0158 03       		.uleb128 0x3
 2124 0159 0E       		.uleb128 0xe
 2125 015a 3A       		.uleb128 0x3a
 2126 015b 0B       		.uleb128 0xb
 2127 015c 3B       		.uleb128 0x3b
 2128 015d 05       		.uleb128 0x5
 2129 015e 49       		.uleb128 0x49
 2130 015f 13       		.uleb128 0x13
 2131 0160 02       		.uleb128 0x2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 54


 2132 0161 18       		.uleb128 0x18
 2133 0162 00       		.byte	0
 2134 0163 00       		.byte	0
 2135 0164 19       		.uleb128 0x19
 2136 0165 34       		.uleb128 0x34
 2137 0166 00       		.byte	0
 2138 0167 03       		.uleb128 0x3
 2139 0168 0E       		.uleb128 0xe
 2140 0169 3A       		.uleb128 0x3a
 2141 016a 0B       		.uleb128 0xb
 2142 016b 3B       		.uleb128 0x3b
 2143 016c 05       		.uleb128 0x5
 2144 016d 49       		.uleb128 0x49
 2145 016e 13       		.uleb128 0x13
 2146 016f 00       		.byte	0
 2147 0170 00       		.byte	0
 2148 0171 1A       		.uleb128 0x1a
 2149 0172 34       		.uleb128 0x34
 2150 0173 00       		.byte	0
 2151 0174 03       		.uleb128 0x3
 2152 0175 0E       		.uleb128 0xe
 2153 0176 3A       		.uleb128 0x3a
 2154 0177 0B       		.uleb128 0xb
 2155 0178 3B       		.uleb128 0x3b
 2156 0179 0B       		.uleb128 0xb
 2157 017a 49       		.uleb128 0x49
 2158 017b 13       		.uleb128 0x13
 2159 017c 3F       		.uleb128 0x3f
 2160 017d 19       		.uleb128 0x19
 2161 017e 02       		.uleb128 0x2
 2162 017f 18       		.uleb128 0x18
 2163 0180 00       		.byte	0
 2164 0181 00       		.byte	0
 2165 0182 1B       		.uleb128 0x1b
 2166 0183 2E       		.uleb128 0x2e
 2167 0184 01       		.byte	0x1
 2168 0185 3F       		.uleb128 0x3f
 2169 0186 19       		.uleb128 0x19
 2170 0187 03       		.uleb128 0x3
 2171 0188 0E       		.uleb128 0xe
 2172 0189 3A       		.uleb128 0x3a
 2173 018a 0B       		.uleb128 0xb
 2174 018b 3B       		.uleb128 0x3b
 2175 018c 0B       		.uleb128 0xb
 2176 018d 27       		.uleb128 0x27
 2177 018e 19       		.uleb128 0x19
 2178 018f 3C       		.uleb128 0x3c
 2179 0190 19       		.uleb128 0x19
 2180 0191 01       		.uleb128 0x1
 2181 0192 13       		.uleb128 0x13
 2182 0193 00       		.byte	0
 2183 0194 00       		.byte	0
 2184 0195 1C       		.uleb128 0x1c
 2185 0196 05       		.uleb128 0x5
 2186 0197 00       		.byte	0
 2187 0198 49       		.uleb128 0x49
 2188 0199 13       		.uleb128 0x13
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 55


 2189 019a 00       		.byte	0
 2190 019b 00       		.byte	0
 2191 019c 1D       		.uleb128 0x1d
 2192 019d 2E       		.uleb128 0x2e
 2193 019e 01       		.byte	0x1
 2194 019f 3F       		.uleb128 0x3f
 2195 01a0 19       		.uleb128 0x19
 2196 01a1 03       		.uleb128 0x3
 2197 01a2 0E       		.uleb128 0xe
 2198 01a3 3A       		.uleb128 0x3a
 2199 01a4 0B       		.uleb128 0xb
 2200 01a5 3B       		.uleb128 0x3b
 2201 01a6 0B       		.uleb128 0xb
 2202 01a7 27       		.uleb128 0x27
 2203 01a8 19       		.uleb128 0x19
 2204 01a9 49       		.uleb128 0x49
 2205 01aa 13       		.uleb128 0x13
 2206 01ab 3C       		.uleb128 0x3c
 2207 01ac 19       		.uleb128 0x19
 2208 01ad 01       		.uleb128 0x1
 2209 01ae 13       		.uleb128 0x13
 2210 01af 00       		.byte	0
 2211 01b0 00       		.byte	0
 2212 01b1 1E       		.uleb128 0x1e
 2213 01b2 2E       		.uleb128 0x2e
 2214 01b3 01       		.byte	0x1
 2215 01b4 3F       		.uleb128 0x3f
 2216 01b5 19       		.uleb128 0x19
 2217 01b6 03       		.uleb128 0x3
 2218 01b7 0E       		.uleb128 0xe
 2219 01b8 3A       		.uleb128 0x3a
 2220 01b9 0B       		.uleb128 0xb
 2221 01ba 3B       		.uleb128 0x3b
 2222 01bb 0B       		.uleb128 0xb
 2223 01bc 27       		.uleb128 0x27
 2224 01bd 19       		.uleb128 0x19
 2225 01be 3C       		.uleb128 0x3c
 2226 01bf 19       		.uleb128 0x19
 2227 01c0 00       		.byte	0
 2228 01c1 00       		.byte	0
 2229 01c2 00       		.byte	0
 2230              		.section	.debug_loc,"",%progbits
 2231              	.Ldebug_loc0:
 2232              	.LLST0:
 2233 0000 68000000 		.4byte	.LVL5
 2234 0004 6C000000 		.4byte	.LVL6
 2235 0008 0200     		.2byte	0x2
 2236 000a 30       		.byte	0x30
 2237 000b 9F       		.byte	0x9f
 2238 000c 6C000000 		.4byte	.LVL6
 2239 0010 A8010000 		.4byte	.LFE3
 2240 0014 0100     		.2byte	0x1
 2241 0016 52       		.byte	0x52
 2242 0017 00000000 		.4byte	0
 2243 001b 00000000 		.4byte	0
 2244              	.LLST1:
 2245 001f 5E000000 		.4byte	.LVL2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 56


 2246 0023 62000000 		.4byte	.LVL3
 2247 0027 0100     		.2byte	0x1
 2248 0029 52       		.byte	0x52
 2249 002a 62000000 		.4byte	.LVL3
 2250 002e 6C000000 		.4byte	.LVL6
 2251 0032 0100     		.2byte	0x1
 2252 0034 53       		.byte	0x53
 2253 0035 78000000 		.4byte	.LVL7
 2254 0039 90000000 		.4byte	.LVL9
 2255 003d 0100     		.2byte	0x1
 2256 003f 53       		.byte	0x53
 2257 0040 90000000 		.4byte	.LVL9
 2258 0044 96000000 		.4byte	.LVL10
 2259 0048 0200     		.2byte	0x2
 2260 004a 71       		.byte	0x71
 2261 004b 00       		.sleb128 0
 2262 004c 96000000 		.4byte	.LVL10
 2263 0050 A2000000 		.4byte	.LVL11
 2264 0054 0700     		.2byte	0x7
 2265 0056 72       		.byte	0x72
 2266 0057 00       		.sleb128 0
 2267 0058 32       		.byte	0x32
 2268 0059 24       		.byte	0x24
 2269 005a 7C       		.byte	0x7c
 2270 005b 00       		.sleb128 0
 2271 005c 22       		.byte	0x22
 2272 005d A2000000 		.4byte	.LVL11
 2273 0061 A6000000 		.4byte	.LVL12
 2274 0065 1E00     		.2byte	0x1e
 2275 0067 72       		.byte	0x72
 2276 0068 00       		.sleb128 0
 2277 0069 32       		.byte	0x32
 2278 006a 24       		.byte	0x24
 2279 006b 03       		.byte	0x3
 2280 006c 00000000 		.4byte	.LANCHOR0
 2281 0070 22       		.byte	0x22
 2282 0071 06       		.byte	0x6
 2283 0072 0A       		.byte	0xa
 2284 0073 0037     		.2byte	0x3700
 2285 0075 1A       		.byte	0x1a
 2286 0076 72       		.byte	0x72
 2287 0077 00       		.sleb128 0
 2288 0078 03       		.byte	0x3
 2289 0079 14000000 		.4byte	.LANCHOR0+20
 2290 007d 22       		.byte	0x22
 2291 007e 94       		.byte	0x94
 2292 007f 01       		.byte	0x1
 2293 0080 08       		.byte	0x8
 2294 0081 FF       		.byte	0xff
 2295 0082 1A       		.byte	0x1a
 2296 0083 21       		.byte	0x21
 2297 0084 9F       		.byte	0x9f
 2298 0085 A6000000 		.4byte	.LVL12
 2299 0089 B2000000 		.4byte	.LVL13
 2300 008d 1A00     		.2byte	0x1a
 2301 008f 72       		.byte	0x72
 2302 0090 00       		.sleb128 0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 57


 2303 0091 32       		.byte	0x32
 2304 0092 24       		.byte	0x24
 2305 0093 71       		.byte	0x71
 2306 0094 00       		.sleb128 0
 2307 0095 22       		.byte	0x22
 2308 0096 06       		.byte	0x6
 2309 0097 0A       		.byte	0xa
 2310 0098 0037     		.2byte	0x3700
 2311 009a 1A       		.byte	0x1a
 2312 009b 71       		.byte	0x71
 2313 009c 00       		.sleb128 0
 2314 009d 72       		.byte	0x72
 2315 009e 00       		.sleb128 0
 2316 009f 22       		.byte	0x22
 2317 00a0 23       		.byte	0x23
 2318 00a1 14       		.uleb128 0x14
 2319 00a2 94       		.byte	0x94
 2320 00a3 01       		.byte	0x1
 2321 00a4 08       		.byte	0x8
 2322 00a5 FF       		.byte	0xff
 2323 00a6 1A       		.byte	0x1a
 2324 00a7 21       		.byte	0x21
 2325 00a8 9F       		.byte	0x9f
 2326 00a9 B2000000 		.4byte	.LVL13
 2327 00ad C0000000 		.4byte	.LVL14
 2328 00b1 1E00     		.2byte	0x1e
 2329 00b3 72       		.byte	0x72
 2330 00b4 00       		.sleb128 0
 2331 00b5 32       		.byte	0x32
 2332 00b6 24       		.byte	0x24
 2333 00b7 03       		.byte	0x3
 2334 00b8 00000000 		.4byte	.LANCHOR0
 2335 00bc 22       		.byte	0x22
 2336 00bd 06       		.byte	0x6
 2337 00be 0A       		.byte	0xa
 2338 00bf 0037     		.2byte	0x3700
 2339 00c1 1A       		.byte	0x1a
 2340 00c2 72       		.byte	0x72
 2341 00c3 00       		.sleb128 0
 2342 00c4 03       		.byte	0x3
 2343 00c5 14000000 		.4byte	.LANCHOR0+20
 2344 00c9 22       		.byte	0x22
 2345 00ca 94       		.byte	0x94
 2346 00cb 01       		.byte	0x1
 2347 00cc 08       		.byte	0x8
 2348 00cd FF       		.byte	0xff
 2349 00ce 1A       		.byte	0x1a
 2350 00cf 21       		.byte	0x21
 2351 00d0 9F       		.byte	0x9f
 2352 00d1 C0000000 		.4byte	.LVL14
 2353 00d5 C6000000 		.4byte	.LVL15
 2354 00d9 0100     		.2byte	0x1
 2355 00db 53       		.byte	0x53
 2356 00dc C6000000 		.4byte	.LVL15
 2357 00e0 CE000000 		.4byte	.LVL16
 2358 00e4 1500     		.2byte	0x15
 2359 00e6 70       		.byte	0x70
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 58


 2360 00e7 00       		.sleb128 0
 2361 00e8 0A       		.byte	0xa
 2362 00e9 0037     		.2byte	0x3700
 2363 00eb 1A       		.byte	0x1a
 2364 00ec 72       		.byte	0x72
 2365 00ed 00       		.sleb128 0
 2366 00ee 03       		.byte	0x3
 2367 00ef 14000000 		.4byte	.LANCHOR0+20
 2368 00f3 22       		.byte	0x22
 2369 00f4 94       		.byte	0x94
 2370 00f5 01       		.byte	0x1
 2371 00f6 08       		.byte	0x8
 2372 00f7 FF       		.byte	0xff
 2373 00f8 1A       		.byte	0x1a
 2374 00f9 21       		.byte	0x21
 2375 00fa 9F       		.byte	0x9f
 2376 00fb CE000000 		.4byte	.LVL16
 2377 00ff D6000000 		.4byte	.LVL17
 2378 0103 1400     		.2byte	0x14
 2379 0105 70       		.byte	0x70
 2380 0106 00       		.sleb128 0
 2381 0107 0A       		.byte	0xa
 2382 0108 0037     		.2byte	0x3700
 2383 010a 1A       		.byte	0x1a
 2384 010b 71       		.byte	0x71
 2385 010c 00       		.sleb128 0
 2386 010d 72       		.byte	0x72
 2387 010e 00       		.sleb128 0
 2388 010f 22       		.byte	0x22
 2389 0110 23       		.byte	0x23
 2390 0111 14       		.uleb128 0x14
 2391 0112 94       		.byte	0x94
 2392 0113 01       		.byte	0x1
 2393 0114 08       		.byte	0x8
 2394 0115 FF       		.byte	0xff
 2395 0116 1A       		.byte	0x1a
 2396 0117 21       		.byte	0x21
 2397 0118 9F       		.byte	0x9f
 2398 0119 D6000000 		.4byte	.LVL17
 2399 011d D8000000 		.4byte	.LVL18
 2400 0121 1500     		.2byte	0x15
 2401 0123 70       		.byte	0x70
 2402 0124 00       		.sleb128 0
 2403 0125 0A       		.byte	0xa
 2404 0126 0037     		.2byte	0x3700
 2405 0128 1A       		.byte	0x1a
 2406 0129 72       		.byte	0x72
 2407 012a 00       		.sleb128 0
 2408 012b 03       		.byte	0x3
 2409 012c 14000000 		.4byte	.LANCHOR0+20
 2410 0130 22       		.byte	0x22
 2411 0131 94       		.byte	0x94
 2412 0132 01       		.byte	0x1
 2413 0133 08       		.byte	0x8
 2414 0134 FF       		.byte	0xff
 2415 0135 1A       		.byte	0x1a
 2416 0136 21       		.byte	0x21
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 59


 2417 0137 9F       		.byte	0x9f
 2418 0138 D8000000 		.4byte	.LVL18
 2419 013c E2000000 		.4byte	.LVL19
 2420 0140 1E00     		.2byte	0x1e
 2421 0142 72       		.byte	0x72
 2422 0143 00       		.sleb128 0
 2423 0144 32       		.byte	0x32
 2424 0145 24       		.byte	0x24
 2425 0146 03       		.byte	0x3
 2426 0147 00000000 		.4byte	.LANCHOR0
 2427 014b 22       		.byte	0x22
 2428 014c 06       		.byte	0x6
 2429 014d 0A       		.byte	0xa
 2430 014e 0037     		.2byte	0x3700
 2431 0150 1A       		.byte	0x1a
 2432 0151 72       		.byte	0x72
 2433 0152 00       		.sleb128 0
 2434 0153 03       		.byte	0x3
 2435 0154 14000000 		.4byte	.LANCHOR0+20
 2436 0158 22       		.byte	0x22
 2437 0159 94       		.byte	0x94
 2438 015a 01       		.byte	0x1
 2439 015b 08       		.byte	0x8
 2440 015c FF       		.byte	0xff
 2441 015d 1A       		.byte	0x1a
 2442 015e 21       		.byte	0x21
 2443 015f 9F       		.byte	0x9f
 2444 0160 E2000000 		.4byte	.LVL19
 2445 0164 EA000000 		.4byte	.LVL20
 2446 0168 1A00     		.2byte	0x1a
 2447 016a 72       		.byte	0x72
 2448 016b 00       		.sleb128 0
 2449 016c 32       		.byte	0x32
 2450 016d 24       		.byte	0x24
 2451 016e 71       		.byte	0x71
 2452 016f 00       		.sleb128 0
 2453 0170 22       		.byte	0x22
 2454 0171 06       		.byte	0x6
 2455 0172 0A       		.byte	0xa
 2456 0173 0037     		.2byte	0x3700
 2457 0175 1A       		.byte	0x1a
 2458 0176 71       		.byte	0x71
 2459 0177 00       		.sleb128 0
 2460 0178 72       		.byte	0x72
 2461 0179 00       		.sleb128 0
 2462 017a 22       		.byte	0x22
 2463 017b 23       		.byte	0x23
 2464 017c 14       		.uleb128 0x14
 2465 017d 94       		.byte	0x94
 2466 017e 01       		.byte	0x1
 2467 017f 08       		.byte	0x8
 2468 0180 FF       		.byte	0xff
 2469 0181 1A       		.byte	0x1a
 2470 0182 21       		.byte	0x21
 2471 0183 9F       		.byte	0x9f
 2472 0184 EA000000 		.4byte	.LVL20
 2473 0188 F6000000 		.4byte	.LVL21
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 60


 2474 018c 1E00     		.2byte	0x1e
 2475 018e 72       		.byte	0x72
 2476 018f 00       		.sleb128 0
 2477 0190 32       		.byte	0x32
 2478 0191 24       		.byte	0x24
 2479 0192 03       		.byte	0x3
 2480 0193 00000000 		.4byte	.LANCHOR0
 2481 0197 22       		.byte	0x22
 2482 0198 06       		.byte	0x6
 2483 0199 0A       		.byte	0xa
 2484 019a 0037     		.2byte	0x3700
 2485 019c 1A       		.byte	0x1a
 2486 019d 72       		.byte	0x72
 2487 019e 00       		.sleb128 0
 2488 019f 03       		.byte	0x3
 2489 01a0 14000000 		.4byte	.LANCHOR0+20
 2490 01a4 22       		.byte	0x22
 2491 01a5 94       		.byte	0x94
 2492 01a6 01       		.byte	0x1
 2493 01a7 08       		.byte	0x8
 2494 01a8 FF       		.byte	0xff
 2495 01a9 1A       		.byte	0x1a
 2496 01aa 21       		.byte	0x21
 2497 01ab 9F       		.byte	0x9f
 2498 01ac F6000000 		.4byte	.LVL21
 2499 01b0 F8000000 		.4byte	.LVL22
 2500 01b4 1A00     		.2byte	0x1a
 2501 01b6 72       		.byte	0x72
 2502 01b7 00       		.sleb128 0
 2503 01b8 32       		.byte	0x32
 2504 01b9 24       		.byte	0x24
 2505 01ba 71       		.byte	0x71
 2506 01bb 00       		.sleb128 0
 2507 01bc 22       		.byte	0x22
 2508 01bd 06       		.byte	0x6
 2509 01be 0A       		.byte	0xa
 2510 01bf 0037     		.2byte	0x3700
 2511 01c1 1A       		.byte	0x1a
 2512 01c2 71       		.byte	0x71
 2513 01c3 00       		.sleb128 0
 2514 01c4 72       		.byte	0x72
 2515 01c5 00       		.sleb128 0
 2516 01c6 22       		.byte	0x22
 2517 01c7 23       		.byte	0x23
 2518 01c8 14       		.uleb128 0x14
 2519 01c9 94       		.byte	0x94
 2520 01ca 01       		.byte	0x1
 2521 01cb 08       		.byte	0x8
 2522 01cc FF       		.byte	0xff
 2523 01cd 1A       		.byte	0x1a
 2524 01ce 21       		.byte	0x21
 2525 01cf 9F       		.byte	0x9f
 2526 01d0 F8000000 		.4byte	.LVL22
 2527 01d4 3A010000 		.4byte	.LVL25
 2528 01d8 1E00     		.2byte	0x1e
 2529 01da 72       		.byte	0x72
 2530 01db 00       		.sleb128 0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 61


 2531 01dc 32       		.byte	0x32
 2532 01dd 24       		.byte	0x24
 2533 01de 03       		.byte	0x3
 2534 01df 00000000 		.4byte	.LANCHOR0
 2535 01e3 22       		.byte	0x22
 2536 01e4 06       		.byte	0x6
 2537 01e5 0A       		.byte	0xa
 2538 01e6 0037     		.2byte	0x3700
 2539 01e8 1A       		.byte	0x1a
 2540 01e9 72       		.byte	0x72
 2541 01ea 00       		.sleb128 0
 2542 01eb 03       		.byte	0x3
 2543 01ec 14000000 		.4byte	.LANCHOR0+20
 2544 01f0 22       		.byte	0x22
 2545 01f1 94       		.byte	0x94
 2546 01f2 01       		.byte	0x1
 2547 01f3 08       		.byte	0x8
 2548 01f4 FF       		.byte	0xff
 2549 01f5 1A       		.byte	0x1a
 2550 01f6 21       		.byte	0x21
 2551 01f7 9F       		.byte	0x9f
 2552 01f8 00000000 		.4byte	0
 2553 01fc 00000000 		.4byte	0
 2554              	.LLST2:
 2555 0200 06010000 		.4byte	.LVL23
 2556 0204 34010000 		.4byte	.LVL24
 2557 0208 0100     		.2byte	0x1
 2558 020a 50       		.byte	0x50
 2559 020b 00000000 		.4byte	0
 2560 020f 00000000 		.4byte	0
 2561              	.LLST3:
 2562 0213 00000000 		.4byte	.LVL29
 2563 0217 06000000 		.4byte	.LVL31
 2564 021b 0100     		.2byte	0x1
 2565 021d 50       		.byte	0x50
 2566 021e 06000000 		.4byte	.LVL31
 2567 0222 20000000 		.4byte	.LVL33
 2568 0226 0100     		.2byte	0x1
 2569 0228 51       		.byte	0x51
 2570 0229 20000000 		.4byte	.LVL33
 2571 022d 22000000 		.4byte	.LVL34
 2572 0231 0100     		.2byte	0x1
 2573 0233 50       		.byte	0x50
 2574 0234 22000000 		.4byte	.LVL34
 2575 0238 4C000000 		.4byte	.LFE8
 2576 023c 0100     		.2byte	0x1
 2577 023e 51       		.byte	0x51
 2578 023f 00000000 		.4byte	0
 2579 0243 00000000 		.4byte	0
 2580              	.LLST4:
 2581 0247 02000000 		.4byte	.LVL30
 2582 024b 06000000 		.4byte	.LVL31
 2583 024f 0200     		.2byte	0x2
 2584 0251 30       		.byte	0x30
 2585 0252 9F       		.byte	0x9f
 2586 0253 0E000000 		.4byte	.LVL32
 2587 0257 20000000 		.4byte	.LVL33
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 62


 2588 025b 0100     		.2byte	0x1
 2589 025d 50       		.byte	0x50
 2590 025e 20000000 		.4byte	.LVL33
 2591 0262 22000000 		.4byte	.LVL34
 2592 0266 0200     		.2byte	0x2
 2593 0268 30       		.byte	0x30
 2594 0269 9F       		.byte	0x9f
 2595 026a 22000000 		.4byte	.LVL34
 2596 026e 4C000000 		.4byte	.LFE8
 2597 0272 0100     		.2byte	0x1
 2598 0274 50       		.byte	0x50
 2599 0275 00000000 		.4byte	0
 2600 0279 00000000 		.4byte	0
 2601              	.LLST5:
 2602 027d 00000000 		.4byte	.LVL36
 2603 0281 0A000000 		.4byte	.LVL37
 2604 0285 0100     		.2byte	0x1
 2605 0287 50       		.byte	0x50
 2606 0288 0A000000 		.4byte	.LVL37
 2607 028c 14000000 		.4byte	.LVL39
 2608 0290 0100     		.2byte	0x1
 2609 0292 54       		.byte	0x54
 2610 0293 14000000 		.4byte	.LVL39
 2611 0297 22000000 		.4byte	.LVL41
 2612 029b 0400     		.2byte	0x4
 2613 029d F3       		.byte	0xf3
 2614 029e 01       		.uleb128 0x1
 2615 029f 50       		.byte	0x50
 2616 02a0 9F       		.byte	0x9f
 2617 02a1 22000000 		.4byte	.LVL41
 2618 02a5 2A000000 		.4byte	.LVL42
 2619 02a9 0100     		.2byte	0x1
 2620 02ab 54       		.byte	0x54
 2621 02ac 2A000000 		.4byte	.LVL42
 2622 02b0 38000000 		.4byte	.LFE9
 2623 02b4 0400     		.2byte	0x4
 2624 02b6 F3       		.byte	0xf3
 2625 02b7 01       		.uleb128 0x1
 2626 02b8 50       		.byte	0x50
 2627 02b9 9F       		.byte	0x9f
 2628 02ba 00000000 		.4byte	0
 2629 02be 00000000 		.4byte	0
 2630              	.LLST6:
 2631 02c2 20000000 		.4byte	.LVL40
 2632 02c6 22000000 		.4byte	.LVL41
 2633 02ca 0100     		.2byte	0x1
 2634 02cc 50       		.byte	0x50
 2635 02cd 2A000000 		.4byte	.LVL42
 2636 02d1 2C000000 		.4byte	.LVL43
 2637 02d5 0100     		.2byte	0x1
 2638 02d7 50       		.byte	0x50
 2639 02d8 00000000 		.4byte	0
 2640 02dc 00000000 		.4byte	0
 2641              	.LLST7:
 2642 02e0 00000000 		.4byte	.LVL44
 2643 02e4 04000000 		.4byte	.LVL45
 2644 02e8 0100     		.2byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 63


 2645 02ea 50       		.byte	0x50
 2646 02eb 04000000 		.4byte	.LVL45
 2647 02ef 10000000 		.4byte	.LFE10
 2648 02f3 0400     		.2byte	0x4
 2649 02f5 F3       		.byte	0xf3
 2650 02f6 01       		.uleb128 0x1
 2651 02f7 50       		.byte	0x50
 2652 02f8 9F       		.byte	0x9f
 2653 02f9 00000000 		.4byte	0
 2654 02fd 00000000 		.4byte	0
 2655              	.LLST8:
 2656 0301 00000000 		.4byte	.LVL46
 2657 0305 0E000000 		.4byte	.LVL47
 2658 0309 0100     		.2byte	0x1
 2659 030b 50       		.byte	0x50
 2660 030c 0E000000 		.4byte	.LVL47
 2661 0310 1C000000 		.4byte	.LFE12
 2662 0314 0400     		.2byte	0x4
 2663 0316 F3       		.byte	0xf3
 2664 0317 01       		.uleb128 0x1
 2665 0318 50       		.byte	0x50
 2666 0319 9F       		.byte	0x9f
 2667 031a 00000000 		.4byte	0
 2668 031e 00000000 		.4byte	0
 2669              	.LLST9:
 2670 0322 00000000 		.4byte	.LVL48
 2671 0326 0E000000 		.4byte	.LVL49
 2672 032a 0100     		.2byte	0x1
 2673 032c 50       		.byte	0x50
 2674 032d 0E000000 		.4byte	.LVL49
 2675 0331 18000000 		.4byte	.LFE13
 2676 0335 0400     		.2byte	0x4
 2677 0337 F3       		.byte	0xf3
 2678 0338 01       		.uleb128 0x1
 2679 0339 50       		.byte	0x50
 2680 033a 9F       		.byte	0x9f
 2681 033b 00000000 		.4byte	0
 2682 033f 00000000 		.4byte	0
 2683              	.LLST10:
 2684 0343 00000000 		.4byte	.LVL50
 2685 0347 04000000 		.4byte	.LVL51
 2686 034b 0100     		.2byte	0x1
 2687 034d 50       		.byte	0x50
 2688 034e 04000000 		.4byte	.LVL51
 2689 0352 10000000 		.4byte	.LFE14
 2690 0356 0400     		.2byte	0x4
 2691 0358 F3       		.byte	0xf3
 2692 0359 01       		.uleb128 0x1
 2693 035a 50       		.byte	0x50
 2694 035b 9F       		.byte	0x9f
 2695 035c 00000000 		.4byte	0
 2696 0360 00000000 		.4byte	0
 2697              	.LLST11:
 2698 0364 00000000 		.4byte	.LVL52
 2699 0368 04000000 		.4byte	.LVL53
 2700 036c 0100     		.2byte	0x1
 2701 036e 50       		.byte	0x50
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 64


 2702 036f 04000000 		.4byte	.LVL53
 2703 0373 10000000 		.4byte	.LFE15
 2704 0377 0400     		.2byte	0x4
 2705 0379 F3       		.byte	0xf3
 2706 037a 01       		.uleb128 0x1
 2707 037b 50       		.byte	0x50
 2708 037c 9F       		.byte	0x9f
 2709 037d 00000000 		.4byte	0
 2710 0381 00000000 		.4byte	0
 2711              	.LLST12:
 2712 0385 00000000 		.4byte	.LVL54
 2713 0389 0C000000 		.4byte	.LVL55
 2714 038d 0100     		.2byte	0x1
 2715 038f 50       		.byte	0x50
 2716 0390 0C000000 		.4byte	.LVL55
 2717 0394 12000000 		.4byte	.LVL57
 2718 0398 0100     		.2byte	0x1
 2719 039a 54       		.byte	0x54
 2720 039b 12000000 		.4byte	.LVL57
 2721 039f 1C000000 		.4byte	.LFE16
 2722 03a3 0400     		.2byte	0x4
 2723 03a5 F3       		.byte	0xf3
 2724 03a6 01       		.uleb128 0x1
 2725 03a7 50       		.byte	0x50
 2726 03a8 9F       		.byte	0x9f
 2727 03a9 00000000 		.4byte	0
 2728 03ad 00000000 		.4byte	0
 2729              	.LLST13:
 2730 03b1 00000000 		.4byte	.LVL54
 2731 03b5 0F000000 		.4byte	.LVL56-1
 2732 03b9 0100     		.2byte	0x1
 2733 03bb 51       		.byte	0x51
 2734 03bc 0F000000 		.4byte	.LVL56-1
 2735 03c0 1C000000 		.4byte	.LFE16
 2736 03c4 0400     		.2byte	0x4
 2737 03c6 F3       		.byte	0xf3
 2738 03c7 01       		.uleb128 0x1
 2739 03c8 51       		.byte	0x51
 2740 03c9 9F       		.byte	0x9f
 2741 03ca 00000000 		.4byte	0
 2742 03ce 00000000 		.4byte	0
 2743              	.LLST14:
 2744 03d2 00000000 		.4byte	.LVL58
 2745 03d6 0C000000 		.4byte	.LVL59
 2746 03da 0100     		.2byte	0x1
 2747 03dc 50       		.byte	0x50
 2748 03dd 0C000000 		.4byte	.LVL59
 2749 03e1 12000000 		.4byte	.LVL61
 2750 03e5 0100     		.2byte	0x1
 2751 03e7 54       		.byte	0x54
 2752 03e8 12000000 		.4byte	.LVL61
 2753 03ec 1C000000 		.4byte	.LFE17
 2754 03f0 0400     		.2byte	0x4
 2755 03f2 F3       		.byte	0xf3
 2756 03f3 01       		.uleb128 0x1
 2757 03f4 50       		.byte	0x50
 2758 03f5 9F       		.byte	0x9f
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 65


 2759 03f6 00000000 		.4byte	0
 2760 03fa 00000000 		.4byte	0
 2761              	.LLST15:
 2762 03fe 00000000 		.4byte	.LVL58
 2763 0402 0F000000 		.4byte	.LVL60-1
 2764 0406 0100     		.2byte	0x1
 2765 0408 51       		.byte	0x51
 2766 0409 0F000000 		.4byte	.LVL60-1
 2767 040d 16000000 		.4byte	.LVL62
 2768 0411 0100     		.2byte	0x1
 2769 0413 55       		.byte	0x55
 2770 0414 16000000 		.4byte	.LVL62
 2771 0418 1C000000 		.4byte	.LFE17
 2772 041c 0800     		.2byte	0x8
 2773 041e F3       		.byte	0xf3
 2774 041f 01       		.uleb128 0x1
 2775 0420 50       		.byte	0x50
 2776 0421 32       		.byte	0x32
 2777 0422 24       		.byte	0x24
 2778 0423 73       		.byte	0x73
 2779 0424 00       		.sleb128 0
 2780 0425 22       		.byte	0x22
 2781 0426 00000000 		.4byte	0
 2782 042a 00000000 		.4byte	0
 2783              	.LLST16:
 2784 042e 00000000 		.4byte	.LVL63
 2785 0432 0C000000 		.4byte	.LVL64
 2786 0436 0100     		.2byte	0x1
 2787 0438 50       		.byte	0x50
 2788 0439 0C000000 		.4byte	.LVL64
 2789 043d 44000000 		.4byte	.LVL70
 2790 0441 0100     		.2byte	0x1
 2791 0443 54       		.byte	0x54
 2792 0444 44000000 		.4byte	.LVL70
 2793 0448 5C000000 		.4byte	.LFE18
 2794 044c 0400     		.2byte	0x4
 2795 044e F3       		.byte	0xf3
 2796 044f 01       		.uleb128 0x1
 2797 0450 50       		.byte	0x50
 2798 0451 9F       		.byte	0x9f
 2799 0452 00000000 		.4byte	0
 2800 0456 00000000 		.4byte	0
 2801              	.LLST17:
 2802 045a 00000000 		.4byte	.LVL63
 2803 045e 0F000000 		.4byte	.LVL65-1
 2804 0462 0100     		.2byte	0x1
 2805 0464 51       		.byte	0x51
 2806 0465 0F000000 		.4byte	.LVL65-1
 2807 0469 1A000000 		.4byte	.LVL66
 2808 046d 0400     		.2byte	0x4
 2809 046f F3       		.byte	0xf3
 2810 0470 01       		.uleb128 0x1
 2811 0471 51       		.byte	0x51
 2812 0472 9F       		.byte	0x9f
 2813 0473 1A000000 		.4byte	.LVL66
 2814 0477 28000000 		.4byte	.LVL67
 2815 047b 0100     		.2byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 66


 2816 047d 51       		.byte	0x51
 2817 047e 32000000 		.4byte	.LVL68
 2818 0482 36000000 		.4byte	.LVL69
 2819 0486 0100     		.2byte	0x1
 2820 0488 51       		.byte	0x51
 2821 0489 00000000 		.4byte	0
 2822 048d 00000000 		.4byte	0
 2823              	.LLST18:
 2824 0491 00000000 		.4byte	.LVL72
 2825 0495 0C000000 		.4byte	.LVL73
 2826 0499 0100     		.2byte	0x1
 2827 049b 50       		.byte	0x50
 2828 049c 0C000000 		.4byte	.LVL73
 2829 04a0 26000000 		.4byte	.LVL77
 2830 04a4 0100     		.2byte	0x1
 2831 04a6 55       		.byte	0x55
 2832 04a7 26000000 		.4byte	.LVL77
 2833 04ab 40000000 		.4byte	.LFE19
 2834 04af 0400     		.2byte	0x4
 2835 04b1 F3       		.byte	0xf3
 2836 04b2 01       		.uleb128 0x1
 2837 04b3 50       		.byte	0x50
 2838 04b4 9F       		.byte	0x9f
 2839 04b5 00000000 		.4byte	0
 2840 04b9 00000000 		.4byte	0
 2841              	.LLST19:
 2842 04bd 00000000 		.4byte	.LVL72
 2843 04c1 0F000000 		.4byte	.LVL74-1
 2844 04c5 0100     		.2byte	0x1
 2845 04c7 51       		.byte	0x51
 2846 04c8 0F000000 		.4byte	.LVL74-1
 2847 04cc 1A000000 		.4byte	.LVL75
 2848 04d0 0400     		.2byte	0x4
 2849 04d2 F3       		.byte	0xf3
 2850 04d3 01       		.uleb128 0x1
 2851 04d4 51       		.byte	0x51
 2852 04d5 9F       		.byte	0x9f
 2853 04d6 1A000000 		.4byte	.LVL75
 2854 04da 23000000 		.4byte	.LVL76-1
 2855 04de 0100     		.2byte	0x1
 2856 04e0 50       		.byte	0x50
 2857 04e1 00000000 		.4byte	0
 2858 04e5 00000000 		.4byte	0
 2859              	.LLST20:
 2860 04e9 00000000 		.4byte	.LVL79
 2861 04ed 0C000000 		.4byte	.LVL80
 2862 04f1 0100     		.2byte	0x1
 2863 04f3 50       		.byte	0x50
 2864 04f4 0C000000 		.4byte	.LVL80
 2865 04f8 28000000 		.4byte	.LVL85
 2866 04fc 0100     		.2byte	0x1
 2867 04fe 54       		.byte	0x54
 2868 04ff 28000000 		.4byte	.LVL85
 2869 0503 48000000 		.4byte	.LFE20
 2870 0507 0400     		.2byte	0x4
 2871 0509 F3       		.byte	0xf3
 2872 050a 01       		.uleb128 0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 67


 2873 050b 50       		.byte	0x50
 2874 050c 9F       		.byte	0x9f
 2875 050d 00000000 		.4byte	0
 2876 0511 00000000 		.4byte	0
 2877              	.LLST21:
 2878 0515 00000000 		.4byte	.LVL79
 2879 0519 0F000000 		.4byte	.LVL81-1
 2880 051d 0100     		.2byte	0x1
 2881 051f 51       		.byte	0x51
 2882 0520 0F000000 		.4byte	.LVL81-1
 2883 0524 1A000000 		.4byte	.LVL82
 2884 0528 0400     		.2byte	0x4
 2885 052a F3       		.byte	0xf3
 2886 052b 01       		.uleb128 0x1
 2887 052c 51       		.byte	0x51
 2888 052d 9F       		.byte	0x9f
 2889 052e 1A000000 		.4byte	.LVL82
 2890 0532 1D000000 		.4byte	.LVL83-1
 2891 0536 0100     		.2byte	0x1
 2892 0538 50       		.byte	0x50
 2893 0539 00000000 		.4byte	0
 2894 053d 00000000 		.4byte	0
 2895              		.section	.debug_aranges,"",%progbits
 2896 0000 AC000000 		.4byte	0xac
 2897 0004 0200     		.2byte	0x2
 2898 0006 00000000 		.4byte	.Ldebug_info0
 2899 000a 04       		.byte	0x4
 2900 000b 00       		.byte	0
 2901 000c 0000     		.2byte	0
 2902 000e 0000     		.2byte	0
 2903 0010 00000000 		.4byte	.LFB3
 2904 0014 A8010000 		.4byte	.LFE3-.LFB3
 2905 0018 00000000 		.4byte	.LFB4
 2906 001c 30000000 		.4byte	.LFE4-.LFB4
 2907 0020 00000000 		.4byte	.LFB2
 2908 0024 20000000 		.4byte	.LFE2-.LFB2
 2909 0028 00000000 		.4byte	.LFB5
 2910 002c 10000000 		.4byte	.LFE5-.LFB5
 2911 0030 00000000 		.4byte	.LFB6
 2912 0034 14000000 		.4byte	.LFE6-.LFB6
 2913 0038 00000000 		.4byte	.LFB7
 2914 003c 14000000 		.4byte	.LFE7-.LFB7
 2915 0040 00000000 		.4byte	.LFB8
 2916 0044 4C000000 		.4byte	.LFE8-.LFB8
 2917 0048 00000000 		.4byte	.LFB9
 2918 004c 38000000 		.4byte	.LFE9-.LFB9
 2919 0050 00000000 		.4byte	.LFB10
 2920 0054 10000000 		.4byte	.LFE10-.LFB10
 2921 0058 00000000 		.4byte	.LFB11
 2922 005c 14000000 		.4byte	.LFE11-.LFB11
 2923 0060 00000000 		.4byte	.LFB12
 2924 0064 1C000000 		.4byte	.LFE12-.LFB12
 2925 0068 00000000 		.4byte	.LFB13
 2926 006c 18000000 		.4byte	.LFE13-.LFB13
 2927 0070 00000000 		.4byte	.LFB14
 2928 0074 10000000 		.4byte	.LFE14-.LFB14
 2929 0078 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 68


 2930 007c 10000000 		.4byte	.LFE15-.LFB15
 2931 0080 00000000 		.4byte	.LFB16
 2932 0084 1C000000 		.4byte	.LFE16-.LFB16
 2933 0088 00000000 		.4byte	.LFB17
 2934 008c 1C000000 		.4byte	.LFE17-.LFB17
 2935 0090 00000000 		.4byte	.LFB18
 2936 0094 5C000000 		.4byte	.LFE18-.LFB18
 2937 0098 00000000 		.4byte	.LFB19
 2938 009c 40000000 		.4byte	.LFE19-.LFB19
 2939 00a0 00000000 		.4byte	.LFB20
 2940 00a4 48000000 		.4byte	.LFE20-.LFB20
 2941 00a8 00000000 		.4byte	0
 2942 00ac 00000000 		.4byte	0
 2943              		.section	.debug_ranges,"",%progbits
 2944              	.Ldebug_ranges0:
 2945 0000 00000000 		.4byte	.LFB3
 2946 0004 A8010000 		.4byte	.LFE3
 2947 0008 00000000 		.4byte	.LFB4
 2948 000c 30000000 		.4byte	.LFE4
 2949 0010 00000000 		.4byte	.LFB2
 2950 0014 20000000 		.4byte	.LFE2
 2951 0018 00000000 		.4byte	.LFB5
 2952 001c 10000000 		.4byte	.LFE5
 2953 0020 00000000 		.4byte	.LFB6
 2954 0024 14000000 		.4byte	.LFE6
 2955 0028 00000000 		.4byte	.LFB7
 2956 002c 14000000 		.4byte	.LFE7
 2957 0030 00000000 		.4byte	.LFB8
 2958 0034 4C000000 		.4byte	.LFE8
 2959 0038 00000000 		.4byte	.LFB9
 2960 003c 38000000 		.4byte	.LFE9
 2961 0040 00000000 		.4byte	.LFB10
 2962 0044 10000000 		.4byte	.LFE10
 2963 0048 00000000 		.4byte	.LFB11
 2964 004c 14000000 		.4byte	.LFE11
 2965 0050 00000000 		.4byte	.LFB12
 2966 0054 1C000000 		.4byte	.LFE12
 2967 0058 00000000 		.4byte	.LFB13
 2968 005c 18000000 		.4byte	.LFE13
 2969 0060 00000000 		.4byte	.LFB14
 2970 0064 10000000 		.4byte	.LFE14
 2971 0068 00000000 		.4byte	.LFB15
 2972 006c 10000000 		.4byte	.LFE15
 2973 0070 00000000 		.4byte	.LFB16
 2974 0074 1C000000 		.4byte	.LFE16
 2975 0078 00000000 		.4byte	.LFB17
 2976 007c 1C000000 		.4byte	.LFE17
 2977 0080 00000000 		.4byte	.LFB18
 2978 0084 5C000000 		.4byte	.LFE18
 2979 0088 00000000 		.4byte	.LFB19
 2980 008c 40000000 		.4byte	.LFE19
 2981 0090 00000000 		.4byte	.LFB20
 2982 0094 48000000 		.4byte	.LFE20
 2983 0098 00000000 		.4byte	0
 2984 009c 00000000 		.4byte	0
 2985              		.section	.debug_line,"",%progbits
 2986              	.Ldebug_line0:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 69


 2987 0000 AE020000 		.section	.debug_str,"MS",%progbits,1
 2987      02004D00 
 2987      00000201 
 2987      FB0E0D00 
 2987      01010101 
 2988              	.LASF10:
 2989 0000 75696E74 		.ascii	"uint16\000"
 2989      313600
 2990              	.LASF50:
 2991 0007 61646347 		.ascii	"adcGain\000"
 2991      61696E00 
 2992              	.LASF24:
 2993 000f 636F756E 		.ascii	"counts\000"
 2993      747300
 2994              	.LASF55:
 2995 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2995      436F756E 
 2995      7473546F 
 2995      5F566F6C 
 2995      747300
 2996              	.LASF26:
 2997 0029 4144435F 		.ascii	"ADC_Init\000"
 2997      496E6974 
 2997      00
 2998              	.LASF7:
 2999 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2999      206C6F6E 
 2999      6720756E 
 2999      7369676E 
 2999      65642069 
 3000              	.LASF25:
 3001 0049 4144435F 		.ascii	"ADC_InputsPlacement\000"
 3001      496E7075 
 3001      7473506C 
 3001      6163656D 
 3001      656E7400 
 3002              	.LASF30:
 3003 005d 4144435F 		.ascii	"ADC_StartConvert\000"
 3003      53746172 
 3003      74436F6E 
 3003      76657274 
 3003      00
 3004              	.LASF6:
 3005 006e 6C6F6E67 		.ascii	"long long int\000"
 3005      206C6F6E 
 3005      6720696E 
 3005      7400
 3006              	.LASF0:
 3007 007c 7369676E 		.ascii	"signed char\000"
 3007      65642063 
 3007      68617200 
 3008              	.LASF32:
 3009 0088 73746174 		.ascii	"status\000"
 3009      757300
 3010              	.LASF13:
 3011 008f 696E7433 		.ascii	"int32\000"
 3011      3200
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 70


 3012              	.LASF28:
 3013 0095 4144435F 		.ascii	"ADC_Start\000"
 3013      53746172 
 3013      7400
 3014              	.LASF4:
 3015 009f 6C6F6E67 		.ascii	"long int\000"
 3015      20696E74 
 3015      00
 3016              	.LASF54:
 3017 00a8 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 3017      436F756E 
 3017      7473546F 
 3017      5F75566F 
 3017      6C747300 
 3018              	.LASF60:
 3019 00bc 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 3019      636F756E 
 3019      74735065 
 3019      72313056 
 3019      6F6C7400 
 3020              	.LASF9:
 3021 00d0 75696E74 		.ascii	"uint8\000"
 3021      3800
 3022              	.LASF62:
 3023 00d6 43794465 		.ascii	"CyDelayUs\000"
 3023      6C617955 
 3023      7300
 3024              	.LASF16:
 3025 00e0 646F7562 		.ascii	"double\000"
 3025      6C6500
 3026              	.LASF11:
 3027 00e7 75696E74 		.ascii	"uint32\000"
 3027      333200
 3028              	.LASF39:
 3029 00ee 6D61736B 		.ascii	"mask\000"
 3029      00
 3030              	.LASF58:
 3031 00f3 4144435F 		.ascii	"ADC_initVar\000"
 3031      696E6974 
 3031      56617200 
 3032              	.LASF35:
 3033 00ff 7265744D 		.ascii	"retMode\000"
 3033      6F646500 
 3034              	.LASF45:
 3035 0107 4144435F 		.ascii	"ADC_SetLimitMask\000"
 3035      5365744C 
 3035      696D6974 
 3035      4D61736B 
 3035      00
 3036              	.LASF8:
 3037 0118 756E7369 		.ascii	"unsigned int\000"
 3037      676E6564 
 3037      20696E74 
 3037      00
 3038              	.LASF66:
 3039 0125 75566F6C 		.ascii	"uVolts\000"
 3039      747300
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 71


 3040              	.LASF5:
 3041 012c 6C6F6E67 		.ascii	"long unsigned int\000"
 3041      20756E73 
 3041      69676E65 
 3041      6420696E 
 3041      7400
 3042              	.LASF46:
 3043 013e 4144435F 		.ascii	"ADC_SetSatMask\000"
 3043      53657453 
 3043      61744D61 
 3043      736B00
 3044              	.LASF56:
 3045 014d 766F6C74 		.ascii	"volts\000"
 3045      7300
 3046              	.LASF23:
 3047 0153 746D7052 		.ascii	"tmpRegVal\000"
 3047      65675661 
 3047      6C00
 3048              	.LASF3:
 3049 015d 73686F72 		.ascii	"short unsigned int\000"
 3049      7420756E 
 3049      7369676E 
 3049      65642069 
 3049      6E7400
 3050              	.LASF67:
 3051 0170 4379496E 		.ascii	"CyIntSetVector\000"
 3051      74536574 
 3051      56656374 
 3051      6F7200
 3052              	.LASF31:
 3053 017f 4144435F 		.ascii	"ADC_StopConvert\000"
 3053      53746F70 
 3053      436F6E76 
 3053      65727400 
 3054              	.LASF53:
 3055 018f 6D566F6C 		.ascii	"mVolts\000"
 3055      747300
 3056              	.LASF19:
 3057 0196 72656733 		.ascii	"reg32\000"
 3057      3200
 3058              	.LASF14:
 3059 019c 666C6F61 		.ascii	"float32\000"
 3059      74333200 
 3060              	.LASF21:
 3061 01a4 73697A65 		.ascii	"sizetype\000"
 3061      74797065 
 3061      00
 3062              	.LASF42:
 3063 01ad 6C6F774C 		.ascii	"lowLimit\000"
 3063      696D6974 
 3063      00
 3064              	.LASF43:
 3065 01b6 4144435F 		.ascii	"ADC_SetHighLimit\000"
 3065      53657448 
 3065      6967684C 
 3065      696D6974 
 3065      00
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 72


 3066              	.LASF40:
 3067 01c7 4144435F 		.ascii	"ADC_EnableInjection\000"
 3067      456E6162 
 3067      6C65496E 
 3067      6A656374 
 3067      696F6E00 
 3068              	.LASF33:
 3069 01db 4144435F 		.ascii	"ADC_IsEndConversion\000"
 3069      4973456E 
 3069      64436F6E 
 3069      76657273 
 3069      696F6E00 
 3070              	.LASF63:
 3071 01ef 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3071      4320342E 
 3071      392E3320 
 3071      32303135 
 3071      30333033 
 3072 0222 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3072      20726576 
 3072      6973696F 
 3072      6E203232 
 3072      31323230 
 3073 0255 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3073      66756E63 
 3073      74696F6E 
 3073      2D736563 
 3073      74696F6E 
 3074              	.LASF17:
 3075 027d 696E7436 		.ascii	"int64\000"
 3075      3400
 3076              	.LASF61:
 3077 0283 4379496E 		.ascii	"CyIntSetPriority\000"
 3077      74536574 
 3077      5072696F 
 3077      72697479 
 3077      00
 3078              	.LASF38:
 3079 0294 4144435F 		.ascii	"ADC_SetChanMask\000"
 3079      53657443 
 3079      68616E4D 
 3079      61736B00 
 3080              	.LASF49:
 3081 02a4 4144435F 		.ascii	"ADC_SetGain\000"
 3081      53657447 
 3081      61696E00 
 3082              	.LASF15:
 3083 02b0 666C6F61 		.ascii	"float\000"
 3083      7400
 3084              	.LASF44:
 3085 02b6 68696768 		.ascii	"highLimit\000"
 3085      4C696D69 
 3085      7400
 3086              	.LASF51:
 3087 02c0 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 3087      436F756E 
 3087      7473546F 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 73


 3087      5F6D566F 
 3087      6C747300 
 3088              	.LASF41:
 3089 02d4 4144435F 		.ascii	"ADC_SetLowLimit\000"
 3089      5365744C 
 3089      6F774C69 
 3089      6D697400 
 3090              	.LASF68:
 3091 02e4 43794861 		.ascii	"CyHalt\000"
 3091      6C7400
 3092              	.LASF64:
 3093 02eb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 3093      6E657261 
 3093      7465645F 
 3093      536F7572 
 3093      63655C50 
 3094              	.LASF1:
 3095 030a 756E7369 		.ascii	"unsigned char\000"
 3095      676E6564 
 3095      20636861 
 3095      7200
 3096              	.LASF59:
 3097 0318 4144435F 		.ascii	"ADC_offset\000"
 3097      6F666673 
 3097      657400
 3098              	.LASF2:
 3099 0323 73686F72 		.ascii	"short int\000"
 3099      7420696E 
 3099      7400
 3100              	.LASF29:
 3101 032d 4144435F 		.ascii	"ADC_Stop\000"
 3101      53746F70 
 3101      00
 3102              	.LASF22:
 3103 0336 63684E75 		.ascii	"chNum\000"
 3103      6D00
 3104              	.LASF36:
 3105 033c 6368616E 		.ascii	"chan\000"
 3105      00
 3106              	.LASF18:
 3107 0341 63686172 		.ascii	"char\000"
 3107      00
 3108              	.LASF20:
 3109 0346 63796973 		.ascii	"cyisraddress\000"
 3109      72616464 
 3109      72657373 
 3109      00
 3110              	.LASF57:
 3111 0353 4144435F 		.ascii	"ADC_channelsConfig\000"
 3111      6368616E 
 3111      6E656C73 
 3111      436F6E66 
 3111      696700
 3112              	.LASF48:
 3113 0366 6F666673 		.ascii	"offset\000"
 3113      657400
 3114              	.LASF52:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccxZTlOE.s 			page 74


 3115 036d 61646343 		.ascii	"adcCounts\000"
 3115      6F756E74 
 3115      7300
 3116              	.LASF27:
 3117 0377 4144435F 		.ascii	"ADC_Enable\000"
 3117      456E6162 
 3117      6C6500
 3118              	.LASF12:
 3119 0382 696E7431 		.ascii	"int16\000"
 3119      3600
 3120              	.LASF47:
 3121 0388 4144435F 		.ascii	"ADC_SetOffset\000"
 3121      5365744F 
 3121      66667365 
 3121      7400
 3122              	.LASF65:
 3123 0396 433A5C55 		.ascii	"C:\\Users\\mlgjmoor\\Documents\\PSoC Creator\\Nodus"
 3123      73657273 
 3123      5C6D6C67 
 3123      6A6D6F6F 
 3123      725C446F 
 3124 03c4 435C6E6F 		.ascii	"C\\nodusC.cydsn\000"
 3124      64757343 
 3124      2E637964 
 3124      736E00
 3125              	.LASF37:
 3126 03d3 72657375 		.ascii	"result\000"
 3126      6C7400
 3127              	.LASF34:
 3128 03da 4144435F 		.ascii	"ADC_GetResult16\000"
 3128      47657452 
 3128      6573756C 
 3128      74313600 
 3129              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
