ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_idiv
  18              		.section	.text.ADC_Init,"ax",%progbits
  19              		.align	2
  20              		.global	ADC_Init
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_Init, %function
  24              	ADC_Init:
  25              	.LFB3:
  26              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 2


  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u, 0x00000500u, 0x00001400u, 0x000014
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 3


  89:.\Generated_Source\PSoC4/ADC.c **** *
  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  27              		.loc 1 95 0
  28              		.cfi_startproc
  29 0000 10B5     		push	{r4, lr}
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 4


 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  33              		.loc 1 172 0
  34 0002 0F20     		mov	r0, #15
  35 0004 0321     		mov	r1, #3
  36 0006 FFF7FEFF 		bl	CyIntSetPriority
  37              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  38              		.loc 1 173 0
  39 000a 0F20     		mov	r0, #15
  40 000c 4C49     		ldr	r1, .L14
  41 000e FFF7FEFF 		bl	CyIntSetVector
  42              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  43              		.loc 1 177 0
  44 0012 0F22     		mov	r2, #15
  45 0014 4B4B     		ldr	r3, .L14+4
  46 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  47              		.loc 1 180 0
  48 0018 4B4B     		ldr	r3, .L14+8
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 5


  49 001a 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  50              		.loc 1 178 0
  51 001c 002B     		cmp	r3, #0
  52 001e 01DA     		bge	.L12
  53 0020 4A49     		ldr	r1, .L14+12
  54 0022 00E0     		b	.L2
  55              	.L12:
  56 0024 4A49     		ldr	r1, .L14+16
  57              	.L2:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  58              		.loc 1 178 0 is_stmt 0 discriminator 4
  59 0026 4B4A     		ldr	r2, .L14+20
  60 0028 1368     		ldr	r3, [r2]
  61 002a 0B43     		orr	r3, r1
  62 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  63              		.loc 1 182 0 is_stmt 1 discriminator 4
  64 002e 4A4A     		ldr	r2, .L14+24
  65 0030 4A4B     		ldr	r3, .L14+28
  66 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  67              		.loc 1 183 0 discriminator 4
  68 0034 4A4A     		ldr	r2, .L14+32
  69 0036 4B4B     		ldr	r3, .L14+36
  70 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  71              		.loc 1 184 0 discriminator 4
  72 003a 0023     		mov	r3, #0
  73 003c 4A4A     		ldr	r2, .L14+40
  74 003e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  75              		.loc 1 185 0 discriminator 4
  76 0040 4A49     		ldr	r1, .L14+44
  77 0042 4B4A     		ldr	r2, .L14+48
  78 0044 1160     		str	r1, [r2]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  79              		.loc 1 186 0 discriminator 4
  80 0046 4B49     		ldr	r1, .L14+52
  81 0048 4B4A     		ldr	r2, .L14+56
  82 004a 1160     		str	r1, [r2]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  83              		.loc 1 197 0 discriminator 4
  84 004c 4B4A     		ldr	r2, .L14+60
  85 004e 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 6


  86              		.loc 1 198 0 discriminator 4
  87 0050 4B4A     		ldr	r2, .L14+64
  88 0052 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  89              		.loc 1 199 0 discriminator 4
  90 0054 1122     		mov	r2, #17
  91 0056 4B4B     		ldr	r3, .L14+68
  92 0058 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
  93              		.loc 1 206 0 discriminator 4
  94 005a 4B4A     		ldr	r2, .L14+72
  95 005c 1168     		ldr	r1, [r2]
  96              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
  97              		.loc 1 221 0 discriminator 4
  98 005e 4B4B     		ldr	r3, .L14+76
  99 0060 0B40     		and	r3, r1
 100 0062 8021     		mov	r1, #128
 101              	.LVL3:
 102 0064 8905     		lsl	r1, r1, #22
 103 0066 0B43     		orr	r3, r1
 104              	.LVL4:
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 105              		.loc 1 226 0 discriminator 4
 106 0068 1360     		str	r3, [r2]
 107              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 108              		.loc 1 232 0 discriminator 4
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 7


 109 006a 0024     		mov	r4, #0
 110 006c 64E0     		b	.L3
 111              	.LVL6:
 112              	.L11:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 113              		.loc 1 234 0
 114 006e 484A     		ldr	r2, .L14+80
 115 0070 A300     		lsl	r3, r4, #2
 116 0072 9958     		ldr	r1, [r3, r2]
 117 0074 DC23     		mov	r3, #220
 118 0076 9B01     		lsl	r3, r3, #6
 119 0078 0B40     		and	r3, r1
 120              	.LVL7:
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 121              		.loc 1 236 0
 122 007a 1219     		add	r2, r2, r4
 123 007c 127D     		ldrb	r2, [r2, #20]
 124 007e 1343     		orr	r3, r2
 125              	.LVL8:
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 126              		.loc 1 250 0
 127 0080 032C     		cmp	r4, #3
 128 0082 1ED8     		bhi	.L4
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 129              		.loc 1 253 0
 130 0084 A200     		lsl	r2, r4, #2
 131 0086 4348     		ldr	r0, .L14+84
 132 0088 8446     		mov	ip, r0
 133 008a 6244     		add	r2, r2, ip
 134 008c 1360     		str	r3, [r2]
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 135              		.loc 1 255 0
 136 008e CB07     		lsl	r3, r1, #31
 137 0090 08D5     		bpl	.L5
 138              	.LVL9:
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 139              		.loc 1 257 0
 140 0092 3A49     		ldr	r1, .L14+60
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 8


 141 0094 0868     		ldr	r0, [r1]
 142 0096 8022     		mov	r2, #128
 143              	.LVL10:
 144 0098 5202     		lsl	r2, r2, #9
 145 009a 131C     		mov	r3, r2
 146 009c A340     		lsl	r3, r3, r4
 147 009e 1B0C     		lsr	r3, r3, #16
 148 00a0 0343     		orr	r3, r0
 149 00a2 0B60     		str	r3, [r1]
 150              	.LVL11:
 151              	.L5:
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 152              		.loc 1 260 0
 153 00a4 A300     		lsl	r3, r4, #2
 154 00a6 3A4A     		ldr	r2, .L14+80
 155              	.LVL12:
 156 00a8 9B58     		ldr	r3, [r3, r2]
 157 00aa 9B07     		lsl	r3, r3, #30
 158 00ac 22D5     		bpl	.L6
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 159              		.loc 1 262 0
 160 00ae 3449     		ldr	r1, .L14+64
 161 00b0 0868     		ldr	r0, [r1]
 162 00b2 8022     		mov	r2, #128
 163              	.LVL13:
 164 00b4 5202     		lsl	r2, r2, #9
 165 00b6 131C     		mov	r3, r2
 166 00b8 A340     		lsl	r3, r3, r4
 167 00ba 1B0C     		lsr	r3, r3, #16
 168 00bc 0343     		orr	r3, r0
 169 00be 0B60     		str	r3, [r1]
 170 00c0 18E0     		b	.L6
 171              	.LVL14:
 172              	.L4:
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 173              		.loc 1 268 0
 174 00c2 8022     		mov	r2, #128
 175 00c4 D205     		lsl	r2, r2, #23
 176 00c6 1343     		orr	r3, r2
 177              	.LVL15:
 178 00c8 334A     		ldr	r2, .L14+88
 179 00ca 1360     		str	r3, [r2]
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 180              		.loc 1 270 0
 181 00cc A300     		lsl	r3, r4, #2
 182 00ce 304A     		ldr	r2, .L14+80
 183              	.LVL16:
 184 00d0 9B58     		ldr	r3, [r3, r2]
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 9


 185 00d2 DB07     		lsl	r3, r3, #31
 186 00d4 04D5     		bpl	.L7
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 187              		.loc 1 272 0
 188 00d6 2B4A     		ldr	r2, .L14+68
 189              	.LVL17:
 190 00d8 1168     		ldr	r1, [r2]
 191              	.LVL18:
 192 00da 2023     		mov	r3, #32
 193 00dc 0B43     		orr	r3, r1
 194 00de 1360     		str	r3, [r2]
 195              	.L7:
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 196              		.loc 1 275 0
 197 00e0 A300     		lsl	r3, r4, #2
 198 00e2 2B4A     		ldr	r2, .L14+80
 199              	.LVL19:
 200 00e4 9B58     		ldr	r3, [r3, r2]
 201 00e6 9B07     		lsl	r3, r3, #30
 202 00e8 04D5     		bpl	.L6
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 203              		.loc 1 277 0
 204 00ea 264A     		ldr	r2, .L14+68
 205              	.LVL20:
 206 00ec 1168     		ldr	r1, [r2]
 207 00ee 4023     		mov	r3, #64
 208 00f0 0B43     		orr	r3, r1
 209 00f2 1360     		str	r3, [r2]
 210              	.L6:
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 211              		.loc 1 282 0
 212 00f4 A300     		lsl	r3, r4, #2
 213 00f6 264A     		ldr	r2, .L14+80
 214              	.LVL21:
 215 00f8 9B58     		ldr	r3, [r3, r2]
 216 00fa 9A05     		lsl	r2, r3, #22
 217 00fc 02D5     		bpl	.L13
 218              	.LVL22:
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 219              		.loc 1 284 0
 220 00fe 8020     		mov	r0, #128
 221 0100 4000     		lsl	r0, r0, #1
 222 0102 01E0     		b	.L8
 223              	.L13:
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 10


 224              		.loc 1 288 0
 225 0104 8020     		mov	r0, #128
 226 0106 4001     		lsl	r0, r0, #5
 227              	.L8:
 228              	.LVL23:
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 229              		.loc 1 291 0
 230 0108 DB05     		lsl	r3, r3, #23
 231 010a 04D4     		bmi	.L9
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 232              		.loc 1 298 0
 233 010c 6300     		lsl	r3, r4, #1
 234 010e 0021     		mov	r1, #0
 235 0110 224A     		ldr	r2, .L14+92
 236 0112 9952     		strh	r1, [r3, r2]
 237 0114 03E0     		b	.L10
 238              	.L9:
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 239              		.loc 1 307 0
 240 0116 6300     		lsl	r3, r4, #1
 241 0118 0021     		mov	r1, #0
 242 011a 204A     		ldr	r2, .L14+92
 243 011c 9952     		strh	r1, [r3, r2]
 244              	.L10:
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 245              		.loc 1 311 0 discriminator 2
 246 011e 204B     		ldr	r3, .L14+96
 247 0120 5843     		mul	r0, r3
 248              	.LVL24:
 249 0122 204B     		ldr	r3, .L14+100
 250 0124 9C46     		mov	ip, r3
 251 0126 6044     		add	r0, r0, ip
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 252              		.loc 1 312 0 discriminator 2
 253 0128 1F49     		ldr	r1, .L14+104
 254 012a FFF7FEFF 		bl	__aeabi_idiv
 255              	.LVL25:
 311:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 11


 256              		.loc 1 311 0 discriminator 2
 257 012e 00B2     		sxth	r0, r0
 258 0130 A200     		lsl	r2, r4, #2
 259 0132 1E4B     		ldr	r3, .L14+108
 260 0134 D050     		str	r0, [r2, r3]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 261              		.loc 1 232 0 discriminator 2
 262 0136 0134     		add	r4, r4, #1
 263              	.LVL26:
 264              	.L3:
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 265              		.loc 1 232 0 is_stmt 0 discriminator 1
 266 0138 042C     		cmp	r4, #4
 267 013a 98D9     		bls	.L11
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 268              		.loc 1 314 0 is_stmt 1
 269              		@ sp needed
 270              	.LVL27:
 271 013c 10BD     		pop	{r4, pc}
 272              	.L15:
 273 013e C046     		.align	2
 274              	.L14:
 275 0140 00000000 		.word	ADC_ISR
 276 0144 20003A40 		.word	1077542944
 277 0148 80033A40 		.word	1077543808
 278 014c 702E1013 		.word	319827568
 279 0150 702E0013 		.word	318778992
 280 0154 00003A40 		.word	1077542912
 281 0158 A8000080 		.word	-2147483480
 282 015c 04003A40 		.word	1077542916
 283 0160 0000FF07 		.word	134152192
 284 0164 18003A40 		.word	1077542936
 285 0168 1C003A40 		.word	1077542940
 286 016c E9030400 		.word	263145
 287 0170 10003A40 		.word	1077542928
 288 0174 04000400 		.word	262148
 289 0178 14003A40 		.word	1077542932
 290 017c 28023A40 		.word	1077543464
 291 0180 38023A40 		.word	1077543480
 292 0184 18023A40 		.word	1077543448
 293 0188 30003A40 		.word	1077542960
 294 018c FEFFFFDF 		.word	-536870914
 295 0190 00000000 		.word	.LANCHOR0
 296 0194 80003A40 		.word	1077543040
 297 0198 80023A40 		.word	1077543552
 298 019c 00000000 		.word	ADC_offset
 299 01a0 10270000 		.word	10000
 300 01a4 E40C0000 		.word	3300
 301 01a8 C8190000 		.word	6600
 302 01ac 00000000 		.word	ADC_countsPer10Volt
 303              		.cfi_endproc
 304              	.LFE3:
 305              		.size	ADC_Init, .-ADC_Init
 306              		.section	.text.ADC_Enable,"ax",%progbits
 307              		.align	2
 308              		.global	ADC_Enable
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 12


 309              		.code	16
 310              		.thumb_func
 311              		.type	ADC_Enable, %function
 312              	ADC_Enable:
 313              	.LFB4:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 314              		.loc 1 331 0
 315              		.cfi_startproc
 316 0000 08B5     		push	{r3, lr}
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 3, -8
 319              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 320              		.loc 1 332 0
 321 0002 094B     		ldr	r3, .L19
 322 0004 1B68     		ldr	r3, [r3]
 323 0006 002B     		cmp	r3, #0
 324 0008 0CDB     		blt	.L16
 325              	.L18:
 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 326              		.loc 1 336 0 discriminator 1
 327 000a 084B     		ldr	r3, .L19+4
 328 000c 1B68     		ldr	r3, [r3]
 329 000e 002B     		cmp	r3, #0
 330 0010 FBDB     		blt	.L18
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 331              		.loc 1 342 0
 332 0012 054A     		ldr	r2, .L19
 333 0014 1368     		ldr	r3, [r2]
 334 0016 8021     		mov	r1, #128
 335 0018 0906     		lsl	r1, r1, #24
 336 001a 0B43     		orr	r3, r1
 337 001c 1360     		str	r3, [r2]
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 13


 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 338              		.loc 1 345 0
 339 001e 0A20     		mov	r0, #10
 340 0020 FFF7FEFF 		bl	CyDelayUs
 341              	.LVL28:
 342              	.L16:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 343              		.loc 1 347 0
 344              		@ sp needed
 345 0024 08BD     		pop	{r3, pc}
 346              	.L20:
 347 0026 C046     		.align	2
 348              	.L19:
 349 0028 00003A40 		.word	1077542912
 350 002c 08023A40 		.word	1077543432
 351              		.cfi_endproc
 352              	.LFE4:
 353              		.size	ADC_Enable, .-ADC_Enable
 354              		.section	.text.ADC_Start,"ax",%progbits
 355              		.align	2
 356              		.global	ADC_Start
 357              		.code	16
 358              		.thumb_func
 359              		.type	ADC_Start, %function
 360              	ADC_Start:
 361              	.LFB2:
  64:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 362              		.loc 1 64 0
 363              		.cfi_startproc
 364 0000 08B5     		push	{r3, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 3, -8
 367              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC.c ****     {
 368              		.loc 1 66 0
 369 0002 064B     		ldr	r3, .L23
 370 0004 1B78     		ldrb	r3, [r3]
 371 0006 002B     		cmp	r3, #0
 372 0008 04D1     		bne	.L22
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 373              		.loc 1 68 0
 374 000a FFF7FEFF 		bl	ADC_Init
 375              	.LVL29:
  69:.\Generated_Source\PSoC4/ADC.c ****     }
 376              		.loc 1 69 0
 377 000e 0122     		mov	r2, #1
 378 0010 024B     		ldr	r3, .L23
 379 0012 1A70     		strb	r2, [r3]
 380              	.L22:
  71:.\Generated_Source\PSoC4/ADC.c **** }
 381              		.loc 1 71 0
 382 0014 FFF7FEFF 		bl	ADC_Enable
 383              	.LVL30:
  72:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 14


 384              		.loc 1 72 0
 385              		@ sp needed
 386 0018 08BD     		pop	{r3, pc}
 387              	.L24:
 388 001a C046     		.align	2
 389              	.L23:
 390 001c 00000000 		.word	.LANCHOR1
 391              		.cfi_endproc
 392              	.LFE2:
 393              		.size	ADC_Start, .-ADC_Start
 394              		.section	.text.ADC_Stop,"ax",%progbits
 395              		.align	2
 396              		.global	ADC_Stop
 397              		.code	16
 398              		.thumb_func
 399              		.type	ADC_Stop, %function
 400              	ADC_Stop:
 401              	.LFB5:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:.\Generated_Source\PSoC4/ADC.c **** {
 402              		.loc 1 366 0
 403              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 404              		.loc 1 367 0
 405 0000 024A     		ldr	r2, .L26
 406 0002 1368     		ldr	r3, [r2]
 407 0004 5B00     		lsl	r3, r3, #1
 408 0006 5B08     		lsr	r3, r3, #1
 409 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC.c **** }
 410              		.loc 1 368 0
 411              		@ sp needed
 412 000a 7047     		bx	lr
 413              	.L27:
 414              		.align	2
 415              	.L26:
 416 000c 00003A40 		.word	1077542912
 417              		.cfi_endproc
 418              	.LFE5:
 419              		.size	ADC_Stop, .-ADC_Stop
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 15


 420              		.section	.text.ADC_StartConvert,"ax",%progbits
 421              		.align	2
 422              		.global	ADC_StartConvert
 423              		.code	16
 424              		.thumb_func
 425              		.type	ADC_StartConvert, %function
 426              	ADC_StartConvert:
 427              	.LFB6:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 428              		.loc 1 392 0
 429              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 430              		.loc 1 394 0
 431 0000 034A     		ldr	r2, .L29
 432 0002 1368     		ldr	r3, [r2]
 433 0004 8021     		mov	r1, #128
 434 0006 4902     		lsl	r1, r1, #9
 435 0008 0B43     		orr	r3, r1
 436 000a 1360     		str	r3, [r2]
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 437              		.loc 1 399 0
 438              		@ sp needed
 439 000c 7047     		bx	lr
 440              	.L30:
 441 000e C046     		.align	2
 442              	.L29:
 443 0010 04003A40 		.word	1077542916
 444              		.cfi_endproc
 445              	.LFE6:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 16


 446              		.size	ADC_StartConvert, .-ADC_StartConvert
 447              		.section	.text.ADC_StopConvert,"ax",%progbits
 448              		.align	2
 449              		.global	ADC_StopConvert
 450              		.code	16
 451              		.thumb_func
 452              		.type	ADC_StopConvert, %function
 453              	ADC_StopConvert:
 454              	.LFB7:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 455              		.loc 1 417 0
 456              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 457              		.loc 1 419 0
 458 0000 024A     		ldr	r2, .L32
 459 0002 1168     		ldr	r1, [r2]
 460 0004 024B     		ldr	r3, .L32+4
 461 0006 0B40     		and	r3, r1
 462 0008 1360     		str	r3, [r2]
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 463              		.loc 1 421 0
 464              		@ sp needed
 465 000a 7047     		bx	lr
 466              	.L33:
 467              		.align	2
 468              	.L32:
 469 000c 04003A40 		.word	1077542916
 470 0010 FFFFFEFF 		.word	-65537
 471              		.cfi_endproc
 472              	.LFE7:
 473              		.size	ADC_StopConvert, .-ADC_StopConvert
 474              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 475              		.align	2
 476              		.global	ADC_IsEndConversion
 477              		.code	16
 478              		.thumb_func
 479              		.type	ADC_IsEndConversion, %function
 480              	ADC_IsEndConversion:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 17


 481              	.LFB8:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 482              		.loc 1 451 0
 483              		.cfi_startproc
 484              	.LVL31:
 485 0000 011C     		mov	r1, r0
 486              	.LVL32:
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 487              		.loc 1 454 0
 488 0002 8307     		lsl	r3, r0, #30
 489 0004 0CD0     		beq	.L41
 490              	.LVL33:
 491              	.L37:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 492              		.loc 1 458 0 discriminator 2
 493 0006 104B     		ldr	r3, .L42
 494 0008 1B68     		ldr	r3, [r3]
 495 000a 0120     		mov	r0, #1
 496 000c 1840     		and	r0, r3
 497              	.LVL34:
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 498              		.loc 1 459 0 discriminator 2
 499 000e 01D1     		bne	.L36
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 18


 500              		.loc 1 459 0 is_stmt 0 discriminator 1
 501 0010 8B07     		lsl	r3, r1, #30
 502 0012 F8D4     		bmi	.L37
 503              	.L36:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 504              		.loc 1 461 0 is_stmt 1
 505 0014 0028     		cmp	r0, #0
 506 0016 04D0     		beq	.L35
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 507              		.loc 1 464 0
 508 0018 0122     		mov	r2, #1
 509 001a 0B4B     		ldr	r3, .L42
 510 001c 1A60     		str	r2, [r3]
 511 001e 00E0     		b	.L35
 512              	.LVL35:
 513              	.L41:
 452:.\Generated_Source\PSoC4/ADC.c **** 
 514              		.loc 1 452 0
 515 0020 0020     		mov	r0, #0
 516              	.LVL36:
 517              	.L35:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 518              		.loc 1 469 0
 519 0022 0C23     		mov	r3, #12
 520 0024 0B42     		tst	r3, r1
 521 0026 0DD0     		beq	.L38
 522              	.L40:
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 523              		.loc 1 473 0
 524 0028 074B     		ldr	r3, .L42
 525 002a 1A68     		ldr	r2, [r3]
 526 002c 1023     		mov	r3, #16
 527 002e 1A40     		and	r2, r3
 528 0030 1043     		orr	r0, r2
 529              	.LVL37:
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 530              		.loc 1 474 0
 531 0032 0340     		and	r3, r0
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 532              		.loc 1 475 0
 533 0034 01D1     		bne	.L39
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 534              		.loc 1 474 0 discriminator 1
 535 0036 0A07     		lsl	r2, r1, #28
 536 0038 F6D4     		bmi	.L40
 537              	.L39:
 476:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 19


 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 538              		.loc 1 477 0
 539 003a 002B     		cmp	r3, #0
 540 003c 02D0     		beq	.L38
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 541              		.loc 1 480 0
 542 003e 1022     		mov	r2, #16
 543 0040 014B     		ldr	r3, .L42
 544 0042 1A60     		str	r2, [r3]
 545              	.L38:
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC.c **** }
 546              		.loc 1 486 0
 547              		@ sp needed
 548 0044 7047     		bx	lr
 549              	.L43:
 550 0046 C046     		.align	2
 551              	.L42:
 552 0048 10023A40 		.word	1077543440
 553              		.cfi_endproc
 554              	.LFE8:
 555              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 556              		.section	.text.ADC_GetResult16,"ax",%progbits
 557              		.align	2
 558              		.global	ADC_GetResult16
 559              		.code	16
 560              		.thumb_func
 561              		.type	ADC_GetResult16, %function
 562              	ADC_GetResult16:
 563              	.LFB9:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 564              		.loc 1 505 0
 565              		.cfi_startproc
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 20


 566              	.LVL38:
 567 0000 10B5     		push	{r4, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 4, -8
 570              		.cfi_offset 14, -4
 571 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 572              		.loc 1 509 0
 573 0004 042C     		cmp	r4, #4
 574 0006 02D9     		bls	.L45
 575              		.loc 1 509 0 is_stmt 0 discriminator 1
 576 0008 0020     		mov	r0, #0
 577              	.LVL39:
 578 000a FFF7FEFF 		bl	CyHalt
 579              	.LVL40:
 580              	.L45:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 581              		.loc 1 511 0 is_stmt 1
 582 000e 032C     		cmp	r4, #3
 583 0010 07D8     		bhi	.L46
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 584              		.loc 1 513 0
 585 0012 A400     		lsl	r4, r4, #2
 586              	.LVL41:
 587 0014 064B     		ldr	r3, .L48
 588 0016 9C46     		mov	ip, r3
 589 0018 6444     		add	r4, r4, ip
 590 001a 2068     		ldr	r0, [r4]
 591 001c 0004     		lsl	r0, r0, #16
 592 001e 000C     		lsr	r0, r0, #16
 593              	.LVL42:
 594 0020 03E0     		b	.L47
 595              	.LVL43:
 596              	.L46:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 597              		.loc 1 519 0
 598 0022 044B     		ldr	r3, .L48+4
 599 0024 1868     		ldr	r0, [r3]
 600 0026 0004     		lsl	r0, r0, #16
 601 0028 000C     		lsr	r0, r0, #16
 602              	.LVL44:
 603              	.L47:
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 21


 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 604              		.loc 1 525 0
 605 002a 00B2     		sxth	r0, r0
 606              	.LVL45:
 526:.\Generated_Source\PSoC4/ADC.c **** }
 607              		.loc 1 526 0
 608              		@ sp needed
 609 002c 10BD     		pop	{r4, pc}
 610              	.L49:
 611 002e C046     		.align	2
 612              	.L48:
 613 0030 80013A40 		.word	1077543296
 614 0034 90023A40 		.word	1077543568
 615              		.cfi_endproc
 616              	.LFE9:
 617              		.size	ADC_GetResult16, .-ADC_GetResult16
 618              		.section	.text.ADC_SetChanMask,"ax",%progbits
 619              		.align	2
 620              		.global	ADC_SetChanMask
 621              		.code	16
 622              		.thumb_func
 623              		.type	ADC_SetChanMask, %function
 624              	ADC_SetChanMask:
 625              	.LFB10:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 626              		.loc 1 550 0
 627              		.cfi_startproc
 628              	.LVL46:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 629              		.loc 1 551 0
 630 0000 0F23     		mov	r3, #15
 631 0002 1840     		and	r0, r3
 632              	.LVL47:
 633 0004 014B     		ldr	r3, .L51
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 22


 634 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
 635              		.loc 1 552 0
 636              		@ sp needed
 637 0008 7047     		bx	lr
 638              	.L52:
 639 000a C046     		.align	2
 640              	.L51:
 641 000c 20003A40 		.word	1077542944
 642              		.cfi_endproc
 643              	.LFE10:
 644              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 645              		.section	.text.ADC_EnableInjection,"ax",%progbits
 646              		.align	2
 647              		.global	ADC_EnableInjection
 648              		.code	16
 649              		.thumb_func
 650              		.type	ADC_EnableInjection, %function
 651              	ADC_EnableInjection:
 652              	.LFB11:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 653              		.loc 1 572 0
 654              		.cfi_startproc
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 655              		.loc 1 573 0
 656 0000 034A     		ldr	r2, .L54
 657 0002 1368     		ldr	r3, [r2]
 658 0004 8021     		mov	r1, #128
 659 0006 0906     		lsl	r1, r1, #24
 660 0008 0B43     		orr	r3, r1
 661 000a 1360     		str	r3, [r2]
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 662              		.loc 1 574 0
 663              		@ sp needed
 664 000c 7047     		bx	lr
 665              	.L55:
 666 000e C046     		.align	2
 667              	.L54:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 23


 668 0010 80023A40 		.word	1077543552
 669              		.cfi_endproc
 670              	.LFE11:
 671              		.size	ADC_EnableInjection, .-ADC_EnableInjection
 672              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 673              		.align	2
 674              		.global	ADC_SetLowLimit
 675              		.code	16
 676              		.thumb_func
 677              		.type	ADC_SetLowLimit, %function
 678              	ADC_SetLowLimit:
 679              	.LFB12:
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 680              		.loc 1 594 0
 681              		.cfi_startproc
 682              	.LVL48:
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 683              		.loc 1 595 0
 684 0000 054A     		ldr	r2, .L57
 685 0002 1368     		ldr	r3, [r2]
 686 0004 1B0C     		lsr	r3, r3, #16
 687 0006 1B04     		lsl	r3, r3, #16
 688 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 689              		.loc 1 596 0
 690 000a 1368     		ldr	r3, [r2]
 691 000c 0004     		lsl	r0, r0, #16
 692              	.LVL49:
 693 000e 000C     		lsr	r0, r0, #16
 694 0010 1843     		orr	r0, r3
 695 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 696              		.loc 1 597 0
 697              		@ sp needed
 698 0014 7047     		bx	lr
 699              	.L58:
 700 0016 C046     		.align	2
 701              	.L57:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 24


 702 0018 18003A40 		.word	1077542936
 703              		.cfi_endproc
 704              	.LFE12:
 705              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 706              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 707              		.align	2
 708              		.global	ADC_SetHighLimit
 709              		.code	16
 710              		.thumb_func
 711              		.type	ADC_SetHighLimit, %function
 712              	ADC_SetHighLimit:
 713              	.LFB13:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 714              		.loc 1 615 0
 715              		.cfi_startproc
 716              	.LVL50:
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 717              		.loc 1 616 0
 718 0000 044A     		ldr	r2, .L60
 719 0002 1368     		ldr	r3, [r2]
 720 0004 1B04     		lsl	r3, r3, #16
 721 0006 1B0C     		lsr	r3, r3, #16
 722 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 723              		.loc 1 617 0
 724 000a 1368     		ldr	r3, [r2]
 725 000c 0004     		lsl	r0, r0, #16
 726              	.LVL51:
 727 000e 1843     		orr	r0, r3
 728 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 729              		.loc 1 618 0
 730              		@ sp needed
 731 0012 7047     		bx	lr
 732              	.L61:
 733              		.align	2
 734              	.L60:
 735 0014 18003A40 		.word	1077542936
 736              		.cfi_endproc
 737              	.LFE13:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 25


 738              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 739              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 740              		.align	2
 741              		.global	ADC_SetLimitMask
 742              		.code	16
 743              		.thumb_func
 744              		.type	ADC_SetLimitMask, %function
 745              	ADC_SetLimitMask:
 746              	.LFB14:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 747              		.loc 1 639 0
 748              		.cfi_startproc
 749              	.LVL52:
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 750              		.loc 1 640 0
 751 0000 0F23     		mov	r3, #15
 752 0002 1840     		and	r0, r3
 753              	.LVL53:
 754 0004 014B     		ldr	r3, .L63
 755 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 756              		.loc 1 641 0
 757              		@ sp needed
 758 0008 7047     		bx	lr
 759              	.L64:
 760 000a C046     		.align	2
 761              	.L63:
 762 000c 38023A40 		.word	1077543480
 763              		.cfi_endproc
 764              	.LFE14:
 765              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 766              		.section	.text.ADC_SetSatMask,"ax",%progbits
 767              		.align	2
 768              		.global	ADC_SetSatMask
 769              		.code	16
 770              		.thumb_func
 771              		.type	ADC_SetSatMask, %function
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 26


 772              	ADC_SetSatMask:
 773              	.LFB15:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 774              		.loc 1 662 0
 775              		.cfi_startproc
 776              	.LVL54:
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 777              		.loc 1 663 0
 778 0000 0F23     		mov	r3, #15
 779 0002 1840     		and	r0, r3
 780              	.LVL55:
 781 0004 014B     		ldr	r3, .L66
 782 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 783              		.loc 1 664 0
 784              		@ sp needed
 785 0008 7047     		bx	lr
 786              	.L67:
 787 000a C046     		.align	2
 788              	.L66:
 789 000c 28023A40 		.word	1077543464
 790              		.cfi_endproc
 791              	.LFE15:
 792              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 793              		.section	.text.ADC_SetOffset,"ax",%progbits
 794              		.align	2
 795              		.global	ADC_SetOffset
 796              		.code	16
 797              		.thumb_func
 798              		.type	ADC_SetOffset, %function
 799              	ADC_SetOffset:
 800              	.LFB16:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 27


 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 801              		.loc 1 690 0
 802              		.cfi_startproc
 803              	.LVL56:
 804 0000 38B5     		push	{r3, r4, r5, lr}
 805              		.cfi_def_cfa_offset 16
 806              		.cfi_offset 3, -16
 807              		.cfi_offset 4, -12
 808              		.cfi_offset 5, -8
 809              		.cfi_offset 14, -4
 810 0002 041C     		mov	r4, r0
 811 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 812              		.loc 1 692 0
 813 0006 0428     		cmp	r0, #4
 814 0008 02D9     		bls	.L69
 815              		.loc 1 692 0 is_stmt 0 discriminator 1
 816 000a 0020     		mov	r0, #0
 817              	.LVL57:
 818 000c FFF7FEFF 		bl	CyHalt
 819              	.LVL58:
 820              	.L69:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 821              		.loc 1 694 0 is_stmt 1
 822 0010 6400     		lsl	r4, r4, #1
 823              	.LVL59:
 824 0012 014B     		ldr	r3, .L70
 825 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 826              		.loc 1 695 0
 827              		@ sp needed
 828 0016 38BD     		pop	{r3, r4, r5, pc}
 829              	.L71:
 830              		.align	2
 831              	.L70:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 28


 832 0018 00000000 		.word	ADC_offset
 833              		.cfi_endproc
 834              	.LFE16:
 835              		.size	ADC_SetOffset, .-ADC_SetOffset
 836              		.section	.text.ADC_SetGain,"ax",%progbits
 837              		.align	2
 838              		.global	ADC_SetGain
 839              		.code	16
 840              		.thumb_func
 841              		.type	ADC_SetGain, %function
 842              	ADC_SetGain:
 843              	.LFB17:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 844              		.loc 1 724 0
 845              		.cfi_startproc
 846              	.LVL60:
 847 0000 38B5     		push	{r3, r4, r5, lr}
 848              		.cfi_def_cfa_offset 16
 849              		.cfi_offset 3, -16
 850              		.cfi_offset 4, -12
 851              		.cfi_offset 5, -8
 852              		.cfi_offset 14, -4
 853 0002 041C     		mov	r4, r0
 854 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 855              		.loc 1 726 0
 856 0006 0428     		cmp	r0, #4
 857 0008 02D9     		bls	.L73
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 29


 858              		.loc 1 726 0 is_stmt 0 discriminator 1
 859 000a 0020     		mov	r0, #0
 860              	.LVL61:
 861 000c FFF7FEFF 		bl	CyHalt
 862              	.LVL62:
 863              	.L73:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 864              		.loc 1 728 0 is_stmt 1
 865 0010 A400     		lsl	r4, r4, #2
 866              	.LVL63:
 867 0012 014B     		ldr	r3, .L74
 868 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 869              		.loc 1 729 0
 870              		@ sp needed
 871              	.LVL64:
 872 0016 38BD     		pop	{r3, r4, r5, pc}
 873              	.L75:
 874              		.align	2
 875              	.L74:
 876 0018 00000000 		.word	ADC_countsPer10Volt
 877              		.cfi_endproc
 878              	.LFE17:
 879              		.size	ADC_SetGain, .-ADC_SetGain
 880              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 881              		.align	2
 882              		.global	ADC_CountsTo_mVolts
 883              		.code	16
 884              		.thumb_func
 885              		.type	ADC_CountsTo_mVolts, %function
 886              	ADC_CountsTo_mVolts:
 887              	.LFB18:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 30


 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 888              		.loc 1 757 0
 889              		.cfi_startproc
 890              	.LVL65:
 891 0000 38B5     		push	{r3, r4, r5, lr}
 892              		.cfi_def_cfa_offset 16
 893              		.cfi_offset 3, -16
 894              		.cfi_offset 4, -12
 895              		.cfi_offset 5, -8
 896              		.cfi_offset 14, -4
 897 0002 041C     		mov	r4, r0
 898 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 899              		.loc 1 761 0
 900 0006 0428     		cmp	r0, #4
 901 0008 02D9     		bls	.L77
 902              		.loc 1 761 0 is_stmt 0 discriminator 1
 903 000a 0020     		mov	r0, #0
 904              	.LVL66:
 905 000c FFF7FEFF 		bl	CyHalt
 906              	.LVL67:
 907              	.L77:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 908              		.loc 1 772 0 is_stmt 1
 909 0010 6300     		lsl	r3, r4, #1
 910 0012 0F4A     		ldr	r2, .L80
 911 0014 995A     		ldrh	r1, [r3, r2]
 912 0016 691A     		sub	r1, r5, r1
 913 0018 09B2     		sxth	r1, r1
 914              	.LVL68:
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 915              		.loc 1 774 0
 916 001a 0E48     		ldr	r0, .L80+4
 917 001c 021C     		mov	r2, r0
 918 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 919              		.loc 1 775 0
 920 0020 0029     		cmp	r1, #0
 921 0022 06DD     		ble	.L78
 922              		.loc 1 775 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 31


 923 0024 A300     		lsl	r3, r4, #2
 924 0026 0C49     		ldr	r1, .L80+8
 925              	.LVL69:
 926 0028 5B58     		ldr	r3, [r3, r1]
 927 002a D80F     		lsr	r0, r3, #31
 928 002c C018     		add	r0, r0, r3
 929 002e 4310     		asr	r3, r0, #1
 930 0030 06E0     		b	.L79
 931              	.LVL70:
 932              	.L78:
 933              		.loc 1 775 0 discriminator 2
 934 0032 A300     		lsl	r3, r4, #2
 935 0034 0849     		ldr	r1, .L80+8
 936              	.LVL71:
 937 0036 5B58     		ldr	r3, [r3, r1]
 938 0038 D80F     		lsr	r0, r3, #31
 939 003a C318     		add	r3, r0, r3
 940 003c 5B10     		asr	r3, r3, #1
 941 003e 5B42     		neg	r3, r3
 942              	.L79:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 943              		.loc 1 774 0 is_stmt 1
 944 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 945              		.loc 1 776 0
 946 0042 A400     		lsl	r4, r4, #2
 947              	.LVL72:
 948 0044 044B     		ldr	r3, .L80+8
 949 0046 E158     		ldr	r1, [r4, r3]
 950 0048 FFF7FEFF 		bl	__aeabi_idiv
 951              	.LVL73:
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 952              		.loc 1 778 0
 953 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 954              		.loc 1 779 0
 955              		@ sp needed
 956 004e 38BD     		pop	{r3, r4, r5, pc}
 957              	.L81:
 958              		.align	2
 959              	.L80:
 960 0050 00000000 		.word	ADC_offset
 961 0054 10270000 		.word	10000
 962 0058 00000000 		.word	ADC_countsPer10Volt
 963              		.cfi_endproc
 964              	.LFE18:
 965              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 966              		.global	__aeabi_lmul
 967              		.global	__aeabi_ldivmod
 968              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 969              		.align	2
 970              		.global	ADC_CountsTo_uVolts
 971              		.code	16
 972              		.thumb_func
 973              		.type	ADC_CountsTo_uVolts, %function
 974              	ADC_CountsTo_uVolts:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 32


 975              	.LFB19:
 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 976              		.loc 1 811 0
 977              		.cfi_startproc
 978              	.LVL74:
 979 0000 38B5     		push	{r3, r4, r5, lr}
 980              		.cfi_def_cfa_offset 16
 981              		.cfi_offset 3, -16
 982              		.cfi_offset 4, -12
 983              		.cfi_offset 5, -8
 984              		.cfi_offset 14, -4
 985 0002 051C     		mov	r5, r0
 986 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 987              		.loc 1 815 0
 988 0006 0428     		cmp	r0, #4
 989 0008 02D9     		bls	.L83
 990              		.loc 1 815 0 is_stmt 0 discriminator 1
 991 000a 0020     		mov	r0, #0
 992              	.LVL75:
 993 000c FFF7FEFF 		bl	CyHalt
 994              	.LVL76:
 995              	.L83:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 33


 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 996              		.loc 1 826 0 is_stmt 1
 997 0010 6A00     		lsl	r2, r5, #1
 998 0012 084B     		ldr	r3, .L84
 999 0014 D05A     		ldrh	r0, [r2, r3]
 1000 0016 201A     		sub	r0, r4, r0
 1001 0018 00B2     		sxth	r0, r0
 1002              	.LVL77:
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1003              		.loc 1 828 0
 1004 001a C117     		asr	r1, r0, #31
 1005 001c 064A     		ldr	r2, .L84+4
 1006 001e 0023     		mov	r3, #0
 1007 0020 FFF7FEFF 		bl	__aeabi_lmul
 1008              	.LVL78:
 1009 0024 AD00     		lsl	r5, r5, #2
 1010              	.LVL79:
 1011 0026 054B     		ldr	r3, .L84+8
 1012 0028 EA58     		ldr	r2, [r5, r3]
 1013 002a D317     		asr	r3, r2, #31
 1014 002c FFF7FEFF 		bl	__aeabi_ldivmod
 1015              	.LVL80:
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 1016              		.loc 1 831 0
 1017              		@ sp needed
 1018 0030 38BD     		pop	{r3, r4, r5, pc}
 1019              	.L85:
 1020 0032 C046     		.align	2
 1021              	.L84:
 1022 0034 00000000 		.word	ADC_offset
 1023 0038 80969800 		.word	10000000
 1024 003c 00000000 		.word	ADC_countsPer10Volt
 1025              		.cfi_endproc
 1026              	.LFE19:
 1027              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1028              		.global	__aeabi_i2f
 1029              		.global	__aeabi_fmul
 1030              		.global	__aeabi_fdiv
 1031              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1032              		.align	2
 1033              		.global	ADC_CountsTo_Volts
 1034              		.code	16
 1035              		.thumb_func
 1036              		.type	ADC_CountsTo_Volts, %function
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 34


 1037              	ADC_CountsTo_Volts:
 1038              	.LFB20:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 1039              		.loc 1 856 0
 1040              		.cfi_startproc
 1041              	.LVL81:
 1042 0000 38B5     		push	{r3, r4, r5, lr}
 1043              		.cfi_def_cfa_offset 16
 1044              		.cfi_offset 3, -16
 1045              		.cfi_offset 4, -12
 1046              		.cfi_offset 5, -8
 1047              		.cfi_offset 14, -4
 1048 0002 041C     		mov	r4, r0
 1049 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1050              		.loc 1 860 0
 1051 0006 0428     		cmp	r0, #4
 1052 0008 02D9     		bls	.L87
 1053              		.loc 1 860 0 is_stmt 0 discriminator 1
 1054 000a 0020     		mov	r0, #0
 1055              	.LVL82:
 1056 000c FFF7FEFF 		bl	CyHalt
 1057              	.LVL83:
 1058              	.L87:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 35


 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1059              		.loc 1 871 0 is_stmt 1
 1060 0010 6200     		lsl	r2, r4, #1
 1061 0012 0A4B     		ldr	r3, .L88
 1062 0014 D05A     		ldrh	r0, [r2, r3]
 1063 0016 281A     		sub	r0, r5, r0
 1064 0018 00B2     		sxth	r0, r0
 1065              	.LVL84:
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1066              		.loc 1 873 0
 1067 001a FFF7FEFF 		bl	__aeabi_i2f
 1068              	.LVL85:
 1069 001e 0849     		ldr	r1, .L88+4
 1070 0020 FFF7FEFF 		bl	__aeabi_fmul
 1071              	.LVL86:
 1072 0024 051C     		add	r5, r0, #0
 1073 0026 A400     		lsl	r4, r4, #2
 1074              	.LVL87:
 1075 0028 064B     		ldr	r3, .L88+8
 1076 002a E058     		ldr	r0, [r4, r3]
 1077 002c FFF7FEFF 		bl	__aeabi_i2f
 1078              	.LVL88:
 1079 0030 011C     		add	r1, r0, #0
 1080 0032 281C     		add	r0, r5, #0
 1081 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1082              	.LVL89:
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 1083              		.loc 1 876 0
 1084              		@ sp needed
 1085 0038 38BD     		pop	{r3, r4, r5, pc}
 1086              	.L89:
 1087 003a C046     		.align	2
 1088              	.L88:
 1089 003c 00000000 		.word	ADC_offset
 1090 0040 00002041 		.word	1092616192
 1091 0044 00000000 		.word	ADC_countsPer10Volt
 1092              		.cfi_endproc
 1093              	.LFE20:
 1094              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1095              		.comm	ADC_countsPer10Volt,20,4
 1096              		.comm	ADC_offset,10,4
 1097              		.global	ADC_initVar
 1098              		.section	.rodata
 1099              		.align	2
 1100              		.set	.LANCHOR0,. + 0
 1101              		.type	ADC_channelsConfig, %object
 1102              		.size	ADC_channelsConfig, 20
 1103              	ADC_channelsConfig:
 1104 0000 00040000 		.word	1024
 1105 0004 00050000 		.word	1280
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 36


 1106 0008 00140000 		.word	5120
 1107 000c 00140000 		.word	5120
 1108 0010 00000000 		.word	0
 1109              		.type	ADC_InputsPlacement.4795, %object
 1110              		.size	ADC_InputsPlacement.4795, 5
 1111              	ADC_InputsPlacement.4795:
 1112 0014 07       		.byte	7
 1113 0015 02       		.byte	2
 1114 0016 12       		.byte	18
 1115 0017 13       		.byte	19
 1116 0018 70       		.byte	112
 1117 0019 000000   		.bss
 1118              		.set	.LANCHOR1,. + 0
 1119              		.type	ADC_initVar, %object
 1120              		.size	ADC_initVar, 1
 1121              	ADC_initVar:
 1122 0000 00       		.space	1
 1123              		.text
 1124              	.Letext0:
 1125              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1126              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1127              		.section	.debug_info,"",%progbits
 1128              	.Ldebug_info0:
 1129 0000 CD050000 		.4byte	0x5cd
 1130 0004 0400     		.2byte	0x4
 1131 0006 00000000 		.4byte	.Ldebug_abbrev0
 1132 000a 04       		.byte	0x4
 1133 000b 01       		.uleb128 0x1
 1134 000c EF010000 		.4byte	.LASF63
 1135 0010 01       		.byte	0x1
 1136 0011 EB020000 		.4byte	.LASF64
 1137 0015 96030000 		.4byte	.LASF65
 1138 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1139 001d 00000000 		.4byte	0
 1140 0021 00000000 		.4byte	.Ldebug_line0
 1141 0025 02       		.uleb128 0x2
 1142 0026 01       		.byte	0x1
 1143 0027 06       		.byte	0x6
 1144 0028 7C000000 		.4byte	.LASF0
 1145 002c 02       		.uleb128 0x2
 1146 002d 01       		.byte	0x1
 1147 002e 08       		.byte	0x8
 1148 002f 0A030000 		.4byte	.LASF1
 1149 0033 02       		.uleb128 0x2
 1150 0034 02       		.byte	0x2
 1151 0035 05       		.byte	0x5
 1152 0036 23030000 		.4byte	.LASF2
 1153 003a 02       		.uleb128 0x2
 1154 003b 02       		.byte	0x2
 1155 003c 07       		.byte	0x7
 1156 003d 5D010000 		.4byte	.LASF3
 1157 0041 02       		.uleb128 0x2
 1158 0042 04       		.byte	0x4
 1159 0043 05       		.byte	0x5
 1160 0044 9F000000 		.4byte	.LASF4
 1161 0048 02       		.uleb128 0x2
 1162 0049 04       		.byte	0x4
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 37


 1163 004a 07       		.byte	0x7
 1164 004b 2C010000 		.4byte	.LASF5
 1165 004f 02       		.uleb128 0x2
 1166 0050 08       		.byte	0x8
 1167 0051 05       		.byte	0x5
 1168 0052 6E000000 		.4byte	.LASF6
 1169 0056 02       		.uleb128 0x2
 1170 0057 08       		.byte	0x8
 1171 0058 07       		.byte	0x7
 1172 0059 32000000 		.4byte	.LASF7
 1173 005d 03       		.uleb128 0x3
 1174 005e 04       		.byte	0x4
 1175 005f 05       		.byte	0x5
 1176 0060 696E7400 		.ascii	"int\000"
 1177 0064 02       		.uleb128 0x2
 1178 0065 04       		.byte	0x4
 1179 0066 07       		.byte	0x7
 1180 0067 18010000 		.4byte	.LASF8
 1181 006b 04       		.uleb128 0x4
 1182 006c D0000000 		.4byte	.LASF9
 1183 0070 02       		.byte	0x2
 1184 0071 9801     		.2byte	0x198
 1185 0073 2C000000 		.4byte	0x2c
 1186 0077 04       		.uleb128 0x4
 1187 0078 00000000 		.4byte	.LASF10
 1188 007c 02       		.byte	0x2
 1189 007d 9901     		.2byte	0x199
 1190 007f 3A000000 		.4byte	0x3a
 1191 0083 04       		.uleb128 0x4
 1192 0084 E7000000 		.4byte	.LASF11
 1193 0088 02       		.byte	0x2
 1194 0089 9A01     		.2byte	0x19a
 1195 008b 48000000 		.4byte	0x48
 1196 008f 04       		.uleb128 0x4
 1197 0090 82030000 		.4byte	.LASF12
 1198 0094 02       		.byte	0x2
 1199 0095 9C01     		.2byte	0x19c
 1200 0097 33000000 		.4byte	0x33
 1201 009b 04       		.uleb128 0x4
 1202 009c 8F000000 		.4byte	.LASF13
 1203 00a0 02       		.byte	0x2
 1204 00a1 9D01     		.2byte	0x19d
 1205 00a3 41000000 		.4byte	0x41
 1206 00a7 04       		.uleb128 0x4
 1207 00a8 9C010000 		.4byte	.LASF14
 1208 00ac 02       		.byte	0x2
 1209 00ad 9E01     		.2byte	0x19e
 1210 00af B3000000 		.4byte	0xb3
 1211 00b3 02       		.uleb128 0x2
 1212 00b4 04       		.byte	0x4
 1213 00b5 04       		.byte	0x4
 1214 00b6 B0020000 		.4byte	.LASF15
 1215 00ba 02       		.uleb128 0x2
 1216 00bb 08       		.byte	0x8
 1217 00bc 04       		.byte	0x4
 1218 00bd E0000000 		.4byte	.LASF16
 1219 00c1 04       		.uleb128 0x4
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 38


 1220 00c2 7D020000 		.4byte	.LASF17
 1221 00c6 02       		.byte	0x2
 1222 00c7 A301     		.2byte	0x1a3
 1223 00c9 4F000000 		.4byte	0x4f
 1224 00cd 02       		.uleb128 0x2
 1225 00ce 01       		.byte	0x1
 1226 00cf 08       		.byte	0x8
 1227 00d0 41030000 		.4byte	.LASF18
 1228 00d4 04       		.uleb128 0x4
 1229 00d5 96010000 		.4byte	.LASF19
 1230 00d9 02       		.byte	0x2
 1231 00da 4402     		.2byte	0x244
 1232 00dc E0000000 		.4byte	0xe0
 1233 00e0 05       		.uleb128 0x5
 1234 00e1 83000000 		.4byte	0x83
 1235 00e5 04       		.uleb128 0x4
 1236 00e6 46030000 		.4byte	.LASF20
 1237 00ea 02       		.byte	0x2
 1238 00eb 5402     		.2byte	0x254
 1239 00ed F1000000 		.4byte	0xf1
 1240 00f1 06       		.uleb128 0x6
 1241 00f2 04       		.byte	0x4
 1242 00f3 F7000000 		.4byte	0xf7
 1243 00f7 07       		.uleb128 0x7
 1244 00f8 02       		.uleb128 0x2
 1245 00f9 04       		.byte	0x4
 1246 00fa 07       		.byte	0x7
 1247 00fb A4010000 		.4byte	.LASF21
 1248 00ff 08       		.uleb128 0x8
 1249 0100 29000000 		.4byte	.LASF26
 1250 0104 01       		.byte	0x1
 1251 0105 5E       		.byte	0x5e
 1252 0106 00000000 		.4byte	.LFB3
 1253 010a B0010000 		.4byte	.LFE3-.LFB3
 1254 010e 01       		.uleb128 0x1
 1255 010f 9C       		.byte	0x9c
 1256 0110 7A010000 		.4byte	0x17a
 1257 0114 09       		.uleb128 0x9
 1258 0115 36030000 		.4byte	.LASF22
 1259 0119 01       		.byte	0x1
 1260 011a 60       		.byte	0x60
 1261 011b 83000000 		.4byte	0x83
 1262 011f 00000000 		.4byte	.LLST0
 1263 0123 09       		.uleb128 0x9
 1264 0124 53010000 		.4byte	.LASF23
 1265 0128 01       		.byte	0x1
 1266 0129 61       		.byte	0x61
 1267 012a 83000000 		.4byte	0x83
 1268 012e 1F000000 		.4byte	.LLST1
 1269 0132 09       		.uleb128 0x9
 1270 0133 0F000000 		.4byte	.LASF24
 1271 0137 01       		.byte	0x1
 1272 0138 62       		.byte	0x62
 1273 0139 9B000000 		.4byte	0x9b
 1274 013d 06020000 		.4byte	.LLST2
 1275 0141 0A       		.uleb128 0xa
 1276 0142 49000000 		.4byte	.LASF25
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 39


 1277 0146 01       		.byte	0x1
 1278 0147 65       		.byte	0x65
 1279 0148 8A010000 		.4byte	0x18a
 1280 014c 05       		.uleb128 0x5
 1281 014d 03       		.byte	0x3
 1282 014e 14000000 		.4byte	ADC_InputsPlacement.4795
 1283 0152 0B       		.uleb128 0xb
 1284 0153 0A000000 		.4byte	.LVL0
 1285 0157 82050000 		.4byte	0x582
 1286 015b 6A010000 		.4byte	0x16a
 1287 015f 0C       		.uleb128 0xc
 1288 0160 01       		.uleb128 0x1
 1289 0161 51       		.byte	0x51
 1290 0162 01       		.uleb128 0x1
 1291 0163 33       		.byte	0x33
 1292 0164 0C       		.uleb128 0xc
 1293 0165 01       		.uleb128 0x1
 1294 0166 50       		.byte	0x50
 1295 0167 01       		.uleb128 0x1
 1296 0168 3F       		.byte	0x3f
 1297 0169 00       		.byte	0
 1298 016a 0D       		.uleb128 0xd
 1299 016b 12000000 		.4byte	.LVL1
 1300 016f 98050000 		.4byte	0x598
 1301 0173 0C       		.uleb128 0xc
 1302 0174 01       		.uleb128 0x1
 1303 0175 50       		.byte	0x50
 1304 0176 01       		.uleb128 0x1
 1305 0177 3F       		.byte	0x3f
 1306 0178 00       		.byte	0
 1307 0179 00       		.byte	0
 1308 017a 0E       		.uleb128 0xe
 1309 017b 6B000000 		.4byte	0x6b
 1310 017f 8A010000 		.4byte	0x18a
 1311 0183 0F       		.uleb128 0xf
 1312 0184 F8000000 		.4byte	0xf8
 1313 0188 04       		.byte	0x4
 1314 0189 00       		.byte	0
 1315 018a 10       		.uleb128 0x10
 1316 018b 7A010000 		.4byte	0x17a
 1317 018f 11       		.uleb128 0x11
 1318 0190 77030000 		.4byte	.LASF27
 1319 0194 01       		.byte	0x1
 1320 0195 4A01     		.2byte	0x14a
 1321 0197 00000000 		.4byte	.LFB4
 1322 019b 30000000 		.4byte	.LFE4-.LFB4
 1323 019f 01       		.uleb128 0x1
 1324 01a0 9C       		.byte	0x9c
 1325 01a1 B5010000 		.4byte	0x1b5
 1326 01a5 0D       		.uleb128 0xd
 1327 01a6 24000000 		.4byte	.LVL28
 1328 01aa B2050000 		.4byte	0x5b2
 1329 01ae 0C       		.uleb128 0xc
 1330 01af 01       		.uleb128 0x1
 1331 01b0 50       		.byte	0x50
 1332 01b1 01       		.uleb128 0x1
 1333 01b2 3A       		.byte	0x3a
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 40


 1334 01b3 00       		.byte	0
 1335 01b4 00       		.byte	0
 1336 01b5 12       		.uleb128 0x12
 1337 01b6 95000000 		.4byte	.LASF28
 1338 01ba 01       		.byte	0x1
 1339 01bb 3F       		.byte	0x3f
 1340 01bc 00000000 		.4byte	.LFB2
 1341 01c0 20000000 		.4byte	.LFE2-.LFB2
 1342 01c4 01       		.uleb128 0x1
 1343 01c5 9C       		.byte	0x9c
 1344 01c6 DD010000 		.4byte	0x1dd
 1345 01ca 13       		.uleb128 0x13
 1346 01cb 0E000000 		.4byte	.LVL29
 1347 01cf FF000000 		.4byte	0xff
 1348 01d3 13       		.uleb128 0x13
 1349 01d4 18000000 		.4byte	.LVL30
 1350 01d8 8F010000 		.4byte	0x18f
 1351 01dc 00       		.byte	0
 1352 01dd 14       		.uleb128 0x14
 1353 01de 2D030000 		.4byte	.LASF29
 1354 01e2 01       		.byte	0x1
 1355 01e3 6D01     		.2byte	0x16d
 1356 01e5 00000000 		.4byte	.LFB5
 1357 01e9 10000000 		.4byte	.LFE5-.LFB5
 1358 01ed 01       		.uleb128 0x1
 1359 01ee 9C       		.byte	0x9c
 1360 01ef 14       		.uleb128 0x14
 1361 01f0 5D000000 		.4byte	.LASF30
 1362 01f4 01       		.byte	0x1
 1363 01f5 8701     		.2byte	0x187
 1364 01f7 00000000 		.4byte	.LFB6
 1365 01fb 14000000 		.4byte	.LFE6-.LFB6
 1366 01ff 01       		.uleb128 0x1
 1367 0200 9C       		.byte	0x9c
 1368 0201 14       		.uleb128 0x14
 1369 0202 7F010000 		.4byte	.LASF31
 1370 0206 01       		.byte	0x1
 1371 0207 A001     		.2byte	0x1a0
 1372 0209 00000000 		.4byte	.LFB7
 1373 020d 14000000 		.4byte	.LFE7-.LFB7
 1374 0211 01       		.uleb128 0x1
 1375 0212 9C       		.byte	0x9c
 1376 0213 15       		.uleb128 0x15
 1377 0214 DB010000 		.4byte	.LASF33
 1378 0218 01       		.byte	0x1
 1379 0219 C201     		.2byte	0x1c2
 1380 021b 83000000 		.4byte	0x83
 1381 021f 00000000 		.4byte	.LFB8
 1382 0223 4C000000 		.4byte	.LFE8-.LFB8
 1383 0227 01       		.uleb128 0x1
 1384 0228 9C       		.byte	0x9c
 1385 0229 4E020000 		.4byte	0x24e
 1386 022d 16       		.uleb128 0x16
 1387 022e FF000000 		.4byte	.LASF35
 1388 0232 01       		.byte	0x1
 1389 0233 C201     		.2byte	0x1c2
 1390 0235 83000000 		.4byte	0x83
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 41


 1391 0239 19020000 		.4byte	.LLST3
 1392 023d 17       		.uleb128 0x17
 1393 023e 88000000 		.4byte	.LASF32
 1394 0242 01       		.byte	0x1
 1395 0243 C401     		.2byte	0x1c4
 1396 0245 83000000 		.4byte	0x83
 1397 0249 4D020000 		.4byte	.LLST4
 1398 024d 00       		.byte	0
 1399 024e 15       		.uleb128 0x15
 1400 024f DA030000 		.4byte	.LASF34
 1401 0253 01       		.byte	0x1
 1402 0254 F801     		.2byte	0x1f8
 1403 0256 8F000000 		.4byte	0x8f
 1404 025a 00000000 		.4byte	.LFB9
 1405 025e 38000000 		.4byte	.LFE9-.LFB9
 1406 0262 01       		.uleb128 0x1
 1407 0263 9C       		.byte	0x9c
 1408 0264 98020000 		.4byte	0x298
 1409 0268 16       		.uleb128 0x16
 1410 0269 3C030000 		.4byte	.LASF36
 1411 026d 01       		.byte	0x1
 1412 026e F801     		.2byte	0x1f8
 1413 0270 83000000 		.4byte	0x83
 1414 0274 83020000 		.4byte	.LLST5
 1415 0278 17       		.uleb128 0x17
 1416 0279 D3030000 		.4byte	.LASF37
 1417 027d 01       		.byte	0x1
 1418 027e FA01     		.2byte	0x1fa
 1419 0280 83000000 		.4byte	0x83
 1420 0284 C8020000 		.4byte	.LLST6
 1421 0288 0D       		.uleb128 0xd
 1422 0289 0E000000 		.4byte	.LVL40
 1423 028d C3050000 		.4byte	0x5c3
 1424 0291 0C       		.uleb128 0xc
 1425 0292 01       		.uleb128 0x1
 1426 0293 50       		.byte	0x50
 1427 0294 01       		.uleb128 0x1
 1428 0295 30       		.byte	0x30
 1429 0296 00       		.byte	0
 1430 0297 00       		.byte	0
 1431 0298 11       		.uleb128 0x11
 1432 0299 94020000 		.4byte	.LASF38
 1433 029d 01       		.byte	0x1
 1434 029e 2502     		.2byte	0x225
 1435 02a0 00000000 		.4byte	.LFB10
 1436 02a4 10000000 		.4byte	.LFE10-.LFB10
 1437 02a8 01       		.uleb128 0x1
 1438 02a9 9C       		.byte	0x9c
 1439 02aa BF020000 		.4byte	0x2bf
 1440 02ae 16       		.uleb128 0x16
 1441 02af EE000000 		.4byte	.LASF39
 1442 02b3 01       		.byte	0x1
 1443 02b4 2502     		.2byte	0x225
 1444 02b6 83000000 		.4byte	0x83
 1445 02ba E6020000 		.4byte	.LLST7
 1446 02be 00       		.byte	0
 1447 02bf 14       		.uleb128 0x14
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 42


 1448 02c0 C7010000 		.4byte	.LASF40
 1449 02c4 01       		.byte	0x1
 1450 02c5 3B02     		.2byte	0x23b
 1451 02c7 00000000 		.4byte	.LFB11
 1452 02cb 14000000 		.4byte	.LFE11-.LFB11
 1453 02cf 01       		.uleb128 0x1
 1454 02d0 9C       		.byte	0x9c
 1455 02d1 11       		.uleb128 0x11
 1456 02d2 D4020000 		.4byte	.LASF41
 1457 02d6 01       		.byte	0x1
 1458 02d7 5102     		.2byte	0x251
 1459 02d9 00000000 		.4byte	.LFB12
 1460 02dd 1C000000 		.4byte	.LFE12-.LFB12
 1461 02e1 01       		.uleb128 0x1
 1462 02e2 9C       		.byte	0x9c
 1463 02e3 F8020000 		.4byte	0x2f8
 1464 02e7 16       		.uleb128 0x16
 1465 02e8 AD010000 		.4byte	.LASF42
 1466 02ec 01       		.byte	0x1
 1467 02ed 5102     		.2byte	0x251
 1468 02ef 83000000 		.4byte	0x83
 1469 02f3 07030000 		.4byte	.LLST8
 1470 02f7 00       		.byte	0
 1471 02f8 11       		.uleb128 0x11
 1472 02f9 B6010000 		.4byte	.LASF43
 1473 02fd 01       		.byte	0x1
 1474 02fe 6602     		.2byte	0x266
 1475 0300 00000000 		.4byte	.LFB13
 1476 0304 18000000 		.4byte	.LFE13-.LFB13
 1477 0308 01       		.uleb128 0x1
 1478 0309 9C       		.byte	0x9c
 1479 030a 1F030000 		.4byte	0x31f
 1480 030e 16       		.uleb128 0x16
 1481 030f B6020000 		.4byte	.LASF44
 1482 0313 01       		.byte	0x1
 1483 0314 6602     		.2byte	0x266
 1484 0316 83000000 		.4byte	0x83
 1485 031a 28030000 		.4byte	.LLST9
 1486 031e 00       		.byte	0
 1487 031f 11       		.uleb128 0x11
 1488 0320 07010000 		.4byte	.LASF45
 1489 0324 01       		.byte	0x1
 1490 0325 7E02     		.2byte	0x27e
 1491 0327 00000000 		.4byte	.LFB14
 1492 032b 10000000 		.4byte	.LFE14-.LFB14
 1493 032f 01       		.uleb128 0x1
 1494 0330 9C       		.byte	0x9c
 1495 0331 46030000 		.4byte	0x346
 1496 0335 16       		.uleb128 0x16
 1497 0336 EE000000 		.4byte	.LASF39
 1498 033a 01       		.byte	0x1
 1499 033b 7E02     		.2byte	0x27e
 1500 033d 83000000 		.4byte	0x83
 1501 0341 49030000 		.4byte	.LLST10
 1502 0345 00       		.byte	0
 1503 0346 11       		.uleb128 0x11
 1504 0347 3E010000 		.4byte	.LASF46
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 43


 1505 034b 01       		.byte	0x1
 1506 034c 9502     		.2byte	0x295
 1507 034e 00000000 		.4byte	.LFB15
 1508 0352 10000000 		.4byte	.LFE15-.LFB15
 1509 0356 01       		.uleb128 0x1
 1510 0357 9C       		.byte	0x9c
 1511 0358 6D030000 		.4byte	0x36d
 1512 035c 16       		.uleb128 0x16
 1513 035d EE000000 		.4byte	.LASF39
 1514 0361 01       		.byte	0x1
 1515 0362 9502     		.2byte	0x295
 1516 0364 83000000 		.4byte	0x83
 1517 0368 6A030000 		.4byte	.LLST11
 1518 036c 00       		.byte	0
 1519 036d 11       		.uleb128 0x11
 1520 036e 88030000 		.4byte	.LASF47
 1521 0372 01       		.byte	0x1
 1522 0373 B102     		.2byte	0x2b1
 1523 0375 00000000 		.4byte	.LFB16
 1524 0379 1C000000 		.4byte	.LFE16-.LFB16
 1525 037d 01       		.uleb128 0x1
 1526 037e 9C       		.byte	0x9c
 1527 037f B3030000 		.4byte	0x3b3
 1528 0383 16       		.uleb128 0x16
 1529 0384 3C030000 		.4byte	.LASF36
 1530 0388 01       		.byte	0x1
 1531 0389 B102     		.2byte	0x2b1
 1532 038b 83000000 		.4byte	0x83
 1533 038f 8B030000 		.4byte	.LLST12
 1534 0393 16       		.uleb128 0x16
 1535 0394 66030000 		.4byte	.LASF48
 1536 0398 01       		.byte	0x1
 1537 0399 B102     		.2byte	0x2b1
 1538 039b 8F000000 		.4byte	0x8f
 1539 039f B7030000 		.4byte	.LLST13
 1540 03a3 0D       		.uleb128 0xd
 1541 03a4 10000000 		.4byte	.LVL58
 1542 03a8 C3050000 		.4byte	0x5c3
 1543 03ac 0C       		.uleb128 0xc
 1544 03ad 01       		.uleb128 0x1
 1545 03ae 50       		.byte	0x50
 1546 03af 01       		.uleb128 0x1
 1547 03b0 30       		.byte	0x30
 1548 03b1 00       		.byte	0
 1549 03b2 00       		.byte	0
 1550 03b3 11       		.uleb128 0x11
 1551 03b4 A4020000 		.4byte	.LASF49
 1552 03b8 01       		.byte	0x1
 1553 03b9 D302     		.2byte	0x2d3
 1554 03bb 00000000 		.4byte	.LFB17
 1555 03bf 1C000000 		.4byte	.LFE17-.LFB17
 1556 03c3 01       		.uleb128 0x1
 1557 03c4 9C       		.byte	0x9c
 1558 03c5 F9030000 		.4byte	0x3f9
 1559 03c9 16       		.uleb128 0x16
 1560 03ca 3C030000 		.4byte	.LASF36
 1561 03ce 01       		.byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 44


 1562 03cf D302     		.2byte	0x2d3
 1563 03d1 83000000 		.4byte	0x83
 1564 03d5 D8030000 		.4byte	.LLST14
 1565 03d9 16       		.uleb128 0x16
 1566 03da 07000000 		.4byte	.LASF50
 1567 03de 01       		.byte	0x1
 1568 03df D302     		.2byte	0x2d3
 1569 03e1 9B000000 		.4byte	0x9b
 1570 03e5 04040000 		.4byte	.LLST15
 1571 03e9 0D       		.uleb128 0xd
 1572 03ea 10000000 		.4byte	.LVL62
 1573 03ee C3050000 		.4byte	0x5c3
 1574 03f2 0C       		.uleb128 0xc
 1575 03f3 01       		.uleb128 0x1
 1576 03f4 50       		.byte	0x50
 1577 03f5 01       		.uleb128 0x1
 1578 03f6 30       		.byte	0x30
 1579 03f7 00       		.byte	0
 1580 03f8 00       		.byte	0
 1581 03f9 18       		.uleb128 0x18
 1582 03fa C0020000 		.4byte	.LASF51
 1583 03fe 01       		.byte	0x1
 1584 03ff F402     		.2byte	0x2f4
 1585 0401 8F000000 		.4byte	0x8f
 1586 0405 00000000 		.4byte	.LFB18
 1587 0409 5C000000 		.4byte	.LFE18-.LFB18
 1588 040d 01       		.uleb128 0x1
 1589 040e 9C       		.byte	0x9c
 1590 040f 51040000 		.4byte	0x451
 1591 0413 16       		.uleb128 0x16
 1592 0414 3C030000 		.4byte	.LASF36
 1593 0418 01       		.byte	0x1
 1594 0419 F402     		.2byte	0x2f4
 1595 041b 83000000 		.4byte	0x83
 1596 041f 34040000 		.4byte	.LLST16
 1597 0423 16       		.uleb128 0x16
 1598 0424 6D030000 		.4byte	.LASF52
 1599 0428 01       		.byte	0x1
 1600 0429 F402     		.2byte	0x2f4
 1601 042b 8F000000 		.4byte	0x8f
 1602 042f 60040000 		.4byte	.LLST17
 1603 0433 19       		.uleb128 0x19
 1604 0434 8F010000 		.4byte	.LASF53
 1605 0438 01       		.byte	0x1
 1606 0439 F602     		.2byte	0x2f6
 1607 043b 8F000000 		.4byte	0x8f
 1608 043f 01       		.uleb128 0x1
 1609 0440 50       		.byte	0x50
 1610 0441 0D       		.uleb128 0xd
 1611 0442 10000000 		.4byte	.LVL67
 1612 0446 C3050000 		.4byte	0x5c3
 1613 044a 0C       		.uleb128 0xc
 1614 044b 01       		.uleb128 0x1
 1615 044c 50       		.byte	0x50
 1616 044d 01       		.uleb128 0x1
 1617 044e 30       		.byte	0x30
 1618 044f 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 45


 1619 0450 00       		.byte	0
 1620 0451 18       		.uleb128 0x18
 1621 0452 A8000000 		.4byte	.LASF54
 1622 0456 01       		.byte	0x1
 1623 0457 2A03     		.2byte	0x32a
 1624 0459 9B000000 		.4byte	0x9b
 1625 045d 00000000 		.4byte	.LFB19
 1626 0461 40000000 		.4byte	.LFE19-.LFB19
 1627 0465 01       		.uleb128 0x1
 1628 0466 9C       		.byte	0x9c
 1629 0467 A7040000 		.4byte	0x4a7
 1630 046b 16       		.uleb128 0x16
 1631 046c 3C030000 		.4byte	.LASF36
 1632 0470 01       		.byte	0x1
 1633 0471 2A03     		.2byte	0x32a
 1634 0473 83000000 		.4byte	0x83
 1635 0477 97040000 		.4byte	.LLST18
 1636 047b 16       		.uleb128 0x16
 1637 047c 6D030000 		.4byte	.LASF52
 1638 0480 01       		.byte	0x1
 1639 0481 2A03     		.2byte	0x32a
 1640 0483 8F000000 		.4byte	0x8f
 1641 0487 C3040000 		.4byte	.LLST19
 1642 048b 1A       		.uleb128 0x1a
 1643 048c 25010000 		.4byte	.LASF66
 1644 0490 01       		.byte	0x1
 1645 0491 2C03     		.2byte	0x32c
 1646 0493 C1000000 		.4byte	0xc1
 1647 0497 0D       		.uleb128 0xd
 1648 0498 10000000 		.4byte	.LVL76
 1649 049c C3050000 		.4byte	0x5c3
 1650 04a0 0C       		.uleb128 0xc
 1651 04a1 01       		.uleb128 0x1
 1652 04a2 50       		.byte	0x50
 1653 04a3 01       		.uleb128 0x1
 1654 04a4 30       		.byte	0x30
 1655 04a5 00       		.byte	0
 1656 04a6 00       		.byte	0
 1657 04a7 18       		.uleb128 0x18
 1658 04a8 16000000 		.4byte	.LASF55
 1659 04ac 01       		.byte	0x1
 1660 04ad 5703     		.2byte	0x357
 1661 04af A7000000 		.4byte	0xa7
 1662 04b3 00000000 		.4byte	.LFB20
 1663 04b7 48000000 		.4byte	.LFE20-.LFB20
 1664 04bb 01       		.uleb128 0x1
 1665 04bc 9C       		.byte	0x9c
 1666 04bd FF040000 		.4byte	0x4ff
 1667 04c1 16       		.uleb128 0x16
 1668 04c2 3C030000 		.4byte	.LASF36
 1669 04c6 01       		.byte	0x1
 1670 04c7 5703     		.2byte	0x357
 1671 04c9 83000000 		.4byte	0x83
 1672 04cd EF040000 		.4byte	.LLST20
 1673 04d1 16       		.uleb128 0x16
 1674 04d2 6D030000 		.4byte	.LASF52
 1675 04d6 01       		.byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 46


 1676 04d7 5703     		.2byte	0x357
 1677 04d9 8F000000 		.4byte	0x8f
 1678 04dd 1B050000 		.4byte	.LLST21
 1679 04e1 19       		.uleb128 0x19
 1680 04e2 4D010000 		.4byte	.LASF56
 1681 04e6 01       		.byte	0x1
 1682 04e7 5903     		.2byte	0x359
 1683 04e9 A7000000 		.4byte	0xa7
 1684 04ed 01       		.uleb128 0x1
 1685 04ee 50       		.byte	0x50
 1686 04ef 0D       		.uleb128 0xd
 1687 04f0 10000000 		.4byte	.LVL83
 1688 04f4 C3050000 		.4byte	0x5c3
 1689 04f8 0C       		.uleb128 0xc
 1690 04f9 01       		.uleb128 0x1
 1691 04fa 50       		.byte	0x50
 1692 04fb 01       		.uleb128 0x1
 1693 04fc 30       		.byte	0x30
 1694 04fd 00       		.byte	0
 1695 04fe 00       		.byte	0
 1696 04ff 0E       		.uleb128 0xe
 1697 0500 83000000 		.4byte	0x83
 1698 0504 0F050000 		.4byte	0x50f
 1699 0508 0F       		.uleb128 0xf
 1700 0509 F8000000 		.4byte	0xf8
 1701 050d 04       		.byte	0x4
 1702 050e 00       		.byte	0
 1703 050f 0A       		.uleb128 0xa
 1704 0510 53030000 		.4byte	.LASF57
 1705 0514 01       		.byte	0x1
 1706 0515 21       		.byte	0x21
 1707 0516 20050000 		.4byte	0x520
 1708 051a 05       		.uleb128 0x5
 1709 051b 03       		.byte	0x3
 1710 051c 00000000 		.4byte	ADC_channelsConfig
 1711 0520 10       		.uleb128 0x10
 1712 0521 FF040000 		.4byte	0x4ff
 1713 0525 1B       		.uleb128 0x1b
 1714 0526 F3000000 		.4byte	.LASF58
 1715 052a 01       		.byte	0x1
 1716 052b 18       		.byte	0x18
 1717 052c 6B000000 		.4byte	0x6b
 1718 0530 05       		.uleb128 0x5
 1719 0531 03       		.byte	0x3
 1720 0532 00000000 		.4byte	ADC_initVar
 1721 0536 0E       		.uleb128 0xe
 1722 0537 8F000000 		.4byte	0x8f
 1723 053b 46050000 		.4byte	0x546
 1724 053f 0F       		.uleb128 0xf
 1725 0540 F8000000 		.4byte	0xf8
 1726 0544 04       		.byte	0x4
 1727 0545 00       		.byte	0
 1728 0546 1B       		.uleb128 0x1b
 1729 0547 18030000 		.4byte	.LASF59
 1730 054b 01       		.byte	0x1
 1731 054c 19       		.byte	0x19
 1732 054d 57050000 		.4byte	0x557
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 47


 1733 0551 05       		.uleb128 0x5
 1734 0552 03       		.byte	0x3
 1735 0553 00000000 		.4byte	ADC_offset
 1736 0557 05       		.uleb128 0x5
 1737 0558 36050000 		.4byte	0x536
 1738 055c 0E       		.uleb128 0xe
 1739 055d 9B000000 		.4byte	0x9b
 1740 0561 6C050000 		.4byte	0x56c
 1741 0565 0F       		.uleb128 0xf
 1742 0566 F8000000 		.4byte	0xf8
 1743 056a 04       		.byte	0x4
 1744 056b 00       		.byte	0
 1745 056c 1B       		.uleb128 0x1b
 1746 056d BC000000 		.4byte	.LASF60
 1747 0571 01       		.byte	0x1
 1748 0572 1A       		.byte	0x1a
 1749 0573 7D050000 		.4byte	0x57d
 1750 0577 05       		.uleb128 0x5
 1751 0578 03       		.byte	0x3
 1752 0579 00000000 		.4byte	ADC_countsPer10Volt
 1753 057d 05       		.uleb128 0x5
 1754 057e 5C050000 		.4byte	0x55c
 1755 0582 1C       		.uleb128 0x1c
 1756 0583 83020000 		.4byte	.LASF61
 1757 0587 03       		.byte	0x3
 1758 0588 BE       		.byte	0xbe
 1759 0589 98050000 		.4byte	0x598
 1760 058d 1D       		.uleb128 0x1d
 1761 058e 6B000000 		.4byte	0x6b
 1762 0592 1D       		.uleb128 0x1d
 1763 0593 6B000000 		.4byte	0x6b
 1764 0597 00       		.byte	0
 1765 0598 1E       		.uleb128 0x1e
 1766 0599 70010000 		.4byte	.LASF67
 1767 059d 03       		.byte	0x3
 1768 059e BB       		.byte	0xbb
 1769 059f E5000000 		.4byte	0xe5
 1770 05a3 B2050000 		.4byte	0x5b2
 1771 05a7 1D       		.uleb128 0x1d
 1772 05a8 6B000000 		.4byte	0x6b
 1773 05ac 1D       		.uleb128 0x1d
 1774 05ad E5000000 		.4byte	0xe5
 1775 05b1 00       		.byte	0
 1776 05b2 1C       		.uleb128 0x1c
 1777 05b3 D6000000 		.4byte	.LASF62
 1778 05b7 03       		.byte	0x3
 1779 05b8 D8       		.byte	0xd8
 1780 05b9 C3050000 		.4byte	0x5c3
 1781 05bd 1D       		.uleb128 0x1d
 1782 05be 77000000 		.4byte	0x77
 1783 05c2 00       		.byte	0
 1784 05c3 1F       		.uleb128 0x1f
 1785 05c4 E4020000 		.4byte	.LASF68
 1786 05c8 03       		.byte	0x3
 1787 05c9 E5       		.byte	0xe5
 1788 05ca 1D       		.uleb128 0x1d
 1789 05cb 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 48


 1790 05cf 00       		.byte	0
 1791 05d0 00       		.byte	0
 1792              		.section	.debug_abbrev,"",%progbits
 1793              	.Ldebug_abbrev0:
 1794 0000 01       		.uleb128 0x1
 1795 0001 11       		.uleb128 0x11
 1796 0002 01       		.byte	0x1
 1797 0003 25       		.uleb128 0x25
 1798 0004 0E       		.uleb128 0xe
 1799 0005 13       		.uleb128 0x13
 1800 0006 0B       		.uleb128 0xb
 1801 0007 03       		.uleb128 0x3
 1802 0008 0E       		.uleb128 0xe
 1803 0009 1B       		.uleb128 0x1b
 1804 000a 0E       		.uleb128 0xe
 1805 000b 55       		.uleb128 0x55
 1806 000c 17       		.uleb128 0x17
 1807 000d 11       		.uleb128 0x11
 1808 000e 01       		.uleb128 0x1
 1809 000f 10       		.uleb128 0x10
 1810 0010 17       		.uleb128 0x17
 1811 0011 00       		.byte	0
 1812 0012 00       		.byte	0
 1813 0013 02       		.uleb128 0x2
 1814 0014 24       		.uleb128 0x24
 1815 0015 00       		.byte	0
 1816 0016 0B       		.uleb128 0xb
 1817 0017 0B       		.uleb128 0xb
 1818 0018 3E       		.uleb128 0x3e
 1819 0019 0B       		.uleb128 0xb
 1820 001a 03       		.uleb128 0x3
 1821 001b 0E       		.uleb128 0xe
 1822 001c 00       		.byte	0
 1823 001d 00       		.byte	0
 1824 001e 03       		.uleb128 0x3
 1825 001f 24       		.uleb128 0x24
 1826 0020 00       		.byte	0
 1827 0021 0B       		.uleb128 0xb
 1828 0022 0B       		.uleb128 0xb
 1829 0023 3E       		.uleb128 0x3e
 1830 0024 0B       		.uleb128 0xb
 1831 0025 03       		.uleb128 0x3
 1832 0026 08       		.uleb128 0x8
 1833 0027 00       		.byte	0
 1834 0028 00       		.byte	0
 1835 0029 04       		.uleb128 0x4
 1836 002a 16       		.uleb128 0x16
 1837 002b 00       		.byte	0
 1838 002c 03       		.uleb128 0x3
 1839 002d 0E       		.uleb128 0xe
 1840 002e 3A       		.uleb128 0x3a
 1841 002f 0B       		.uleb128 0xb
 1842 0030 3B       		.uleb128 0x3b
 1843 0031 05       		.uleb128 0x5
 1844 0032 49       		.uleb128 0x49
 1845 0033 13       		.uleb128 0x13
 1846 0034 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 49


 1847 0035 00       		.byte	0
 1848 0036 05       		.uleb128 0x5
 1849 0037 35       		.uleb128 0x35
 1850 0038 00       		.byte	0
 1851 0039 49       		.uleb128 0x49
 1852 003a 13       		.uleb128 0x13
 1853 003b 00       		.byte	0
 1854 003c 00       		.byte	0
 1855 003d 06       		.uleb128 0x6
 1856 003e 0F       		.uleb128 0xf
 1857 003f 00       		.byte	0
 1858 0040 0B       		.uleb128 0xb
 1859 0041 0B       		.uleb128 0xb
 1860 0042 49       		.uleb128 0x49
 1861 0043 13       		.uleb128 0x13
 1862 0044 00       		.byte	0
 1863 0045 00       		.byte	0
 1864 0046 07       		.uleb128 0x7
 1865 0047 15       		.uleb128 0x15
 1866 0048 00       		.byte	0
 1867 0049 27       		.uleb128 0x27
 1868 004a 19       		.uleb128 0x19
 1869 004b 00       		.byte	0
 1870 004c 00       		.byte	0
 1871 004d 08       		.uleb128 0x8
 1872 004e 2E       		.uleb128 0x2e
 1873 004f 01       		.byte	0x1
 1874 0050 3F       		.uleb128 0x3f
 1875 0051 19       		.uleb128 0x19
 1876 0052 03       		.uleb128 0x3
 1877 0053 0E       		.uleb128 0xe
 1878 0054 3A       		.uleb128 0x3a
 1879 0055 0B       		.uleb128 0xb
 1880 0056 3B       		.uleb128 0x3b
 1881 0057 0B       		.uleb128 0xb
 1882 0058 27       		.uleb128 0x27
 1883 0059 19       		.uleb128 0x19
 1884 005a 11       		.uleb128 0x11
 1885 005b 01       		.uleb128 0x1
 1886 005c 12       		.uleb128 0x12
 1887 005d 06       		.uleb128 0x6
 1888 005e 40       		.uleb128 0x40
 1889 005f 18       		.uleb128 0x18
 1890 0060 9642     		.uleb128 0x2116
 1891 0062 19       		.uleb128 0x19
 1892 0063 01       		.uleb128 0x1
 1893 0064 13       		.uleb128 0x13
 1894 0065 00       		.byte	0
 1895 0066 00       		.byte	0
 1896 0067 09       		.uleb128 0x9
 1897 0068 34       		.uleb128 0x34
 1898 0069 00       		.byte	0
 1899 006a 03       		.uleb128 0x3
 1900 006b 0E       		.uleb128 0xe
 1901 006c 3A       		.uleb128 0x3a
 1902 006d 0B       		.uleb128 0xb
 1903 006e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 50


 1904 006f 0B       		.uleb128 0xb
 1905 0070 49       		.uleb128 0x49
 1906 0071 13       		.uleb128 0x13
 1907 0072 02       		.uleb128 0x2
 1908 0073 17       		.uleb128 0x17
 1909 0074 00       		.byte	0
 1910 0075 00       		.byte	0
 1911 0076 0A       		.uleb128 0xa
 1912 0077 34       		.uleb128 0x34
 1913 0078 00       		.byte	0
 1914 0079 03       		.uleb128 0x3
 1915 007a 0E       		.uleb128 0xe
 1916 007b 3A       		.uleb128 0x3a
 1917 007c 0B       		.uleb128 0xb
 1918 007d 3B       		.uleb128 0x3b
 1919 007e 0B       		.uleb128 0xb
 1920 007f 49       		.uleb128 0x49
 1921 0080 13       		.uleb128 0x13
 1922 0081 02       		.uleb128 0x2
 1923 0082 18       		.uleb128 0x18
 1924 0083 00       		.byte	0
 1925 0084 00       		.byte	0
 1926 0085 0B       		.uleb128 0xb
 1927 0086 898201   		.uleb128 0x4109
 1928 0089 01       		.byte	0x1
 1929 008a 11       		.uleb128 0x11
 1930 008b 01       		.uleb128 0x1
 1931 008c 31       		.uleb128 0x31
 1932 008d 13       		.uleb128 0x13
 1933 008e 01       		.uleb128 0x1
 1934 008f 13       		.uleb128 0x13
 1935 0090 00       		.byte	0
 1936 0091 00       		.byte	0
 1937 0092 0C       		.uleb128 0xc
 1938 0093 8A8201   		.uleb128 0x410a
 1939 0096 00       		.byte	0
 1940 0097 02       		.uleb128 0x2
 1941 0098 18       		.uleb128 0x18
 1942 0099 9142     		.uleb128 0x2111
 1943 009b 18       		.uleb128 0x18
 1944 009c 00       		.byte	0
 1945 009d 00       		.byte	0
 1946 009e 0D       		.uleb128 0xd
 1947 009f 898201   		.uleb128 0x4109
 1948 00a2 01       		.byte	0x1
 1949 00a3 11       		.uleb128 0x11
 1950 00a4 01       		.uleb128 0x1
 1951 00a5 31       		.uleb128 0x31
 1952 00a6 13       		.uleb128 0x13
 1953 00a7 00       		.byte	0
 1954 00a8 00       		.byte	0
 1955 00a9 0E       		.uleb128 0xe
 1956 00aa 01       		.uleb128 0x1
 1957 00ab 01       		.byte	0x1
 1958 00ac 49       		.uleb128 0x49
 1959 00ad 13       		.uleb128 0x13
 1960 00ae 01       		.uleb128 0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 51


 1961 00af 13       		.uleb128 0x13
 1962 00b0 00       		.byte	0
 1963 00b1 00       		.byte	0
 1964 00b2 0F       		.uleb128 0xf
 1965 00b3 21       		.uleb128 0x21
 1966 00b4 00       		.byte	0
 1967 00b5 49       		.uleb128 0x49
 1968 00b6 13       		.uleb128 0x13
 1969 00b7 2F       		.uleb128 0x2f
 1970 00b8 0B       		.uleb128 0xb
 1971 00b9 00       		.byte	0
 1972 00ba 00       		.byte	0
 1973 00bb 10       		.uleb128 0x10
 1974 00bc 26       		.uleb128 0x26
 1975 00bd 00       		.byte	0
 1976 00be 49       		.uleb128 0x49
 1977 00bf 13       		.uleb128 0x13
 1978 00c0 00       		.byte	0
 1979 00c1 00       		.byte	0
 1980 00c2 11       		.uleb128 0x11
 1981 00c3 2E       		.uleb128 0x2e
 1982 00c4 01       		.byte	0x1
 1983 00c5 3F       		.uleb128 0x3f
 1984 00c6 19       		.uleb128 0x19
 1985 00c7 03       		.uleb128 0x3
 1986 00c8 0E       		.uleb128 0xe
 1987 00c9 3A       		.uleb128 0x3a
 1988 00ca 0B       		.uleb128 0xb
 1989 00cb 3B       		.uleb128 0x3b
 1990 00cc 05       		.uleb128 0x5
 1991 00cd 27       		.uleb128 0x27
 1992 00ce 19       		.uleb128 0x19
 1993 00cf 11       		.uleb128 0x11
 1994 00d0 01       		.uleb128 0x1
 1995 00d1 12       		.uleb128 0x12
 1996 00d2 06       		.uleb128 0x6
 1997 00d3 40       		.uleb128 0x40
 1998 00d4 18       		.uleb128 0x18
 1999 00d5 9742     		.uleb128 0x2117
 2000 00d7 19       		.uleb128 0x19
 2001 00d8 01       		.uleb128 0x1
 2002 00d9 13       		.uleb128 0x13
 2003 00da 00       		.byte	0
 2004 00db 00       		.byte	0
 2005 00dc 12       		.uleb128 0x12
 2006 00dd 2E       		.uleb128 0x2e
 2007 00de 01       		.byte	0x1
 2008 00df 3F       		.uleb128 0x3f
 2009 00e0 19       		.uleb128 0x19
 2010 00e1 03       		.uleb128 0x3
 2011 00e2 0E       		.uleb128 0xe
 2012 00e3 3A       		.uleb128 0x3a
 2013 00e4 0B       		.uleb128 0xb
 2014 00e5 3B       		.uleb128 0x3b
 2015 00e6 0B       		.uleb128 0xb
 2016 00e7 27       		.uleb128 0x27
 2017 00e8 19       		.uleb128 0x19
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 52


 2018 00e9 11       		.uleb128 0x11
 2019 00ea 01       		.uleb128 0x1
 2020 00eb 12       		.uleb128 0x12
 2021 00ec 06       		.uleb128 0x6
 2022 00ed 40       		.uleb128 0x40
 2023 00ee 18       		.uleb128 0x18
 2024 00ef 9742     		.uleb128 0x2117
 2025 00f1 19       		.uleb128 0x19
 2026 00f2 01       		.uleb128 0x1
 2027 00f3 13       		.uleb128 0x13
 2028 00f4 00       		.byte	0
 2029 00f5 00       		.byte	0
 2030 00f6 13       		.uleb128 0x13
 2031 00f7 898201   		.uleb128 0x4109
 2032 00fa 00       		.byte	0
 2033 00fb 11       		.uleb128 0x11
 2034 00fc 01       		.uleb128 0x1
 2035 00fd 31       		.uleb128 0x31
 2036 00fe 13       		.uleb128 0x13
 2037 00ff 00       		.byte	0
 2038 0100 00       		.byte	0
 2039 0101 14       		.uleb128 0x14
 2040 0102 2E       		.uleb128 0x2e
 2041 0103 00       		.byte	0
 2042 0104 3F       		.uleb128 0x3f
 2043 0105 19       		.uleb128 0x19
 2044 0106 03       		.uleb128 0x3
 2045 0107 0E       		.uleb128 0xe
 2046 0108 3A       		.uleb128 0x3a
 2047 0109 0B       		.uleb128 0xb
 2048 010a 3B       		.uleb128 0x3b
 2049 010b 05       		.uleb128 0x5
 2050 010c 27       		.uleb128 0x27
 2051 010d 19       		.uleb128 0x19
 2052 010e 11       		.uleb128 0x11
 2053 010f 01       		.uleb128 0x1
 2054 0110 12       		.uleb128 0x12
 2055 0111 06       		.uleb128 0x6
 2056 0112 40       		.uleb128 0x40
 2057 0113 18       		.uleb128 0x18
 2058 0114 9742     		.uleb128 0x2117
 2059 0116 19       		.uleb128 0x19
 2060 0117 00       		.byte	0
 2061 0118 00       		.byte	0
 2062 0119 15       		.uleb128 0x15
 2063 011a 2E       		.uleb128 0x2e
 2064 011b 01       		.byte	0x1
 2065 011c 3F       		.uleb128 0x3f
 2066 011d 19       		.uleb128 0x19
 2067 011e 03       		.uleb128 0x3
 2068 011f 0E       		.uleb128 0xe
 2069 0120 3A       		.uleb128 0x3a
 2070 0121 0B       		.uleb128 0xb
 2071 0122 3B       		.uleb128 0x3b
 2072 0123 05       		.uleb128 0x5
 2073 0124 27       		.uleb128 0x27
 2074 0125 19       		.uleb128 0x19
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 53


 2075 0126 49       		.uleb128 0x49
 2076 0127 13       		.uleb128 0x13
 2077 0128 11       		.uleb128 0x11
 2078 0129 01       		.uleb128 0x1
 2079 012a 12       		.uleb128 0x12
 2080 012b 06       		.uleb128 0x6
 2081 012c 40       		.uleb128 0x40
 2082 012d 18       		.uleb128 0x18
 2083 012e 9742     		.uleb128 0x2117
 2084 0130 19       		.uleb128 0x19
 2085 0131 01       		.uleb128 0x1
 2086 0132 13       		.uleb128 0x13
 2087 0133 00       		.byte	0
 2088 0134 00       		.byte	0
 2089 0135 16       		.uleb128 0x16
 2090 0136 05       		.uleb128 0x5
 2091 0137 00       		.byte	0
 2092 0138 03       		.uleb128 0x3
 2093 0139 0E       		.uleb128 0xe
 2094 013a 3A       		.uleb128 0x3a
 2095 013b 0B       		.uleb128 0xb
 2096 013c 3B       		.uleb128 0x3b
 2097 013d 05       		.uleb128 0x5
 2098 013e 49       		.uleb128 0x49
 2099 013f 13       		.uleb128 0x13
 2100 0140 02       		.uleb128 0x2
 2101 0141 17       		.uleb128 0x17
 2102 0142 00       		.byte	0
 2103 0143 00       		.byte	0
 2104 0144 17       		.uleb128 0x17
 2105 0145 34       		.uleb128 0x34
 2106 0146 00       		.byte	0
 2107 0147 03       		.uleb128 0x3
 2108 0148 0E       		.uleb128 0xe
 2109 0149 3A       		.uleb128 0x3a
 2110 014a 0B       		.uleb128 0xb
 2111 014b 3B       		.uleb128 0x3b
 2112 014c 05       		.uleb128 0x5
 2113 014d 49       		.uleb128 0x49
 2114 014e 13       		.uleb128 0x13
 2115 014f 02       		.uleb128 0x2
 2116 0150 17       		.uleb128 0x17
 2117 0151 00       		.byte	0
 2118 0152 00       		.byte	0
 2119 0153 18       		.uleb128 0x18
 2120 0154 2E       		.uleb128 0x2e
 2121 0155 01       		.byte	0x1
 2122 0156 3F       		.uleb128 0x3f
 2123 0157 19       		.uleb128 0x19
 2124 0158 03       		.uleb128 0x3
 2125 0159 0E       		.uleb128 0xe
 2126 015a 3A       		.uleb128 0x3a
 2127 015b 0B       		.uleb128 0xb
 2128 015c 3B       		.uleb128 0x3b
 2129 015d 05       		.uleb128 0x5
 2130 015e 27       		.uleb128 0x27
 2131 015f 19       		.uleb128 0x19
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 54


 2132 0160 49       		.uleb128 0x49
 2133 0161 13       		.uleb128 0x13
 2134 0162 11       		.uleb128 0x11
 2135 0163 01       		.uleb128 0x1
 2136 0164 12       		.uleb128 0x12
 2137 0165 06       		.uleb128 0x6
 2138 0166 40       		.uleb128 0x40
 2139 0167 18       		.uleb128 0x18
 2140 0168 9642     		.uleb128 0x2116
 2141 016a 19       		.uleb128 0x19
 2142 016b 01       		.uleb128 0x1
 2143 016c 13       		.uleb128 0x13
 2144 016d 00       		.byte	0
 2145 016e 00       		.byte	0
 2146 016f 19       		.uleb128 0x19
 2147 0170 34       		.uleb128 0x34
 2148 0171 00       		.byte	0
 2149 0172 03       		.uleb128 0x3
 2150 0173 0E       		.uleb128 0xe
 2151 0174 3A       		.uleb128 0x3a
 2152 0175 0B       		.uleb128 0xb
 2153 0176 3B       		.uleb128 0x3b
 2154 0177 05       		.uleb128 0x5
 2155 0178 49       		.uleb128 0x49
 2156 0179 13       		.uleb128 0x13
 2157 017a 02       		.uleb128 0x2
 2158 017b 18       		.uleb128 0x18
 2159 017c 00       		.byte	0
 2160 017d 00       		.byte	0
 2161 017e 1A       		.uleb128 0x1a
 2162 017f 34       		.uleb128 0x34
 2163 0180 00       		.byte	0
 2164 0181 03       		.uleb128 0x3
 2165 0182 0E       		.uleb128 0xe
 2166 0183 3A       		.uleb128 0x3a
 2167 0184 0B       		.uleb128 0xb
 2168 0185 3B       		.uleb128 0x3b
 2169 0186 05       		.uleb128 0x5
 2170 0187 49       		.uleb128 0x49
 2171 0188 13       		.uleb128 0x13
 2172 0189 00       		.byte	0
 2173 018a 00       		.byte	0
 2174 018b 1B       		.uleb128 0x1b
 2175 018c 34       		.uleb128 0x34
 2176 018d 00       		.byte	0
 2177 018e 03       		.uleb128 0x3
 2178 018f 0E       		.uleb128 0xe
 2179 0190 3A       		.uleb128 0x3a
 2180 0191 0B       		.uleb128 0xb
 2181 0192 3B       		.uleb128 0x3b
 2182 0193 0B       		.uleb128 0xb
 2183 0194 49       		.uleb128 0x49
 2184 0195 13       		.uleb128 0x13
 2185 0196 3F       		.uleb128 0x3f
 2186 0197 19       		.uleb128 0x19
 2187 0198 02       		.uleb128 0x2
 2188 0199 18       		.uleb128 0x18
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 55


 2189 019a 00       		.byte	0
 2190 019b 00       		.byte	0
 2191 019c 1C       		.uleb128 0x1c
 2192 019d 2E       		.uleb128 0x2e
 2193 019e 01       		.byte	0x1
 2194 019f 3F       		.uleb128 0x3f
 2195 01a0 19       		.uleb128 0x19
 2196 01a1 03       		.uleb128 0x3
 2197 01a2 0E       		.uleb128 0xe
 2198 01a3 3A       		.uleb128 0x3a
 2199 01a4 0B       		.uleb128 0xb
 2200 01a5 3B       		.uleb128 0x3b
 2201 01a6 0B       		.uleb128 0xb
 2202 01a7 27       		.uleb128 0x27
 2203 01a8 19       		.uleb128 0x19
 2204 01a9 3C       		.uleb128 0x3c
 2205 01aa 19       		.uleb128 0x19
 2206 01ab 01       		.uleb128 0x1
 2207 01ac 13       		.uleb128 0x13
 2208 01ad 00       		.byte	0
 2209 01ae 00       		.byte	0
 2210 01af 1D       		.uleb128 0x1d
 2211 01b0 05       		.uleb128 0x5
 2212 01b1 00       		.byte	0
 2213 01b2 49       		.uleb128 0x49
 2214 01b3 13       		.uleb128 0x13
 2215 01b4 00       		.byte	0
 2216 01b5 00       		.byte	0
 2217 01b6 1E       		.uleb128 0x1e
 2218 01b7 2E       		.uleb128 0x2e
 2219 01b8 01       		.byte	0x1
 2220 01b9 3F       		.uleb128 0x3f
 2221 01ba 19       		.uleb128 0x19
 2222 01bb 03       		.uleb128 0x3
 2223 01bc 0E       		.uleb128 0xe
 2224 01bd 3A       		.uleb128 0x3a
 2225 01be 0B       		.uleb128 0xb
 2226 01bf 3B       		.uleb128 0x3b
 2227 01c0 0B       		.uleb128 0xb
 2228 01c1 27       		.uleb128 0x27
 2229 01c2 19       		.uleb128 0x19
 2230 01c3 49       		.uleb128 0x49
 2231 01c4 13       		.uleb128 0x13
 2232 01c5 3C       		.uleb128 0x3c
 2233 01c6 19       		.uleb128 0x19
 2234 01c7 01       		.uleb128 0x1
 2235 01c8 13       		.uleb128 0x13
 2236 01c9 00       		.byte	0
 2237 01ca 00       		.byte	0
 2238 01cb 1F       		.uleb128 0x1f
 2239 01cc 2E       		.uleb128 0x2e
 2240 01cd 01       		.byte	0x1
 2241 01ce 3F       		.uleb128 0x3f
 2242 01cf 19       		.uleb128 0x19
 2243 01d0 03       		.uleb128 0x3
 2244 01d1 0E       		.uleb128 0xe
 2245 01d2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 56


 2246 01d3 0B       		.uleb128 0xb
 2247 01d4 3B       		.uleb128 0x3b
 2248 01d5 0B       		.uleb128 0xb
 2249 01d6 27       		.uleb128 0x27
 2250 01d7 19       		.uleb128 0x19
 2251 01d8 3C       		.uleb128 0x3c
 2252 01d9 19       		.uleb128 0x19
 2253 01da 00       		.byte	0
 2254 01db 00       		.byte	0
 2255 01dc 00       		.byte	0
 2256              		.section	.debug_loc,"",%progbits
 2257              	.Ldebug_loc0:
 2258              	.LLST0:
 2259 0000 6A000000 		.4byte	.LVL5
 2260 0004 6E000000 		.4byte	.LVL6
 2261 0008 0200     		.2byte	0x2
 2262 000a 30       		.byte	0x30
 2263 000b 9F       		.byte	0x9f
 2264 000c 6E000000 		.4byte	.LVL6
 2265 0010 3C010000 		.4byte	.LVL27
 2266 0014 0100     		.2byte	0x1
 2267 0016 54       		.byte	0x54
 2268 0017 00000000 		.4byte	0
 2269 001b 00000000 		.4byte	0
 2270              	.LLST1:
 2271 001f 5E000000 		.4byte	.LVL2
 2272 0023 64000000 		.4byte	.LVL3
 2273 0027 0700     		.2byte	0x7
 2274 0029 71       		.byte	0x71
 2275 002a 00       		.sleb128 0
 2276 002b 40       		.byte	0x40
 2277 002c 49       		.byte	0x49
 2278 002d 24       		.byte	0x24
 2279 002e 21       		.byte	0x21
 2280 002f 9F       		.byte	0x9f
 2281 0030 68000000 		.4byte	.LVL4
 2282 0034 6E000000 		.4byte	.LVL6
 2283 0038 0100     		.2byte	0x1
 2284 003a 53       		.byte	0x53
 2285 003b 7A000000 		.4byte	.LVL7
 2286 003f 92000000 		.4byte	.LVL9
 2287 0043 0100     		.2byte	0x1
 2288 0045 53       		.byte	0x53
 2289 0046 92000000 		.4byte	.LVL9
 2290 004a 98000000 		.4byte	.LVL10
 2291 004e 0200     		.2byte	0x2
 2292 0050 72       		.byte	0x72
 2293 0051 00       		.sleb128 0
 2294 0052 98000000 		.4byte	.LVL10
 2295 0056 A4000000 		.4byte	.LVL11
 2296 005a 0700     		.2byte	0x7
 2297 005c 74       		.byte	0x74
 2298 005d 00       		.sleb128 0
 2299 005e 32       		.byte	0x32
 2300 005f 24       		.byte	0x24
 2301 0060 7C       		.byte	0x7c
 2302 0061 00       		.sleb128 0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 57


 2303 0062 22       		.byte	0x22
 2304 0063 A4000000 		.4byte	.LVL11
 2305 0067 A8000000 		.4byte	.LVL12
 2306 006b 1E00     		.2byte	0x1e
 2307 006d 74       		.byte	0x74
 2308 006e 00       		.sleb128 0
 2309 006f 32       		.byte	0x32
 2310 0070 24       		.byte	0x24
 2311 0071 03       		.byte	0x3
 2312 0072 00000000 		.4byte	.LANCHOR0
 2313 0076 22       		.byte	0x22
 2314 0077 06       		.byte	0x6
 2315 0078 0A       		.byte	0xa
 2316 0079 0037     		.2byte	0x3700
 2317 007b 1A       		.byte	0x1a
 2318 007c 74       		.byte	0x74
 2319 007d 00       		.sleb128 0
 2320 007e 03       		.byte	0x3
 2321 007f 14000000 		.4byte	.LANCHOR0+20
 2322 0083 22       		.byte	0x22
 2323 0084 94       		.byte	0x94
 2324 0085 01       		.byte	0x1
 2325 0086 08       		.byte	0x8
 2326 0087 FF       		.byte	0xff
 2327 0088 1A       		.byte	0x1a
 2328 0089 21       		.byte	0x21
 2329 008a 9F       		.byte	0x9f
 2330 008b A8000000 		.4byte	.LVL12
 2331 008f B4000000 		.4byte	.LVL13
 2332 0093 1A00     		.2byte	0x1a
 2333 0095 74       		.byte	0x74
 2334 0096 00       		.sleb128 0
 2335 0097 32       		.byte	0x32
 2336 0098 24       		.byte	0x24
 2337 0099 72       		.byte	0x72
 2338 009a 00       		.sleb128 0
 2339 009b 22       		.byte	0x22
 2340 009c 06       		.byte	0x6
 2341 009d 0A       		.byte	0xa
 2342 009e 0037     		.2byte	0x3700
 2343 00a0 1A       		.byte	0x1a
 2344 00a1 72       		.byte	0x72
 2345 00a2 00       		.sleb128 0
 2346 00a3 74       		.byte	0x74
 2347 00a4 00       		.sleb128 0
 2348 00a5 22       		.byte	0x22
 2349 00a6 23       		.byte	0x23
 2350 00a7 14       		.uleb128 0x14
 2351 00a8 94       		.byte	0x94
 2352 00a9 01       		.byte	0x1
 2353 00aa 08       		.byte	0x8
 2354 00ab FF       		.byte	0xff
 2355 00ac 1A       		.byte	0x1a
 2356 00ad 21       		.byte	0x21
 2357 00ae 9F       		.byte	0x9f
 2358 00af B4000000 		.4byte	.LVL13
 2359 00b3 C2000000 		.4byte	.LVL14
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 58


 2360 00b7 1E00     		.2byte	0x1e
 2361 00b9 74       		.byte	0x74
 2362 00ba 00       		.sleb128 0
 2363 00bb 32       		.byte	0x32
 2364 00bc 24       		.byte	0x24
 2365 00bd 03       		.byte	0x3
 2366 00be 00000000 		.4byte	.LANCHOR0
 2367 00c2 22       		.byte	0x22
 2368 00c3 06       		.byte	0x6
 2369 00c4 0A       		.byte	0xa
 2370 00c5 0037     		.2byte	0x3700
 2371 00c7 1A       		.byte	0x1a
 2372 00c8 74       		.byte	0x74
 2373 00c9 00       		.sleb128 0
 2374 00ca 03       		.byte	0x3
 2375 00cb 14000000 		.4byte	.LANCHOR0+20
 2376 00cf 22       		.byte	0x22
 2377 00d0 94       		.byte	0x94
 2378 00d1 01       		.byte	0x1
 2379 00d2 08       		.byte	0x8
 2380 00d3 FF       		.byte	0xff
 2381 00d4 1A       		.byte	0x1a
 2382 00d5 21       		.byte	0x21
 2383 00d6 9F       		.byte	0x9f
 2384 00d7 C2000000 		.4byte	.LVL14
 2385 00db C8000000 		.4byte	.LVL15
 2386 00df 0100     		.2byte	0x1
 2387 00e1 53       		.byte	0x53
 2388 00e2 C8000000 		.4byte	.LVL15
 2389 00e6 D0000000 		.4byte	.LVL16
 2390 00ea 1500     		.2byte	0x15
 2391 00ec 71       		.byte	0x71
 2392 00ed 00       		.sleb128 0
 2393 00ee 0A       		.byte	0xa
 2394 00ef 0037     		.2byte	0x3700
 2395 00f1 1A       		.byte	0x1a
 2396 00f2 74       		.byte	0x74
 2397 00f3 00       		.sleb128 0
 2398 00f4 03       		.byte	0x3
 2399 00f5 14000000 		.4byte	.LANCHOR0+20
 2400 00f9 22       		.byte	0x22
 2401 00fa 94       		.byte	0x94
 2402 00fb 01       		.byte	0x1
 2403 00fc 08       		.byte	0x8
 2404 00fd FF       		.byte	0xff
 2405 00fe 1A       		.byte	0x1a
 2406 00ff 21       		.byte	0x21
 2407 0100 9F       		.byte	0x9f
 2408 0101 D0000000 		.4byte	.LVL16
 2409 0105 D8000000 		.4byte	.LVL17
 2410 0109 1400     		.2byte	0x14
 2411 010b 71       		.byte	0x71
 2412 010c 00       		.sleb128 0
 2413 010d 0A       		.byte	0xa
 2414 010e 0037     		.2byte	0x3700
 2415 0110 1A       		.byte	0x1a
 2416 0111 72       		.byte	0x72
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 59


 2417 0112 00       		.sleb128 0
 2418 0113 74       		.byte	0x74
 2419 0114 00       		.sleb128 0
 2420 0115 22       		.byte	0x22
 2421 0116 23       		.byte	0x23
 2422 0117 14       		.uleb128 0x14
 2423 0118 94       		.byte	0x94
 2424 0119 01       		.byte	0x1
 2425 011a 08       		.byte	0x8
 2426 011b FF       		.byte	0xff
 2427 011c 1A       		.byte	0x1a
 2428 011d 21       		.byte	0x21
 2429 011e 9F       		.byte	0x9f
 2430 011f D8000000 		.4byte	.LVL17
 2431 0123 DA000000 		.4byte	.LVL18
 2432 0127 1500     		.2byte	0x15
 2433 0129 71       		.byte	0x71
 2434 012a 00       		.sleb128 0
 2435 012b 0A       		.byte	0xa
 2436 012c 0037     		.2byte	0x3700
 2437 012e 1A       		.byte	0x1a
 2438 012f 74       		.byte	0x74
 2439 0130 00       		.sleb128 0
 2440 0131 03       		.byte	0x3
 2441 0132 14000000 		.4byte	.LANCHOR0+20
 2442 0136 22       		.byte	0x22
 2443 0137 94       		.byte	0x94
 2444 0138 01       		.byte	0x1
 2445 0139 08       		.byte	0x8
 2446 013a FF       		.byte	0xff
 2447 013b 1A       		.byte	0x1a
 2448 013c 21       		.byte	0x21
 2449 013d 9F       		.byte	0x9f
 2450 013e DA000000 		.4byte	.LVL18
 2451 0142 E4000000 		.4byte	.LVL19
 2452 0146 1E00     		.2byte	0x1e
 2453 0148 74       		.byte	0x74
 2454 0149 00       		.sleb128 0
 2455 014a 32       		.byte	0x32
 2456 014b 24       		.byte	0x24
 2457 014c 03       		.byte	0x3
 2458 014d 00000000 		.4byte	.LANCHOR0
 2459 0151 22       		.byte	0x22
 2460 0152 06       		.byte	0x6
 2461 0153 0A       		.byte	0xa
 2462 0154 0037     		.2byte	0x3700
 2463 0156 1A       		.byte	0x1a
 2464 0157 74       		.byte	0x74
 2465 0158 00       		.sleb128 0
 2466 0159 03       		.byte	0x3
 2467 015a 14000000 		.4byte	.LANCHOR0+20
 2468 015e 22       		.byte	0x22
 2469 015f 94       		.byte	0x94
 2470 0160 01       		.byte	0x1
 2471 0161 08       		.byte	0x8
 2472 0162 FF       		.byte	0xff
 2473 0163 1A       		.byte	0x1a
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 60


 2474 0164 21       		.byte	0x21
 2475 0165 9F       		.byte	0x9f
 2476 0166 E4000000 		.4byte	.LVL19
 2477 016a EC000000 		.4byte	.LVL20
 2478 016e 1A00     		.2byte	0x1a
 2479 0170 74       		.byte	0x74
 2480 0171 00       		.sleb128 0
 2481 0172 32       		.byte	0x32
 2482 0173 24       		.byte	0x24
 2483 0174 72       		.byte	0x72
 2484 0175 00       		.sleb128 0
 2485 0176 22       		.byte	0x22
 2486 0177 06       		.byte	0x6
 2487 0178 0A       		.byte	0xa
 2488 0179 0037     		.2byte	0x3700
 2489 017b 1A       		.byte	0x1a
 2490 017c 72       		.byte	0x72
 2491 017d 00       		.sleb128 0
 2492 017e 74       		.byte	0x74
 2493 017f 00       		.sleb128 0
 2494 0180 22       		.byte	0x22
 2495 0181 23       		.byte	0x23
 2496 0182 14       		.uleb128 0x14
 2497 0183 94       		.byte	0x94
 2498 0184 01       		.byte	0x1
 2499 0185 08       		.byte	0x8
 2500 0186 FF       		.byte	0xff
 2501 0187 1A       		.byte	0x1a
 2502 0188 21       		.byte	0x21
 2503 0189 9F       		.byte	0x9f
 2504 018a EC000000 		.4byte	.LVL20
 2505 018e F8000000 		.4byte	.LVL21
 2506 0192 1E00     		.2byte	0x1e
 2507 0194 74       		.byte	0x74
 2508 0195 00       		.sleb128 0
 2509 0196 32       		.byte	0x32
 2510 0197 24       		.byte	0x24
 2511 0198 03       		.byte	0x3
 2512 0199 00000000 		.4byte	.LANCHOR0
 2513 019d 22       		.byte	0x22
 2514 019e 06       		.byte	0x6
 2515 019f 0A       		.byte	0xa
 2516 01a0 0037     		.2byte	0x3700
 2517 01a2 1A       		.byte	0x1a
 2518 01a3 74       		.byte	0x74
 2519 01a4 00       		.sleb128 0
 2520 01a5 03       		.byte	0x3
 2521 01a6 14000000 		.4byte	.LANCHOR0+20
 2522 01aa 22       		.byte	0x22
 2523 01ab 94       		.byte	0x94
 2524 01ac 01       		.byte	0x1
 2525 01ad 08       		.byte	0x8
 2526 01ae FF       		.byte	0xff
 2527 01af 1A       		.byte	0x1a
 2528 01b0 21       		.byte	0x21
 2529 01b1 9F       		.byte	0x9f
 2530 01b2 F8000000 		.4byte	.LVL21
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 61


 2531 01b6 FE000000 		.4byte	.LVL22
 2532 01ba 1A00     		.2byte	0x1a
 2533 01bc 74       		.byte	0x74
 2534 01bd 00       		.sleb128 0
 2535 01be 32       		.byte	0x32
 2536 01bf 24       		.byte	0x24
 2537 01c0 72       		.byte	0x72
 2538 01c1 00       		.sleb128 0
 2539 01c2 22       		.byte	0x22
 2540 01c3 06       		.byte	0x6
 2541 01c4 0A       		.byte	0xa
 2542 01c5 0037     		.2byte	0x3700
 2543 01c7 1A       		.byte	0x1a
 2544 01c8 72       		.byte	0x72
 2545 01c9 00       		.sleb128 0
 2546 01ca 74       		.byte	0x74
 2547 01cb 00       		.sleb128 0
 2548 01cc 22       		.byte	0x22
 2549 01cd 23       		.byte	0x23
 2550 01ce 14       		.uleb128 0x14
 2551 01cf 94       		.byte	0x94
 2552 01d0 01       		.byte	0x1
 2553 01d1 08       		.byte	0x8
 2554 01d2 FF       		.byte	0xff
 2555 01d3 1A       		.byte	0x1a
 2556 01d4 21       		.byte	0x21
 2557 01d5 9F       		.byte	0x9f
 2558 01d6 FE000000 		.4byte	.LVL22
 2559 01da 38010000 		.4byte	.LVL26
 2560 01de 1E00     		.2byte	0x1e
 2561 01e0 74       		.byte	0x74
 2562 01e1 00       		.sleb128 0
 2563 01e2 32       		.byte	0x32
 2564 01e3 24       		.byte	0x24
 2565 01e4 03       		.byte	0x3
 2566 01e5 00000000 		.4byte	.LANCHOR0
 2567 01e9 22       		.byte	0x22
 2568 01ea 06       		.byte	0x6
 2569 01eb 0A       		.byte	0xa
 2570 01ec 0037     		.2byte	0x3700
 2571 01ee 1A       		.byte	0x1a
 2572 01ef 74       		.byte	0x74
 2573 01f0 00       		.sleb128 0
 2574 01f1 03       		.byte	0x3
 2575 01f2 14000000 		.4byte	.LANCHOR0+20
 2576 01f6 22       		.byte	0x22
 2577 01f7 94       		.byte	0x94
 2578 01f8 01       		.byte	0x1
 2579 01f9 08       		.byte	0x8
 2580 01fa FF       		.byte	0xff
 2581 01fb 1A       		.byte	0x1a
 2582 01fc 21       		.byte	0x21
 2583 01fd 9F       		.byte	0x9f
 2584 01fe 00000000 		.4byte	0
 2585 0202 00000000 		.4byte	0
 2586              	.LLST2:
 2587 0206 08010000 		.4byte	.LVL23
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 62


 2588 020a 22010000 		.4byte	.LVL24
 2589 020e 0100     		.2byte	0x1
 2590 0210 50       		.byte	0x50
 2591 0211 00000000 		.4byte	0
 2592 0215 00000000 		.4byte	0
 2593              	.LLST3:
 2594 0219 00000000 		.4byte	.LVL31
 2595 021d 06000000 		.4byte	.LVL33
 2596 0221 0100     		.2byte	0x1
 2597 0223 50       		.byte	0x50
 2598 0224 06000000 		.4byte	.LVL33
 2599 0228 20000000 		.4byte	.LVL35
 2600 022c 0100     		.2byte	0x1
 2601 022e 51       		.byte	0x51
 2602 022f 20000000 		.4byte	.LVL35
 2603 0233 22000000 		.4byte	.LVL36
 2604 0237 0100     		.2byte	0x1
 2605 0239 50       		.byte	0x50
 2606 023a 22000000 		.4byte	.LVL36
 2607 023e 4C000000 		.4byte	.LFE8
 2608 0242 0100     		.2byte	0x1
 2609 0244 51       		.byte	0x51
 2610 0245 00000000 		.4byte	0
 2611 0249 00000000 		.4byte	0
 2612              	.LLST4:
 2613 024d 02000000 		.4byte	.LVL32
 2614 0251 06000000 		.4byte	.LVL33
 2615 0255 0200     		.2byte	0x2
 2616 0257 30       		.byte	0x30
 2617 0258 9F       		.byte	0x9f
 2618 0259 0E000000 		.4byte	.LVL34
 2619 025d 20000000 		.4byte	.LVL35
 2620 0261 0100     		.2byte	0x1
 2621 0263 50       		.byte	0x50
 2622 0264 20000000 		.4byte	.LVL35
 2623 0268 22000000 		.4byte	.LVL36
 2624 026c 0200     		.2byte	0x2
 2625 026e 30       		.byte	0x30
 2626 026f 9F       		.byte	0x9f
 2627 0270 22000000 		.4byte	.LVL36
 2628 0274 4C000000 		.4byte	.LFE8
 2629 0278 0100     		.2byte	0x1
 2630 027a 50       		.byte	0x50
 2631 027b 00000000 		.4byte	0
 2632 027f 00000000 		.4byte	0
 2633              	.LLST5:
 2634 0283 00000000 		.4byte	.LVL38
 2635 0287 0A000000 		.4byte	.LVL39
 2636 028b 0100     		.2byte	0x1
 2637 028d 50       		.byte	0x50
 2638 028e 0A000000 		.4byte	.LVL39
 2639 0292 14000000 		.4byte	.LVL41
 2640 0296 0100     		.2byte	0x1
 2641 0298 54       		.byte	0x54
 2642 0299 14000000 		.4byte	.LVL41
 2643 029d 22000000 		.4byte	.LVL43
 2644 02a1 0400     		.2byte	0x4
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 63


 2645 02a3 F3       		.byte	0xf3
 2646 02a4 01       		.uleb128 0x1
 2647 02a5 50       		.byte	0x50
 2648 02a6 9F       		.byte	0x9f
 2649 02a7 22000000 		.4byte	.LVL43
 2650 02ab 2A000000 		.4byte	.LVL44
 2651 02af 0100     		.2byte	0x1
 2652 02b1 54       		.byte	0x54
 2653 02b2 2A000000 		.4byte	.LVL44
 2654 02b6 38000000 		.4byte	.LFE9
 2655 02ba 0400     		.2byte	0x4
 2656 02bc F3       		.byte	0xf3
 2657 02bd 01       		.uleb128 0x1
 2658 02be 50       		.byte	0x50
 2659 02bf 9F       		.byte	0x9f
 2660 02c0 00000000 		.4byte	0
 2661 02c4 00000000 		.4byte	0
 2662              	.LLST6:
 2663 02c8 20000000 		.4byte	.LVL42
 2664 02cc 22000000 		.4byte	.LVL43
 2665 02d0 0100     		.2byte	0x1
 2666 02d2 50       		.byte	0x50
 2667 02d3 2A000000 		.4byte	.LVL44
 2668 02d7 2C000000 		.4byte	.LVL45
 2669 02db 0100     		.2byte	0x1
 2670 02dd 50       		.byte	0x50
 2671 02de 00000000 		.4byte	0
 2672 02e2 00000000 		.4byte	0
 2673              	.LLST7:
 2674 02e6 00000000 		.4byte	.LVL46
 2675 02ea 04000000 		.4byte	.LVL47
 2676 02ee 0100     		.2byte	0x1
 2677 02f0 50       		.byte	0x50
 2678 02f1 04000000 		.4byte	.LVL47
 2679 02f5 10000000 		.4byte	.LFE10
 2680 02f9 0400     		.2byte	0x4
 2681 02fb F3       		.byte	0xf3
 2682 02fc 01       		.uleb128 0x1
 2683 02fd 50       		.byte	0x50
 2684 02fe 9F       		.byte	0x9f
 2685 02ff 00000000 		.4byte	0
 2686 0303 00000000 		.4byte	0
 2687              	.LLST8:
 2688 0307 00000000 		.4byte	.LVL48
 2689 030b 0E000000 		.4byte	.LVL49
 2690 030f 0100     		.2byte	0x1
 2691 0311 50       		.byte	0x50
 2692 0312 0E000000 		.4byte	.LVL49
 2693 0316 1C000000 		.4byte	.LFE12
 2694 031a 0400     		.2byte	0x4
 2695 031c F3       		.byte	0xf3
 2696 031d 01       		.uleb128 0x1
 2697 031e 50       		.byte	0x50
 2698 031f 9F       		.byte	0x9f
 2699 0320 00000000 		.4byte	0
 2700 0324 00000000 		.4byte	0
 2701              	.LLST9:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 64


 2702 0328 00000000 		.4byte	.LVL50
 2703 032c 0E000000 		.4byte	.LVL51
 2704 0330 0100     		.2byte	0x1
 2705 0332 50       		.byte	0x50
 2706 0333 0E000000 		.4byte	.LVL51
 2707 0337 18000000 		.4byte	.LFE13
 2708 033b 0400     		.2byte	0x4
 2709 033d F3       		.byte	0xf3
 2710 033e 01       		.uleb128 0x1
 2711 033f 50       		.byte	0x50
 2712 0340 9F       		.byte	0x9f
 2713 0341 00000000 		.4byte	0
 2714 0345 00000000 		.4byte	0
 2715              	.LLST10:
 2716 0349 00000000 		.4byte	.LVL52
 2717 034d 04000000 		.4byte	.LVL53
 2718 0351 0100     		.2byte	0x1
 2719 0353 50       		.byte	0x50
 2720 0354 04000000 		.4byte	.LVL53
 2721 0358 10000000 		.4byte	.LFE14
 2722 035c 0400     		.2byte	0x4
 2723 035e F3       		.byte	0xf3
 2724 035f 01       		.uleb128 0x1
 2725 0360 50       		.byte	0x50
 2726 0361 9F       		.byte	0x9f
 2727 0362 00000000 		.4byte	0
 2728 0366 00000000 		.4byte	0
 2729              	.LLST11:
 2730 036a 00000000 		.4byte	.LVL54
 2731 036e 04000000 		.4byte	.LVL55
 2732 0372 0100     		.2byte	0x1
 2733 0374 50       		.byte	0x50
 2734 0375 04000000 		.4byte	.LVL55
 2735 0379 10000000 		.4byte	.LFE15
 2736 037d 0400     		.2byte	0x4
 2737 037f F3       		.byte	0xf3
 2738 0380 01       		.uleb128 0x1
 2739 0381 50       		.byte	0x50
 2740 0382 9F       		.byte	0x9f
 2741 0383 00000000 		.4byte	0
 2742 0387 00000000 		.4byte	0
 2743              	.LLST12:
 2744 038b 00000000 		.4byte	.LVL56
 2745 038f 0C000000 		.4byte	.LVL57
 2746 0393 0100     		.2byte	0x1
 2747 0395 50       		.byte	0x50
 2748 0396 0C000000 		.4byte	.LVL57
 2749 039a 12000000 		.4byte	.LVL59
 2750 039e 0100     		.2byte	0x1
 2751 03a0 54       		.byte	0x54
 2752 03a1 12000000 		.4byte	.LVL59
 2753 03a5 1C000000 		.4byte	.LFE16
 2754 03a9 0400     		.2byte	0x4
 2755 03ab F3       		.byte	0xf3
 2756 03ac 01       		.uleb128 0x1
 2757 03ad 50       		.byte	0x50
 2758 03ae 9F       		.byte	0x9f
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 65


 2759 03af 00000000 		.4byte	0
 2760 03b3 00000000 		.4byte	0
 2761              	.LLST13:
 2762 03b7 00000000 		.4byte	.LVL56
 2763 03bb 0F000000 		.4byte	.LVL58-1
 2764 03bf 0100     		.2byte	0x1
 2765 03c1 51       		.byte	0x51
 2766 03c2 0F000000 		.4byte	.LVL58-1
 2767 03c6 1C000000 		.4byte	.LFE16
 2768 03ca 0400     		.2byte	0x4
 2769 03cc F3       		.byte	0xf3
 2770 03cd 01       		.uleb128 0x1
 2771 03ce 51       		.byte	0x51
 2772 03cf 9F       		.byte	0x9f
 2773 03d0 00000000 		.4byte	0
 2774 03d4 00000000 		.4byte	0
 2775              	.LLST14:
 2776 03d8 00000000 		.4byte	.LVL60
 2777 03dc 0C000000 		.4byte	.LVL61
 2778 03e0 0100     		.2byte	0x1
 2779 03e2 50       		.byte	0x50
 2780 03e3 0C000000 		.4byte	.LVL61
 2781 03e7 12000000 		.4byte	.LVL63
 2782 03eb 0100     		.2byte	0x1
 2783 03ed 54       		.byte	0x54
 2784 03ee 12000000 		.4byte	.LVL63
 2785 03f2 1C000000 		.4byte	.LFE17
 2786 03f6 0400     		.2byte	0x4
 2787 03f8 F3       		.byte	0xf3
 2788 03f9 01       		.uleb128 0x1
 2789 03fa 50       		.byte	0x50
 2790 03fb 9F       		.byte	0x9f
 2791 03fc 00000000 		.4byte	0
 2792 0400 00000000 		.4byte	0
 2793              	.LLST15:
 2794 0404 00000000 		.4byte	.LVL60
 2795 0408 0F000000 		.4byte	.LVL62-1
 2796 040c 0100     		.2byte	0x1
 2797 040e 51       		.byte	0x51
 2798 040f 0F000000 		.4byte	.LVL62-1
 2799 0413 16000000 		.4byte	.LVL64
 2800 0417 0100     		.2byte	0x1
 2801 0419 55       		.byte	0x55
 2802 041a 16000000 		.4byte	.LVL64
 2803 041e 1C000000 		.4byte	.LFE17
 2804 0422 0800     		.2byte	0x8
 2805 0424 F3       		.byte	0xf3
 2806 0425 01       		.uleb128 0x1
 2807 0426 50       		.byte	0x50
 2808 0427 32       		.byte	0x32
 2809 0428 24       		.byte	0x24
 2810 0429 73       		.byte	0x73
 2811 042a 00       		.sleb128 0
 2812 042b 22       		.byte	0x22
 2813 042c 00000000 		.4byte	0
 2814 0430 00000000 		.4byte	0
 2815              	.LLST16:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 66


 2816 0434 00000000 		.4byte	.LVL65
 2817 0438 0C000000 		.4byte	.LVL66
 2818 043c 0100     		.2byte	0x1
 2819 043e 50       		.byte	0x50
 2820 043f 0C000000 		.4byte	.LVL66
 2821 0443 44000000 		.4byte	.LVL72
 2822 0447 0100     		.2byte	0x1
 2823 0449 54       		.byte	0x54
 2824 044a 44000000 		.4byte	.LVL72
 2825 044e 5C000000 		.4byte	.LFE18
 2826 0452 0400     		.2byte	0x4
 2827 0454 F3       		.byte	0xf3
 2828 0455 01       		.uleb128 0x1
 2829 0456 50       		.byte	0x50
 2830 0457 9F       		.byte	0x9f
 2831 0458 00000000 		.4byte	0
 2832 045c 00000000 		.4byte	0
 2833              	.LLST17:
 2834 0460 00000000 		.4byte	.LVL65
 2835 0464 0F000000 		.4byte	.LVL67-1
 2836 0468 0100     		.2byte	0x1
 2837 046a 51       		.byte	0x51
 2838 046b 0F000000 		.4byte	.LVL67-1
 2839 046f 1A000000 		.4byte	.LVL68
 2840 0473 0400     		.2byte	0x4
 2841 0475 F3       		.byte	0xf3
 2842 0476 01       		.uleb128 0x1
 2843 0477 51       		.byte	0x51
 2844 0478 9F       		.byte	0x9f
 2845 0479 1A000000 		.4byte	.LVL68
 2846 047d 28000000 		.4byte	.LVL69
 2847 0481 0100     		.2byte	0x1
 2848 0483 51       		.byte	0x51
 2849 0484 32000000 		.4byte	.LVL70
 2850 0488 36000000 		.4byte	.LVL71
 2851 048c 0100     		.2byte	0x1
 2852 048e 51       		.byte	0x51
 2853 048f 00000000 		.4byte	0
 2854 0493 00000000 		.4byte	0
 2855              	.LLST18:
 2856 0497 00000000 		.4byte	.LVL74
 2857 049b 0C000000 		.4byte	.LVL75
 2858 049f 0100     		.2byte	0x1
 2859 04a1 50       		.byte	0x50
 2860 04a2 0C000000 		.4byte	.LVL75
 2861 04a6 26000000 		.4byte	.LVL79
 2862 04aa 0100     		.2byte	0x1
 2863 04ac 55       		.byte	0x55
 2864 04ad 26000000 		.4byte	.LVL79
 2865 04b1 40000000 		.4byte	.LFE19
 2866 04b5 0400     		.2byte	0x4
 2867 04b7 F3       		.byte	0xf3
 2868 04b8 01       		.uleb128 0x1
 2869 04b9 50       		.byte	0x50
 2870 04ba 9F       		.byte	0x9f
 2871 04bb 00000000 		.4byte	0
 2872 04bf 00000000 		.4byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 67


 2873              	.LLST19:
 2874 04c3 00000000 		.4byte	.LVL74
 2875 04c7 0F000000 		.4byte	.LVL76-1
 2876 04cb 0100     		.2byte	0x1
 2877 04cd 51       		.byte	0x51
 2878 04ce 0F000000 		.4byte	.LVL76-1
 2879 04d2 1A000000 		.4byte	.LVL77
 2880 04d6 0400     		.2byte	0x4
 2881 04d8 F3       		.byte	0xf3
 2882 04d9 01       		.uleb128 0x1
 2883 04da 51       		.byte	0x51
 2884 04db 9F       		.byte	0x9f
 2885 04dc 1A000000 		.4byte	.LVL77
 2886 04e0 23000000 		.4byte	.LVL78-1
 2887 04e4 0100     		.2byte	0x1
 2888 04e6 50       		.byte	0x50
 2889 04e7 00000000 		.4byte	0
 2890 04eb 00000000 		.4byte	0
 2891              	.LLST20:
 2892 04ef 00000000 		.4byte	.LVL81
 2893 04f3 0C000000 		.4byte	.LVL82
 2894 04f7 0100     		.2byte	0x1
 2895 04f9 50       		.byte	0x50
 2896 04fa 0C000000 		.4byte	.LVL82
 2897 04fe 28000000 		.4byte	.LVL87
 2898 0502 0100     		.2byte	0x1
 2899 0504 54       		.byte	0x54
 2900 0505 28000000 		.4byte	.LVL87
 2901 0509 48000000 		.4byte	.LFE20
 2902 050d 0400     		.2byte	0x4
 2903 050f F3       		.byte	0xf3
 2904 0510 01       		.uleb128 0x1
 2905 0511 50       		.byte	0x50
 2906 0512 9F       		.byte	0x9f
 2907 0513 00000000 		.4byte	0
 2908 0517 00000000 		.4byte	0
 2909              	.LLST21:
 2910 051b 00000000 		.4byte	.LVL81
 2911 051f 0F000000 		.4byte	.LVL83-1
 2912 0523 0100     		.2byte	0x1
 2913 0525 51       		.byte	0x51
 2914 0526 0F000000 		.4byte	.LVL83-1
 2915 052a 1A000000 		.4byte	.LVL84
 2916 052e 0400     		.2byte	0x4
 2917 0530 F3       		.byte	0xf3
 2918 0531 01       		.uleb128 0x1
 2919 0532 51       		.byte	0x51
 2920 0533 9F       		.byte	0x9f
 2921 0534 1A000000 		.4byte	.LVL84
 2922 0538 1D000000 		.4byte	.LVL85-1
 2923 053c 0100     		.2byte	0x1
 2924 053e 50       		.byte	0x50
 2925 053f 00000000 		.4byte	0
 2926 0543 00000000 		.4byte	0
 2927              		.section	.debug_aranges,"",%progbits
 2928 0000 AC000000 		.4byte	0xac
 2929 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 68


 2930 0006 00000000 		.4byte	.Ldebug_info0
 2931 000a 04       		.byte	0x4
 2932 000b 00       		.byte	0
 2933 000c 0000     		.2byte	0
 2934 000e 0000     		.2byte	0
 2935 0010 00000000 		.4byte	.LFB3
 2936 0014 B0010000 		.4byte	.LFE3-.LFB3
 2937 0018 00000000 		.4byte	.LFB4
 2938 001c 30000000 		.4byte	.LFE4-.LFB4
 2939 0020 00000000 		.4byte	.LFB2
 2940 0024 20000000 		.4byte	.LFE2-.LFB2
 2941 0028 00000000 		.4byte	.LFB5
 2942 002c 10000000 		.4byte	.LFE5-.LFB5
 2943 0030 00000000 		.4byte	.LFB6
 2944 0034 14000000 		.4byte	.LFE6-.LFB6
 2945 0038 00000000 		.4byte	.LFB7
 2946 003c 14000000 		.4byte	.LFE7-.LFB7
 2947 0040 00000000 		.4byte	.LFB8
 2948 0044 4C000000 		.4byte	.LFE8-.LFB8
 2949 0048 00000000 		.4byte	.LFB9
 2950 004c 38000000 		.4byte	.LFE9-.LFB9
 2951 0050 00000000 		.4byte	.LFB10
 2952 0054 10000000 		.4byte	.LFE10-.LFB10
 2953 0058 00000000 		.4byte	.LFB11
 2954 005c 14000000 		.4byte	.LFE11-.LFB11
 2955 0060 00000000 		.4byte	.LFB12
 2956 0064 1C000000 		.4byte	.LFE12-.LFB12
 2957 0068 00000000 		.4byte	.LFB13
 2958 006c 18000000 		.4byte	.LFE13-.LFB13
 2959 0070 00000000 		.4byte	.LFB14
 2960 0074 10000000 		.4byte	.LFE14-.LFB14
 2961 0078 00000000 		.4byte	.LFB15
 2962 007c 10000000 		.4byte	.LFE15-.LFB15
 2963 0080 00000000 		.4byte	.LFB16
 2964 0084 1C000000 		.4byte	.LFE16-.LFB16
 2965 0088 00000000 		.4byte	.LFB17
 2966 008c 1C000000 		.4byte	.LFE17-.LFB17
 2967 0090 00000000 		.4byte	.LFB18
 2968 0094 5C000000 		.4byte	.LFE18-.LFB18
 2969 0098 00000000 		.4byte	.LFB19
 2970 009c 40000000 		.4byte	.LFE19-.LFB19
 2971 00a0 00000000 		.4byte	.LFB20
 2972 00a4 48000000 		.4byte	.LFE20-.LFB20
 2973 00a8 00000000 		.4byte	0
 2974 00ac 00000000 		.4byte	0
 2975              		.section	.debug_ranges,"",%progbits
 2976              	.Ldebug_ranges0:
 2977 0000 00000000 		.4byte	.LFB3
 2978 0004 B0010000 		.4byte	.LFE3
 2979 0008 00000000 		.4byte	.LFB4
 2980 000c 30000000 		.4byte	.LFE4
 2981 0010 00000000 		.4byte	.LFB2
 2982 0014 20000000 		.4byte	.LFE2
 2983 0018 00000000 		.4byte	.LFB5
 2984 001c 10000000 		.4byte	.LFE5
 2985 0020 00000000 		.4byte	.LFB6
 2986 0024 14000000 		.4byte	.LFE6
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 69


 2987 0028 00000000 		.4byte	.LFB7
 2988 002c 14000000 		.4byte	.LFE7
 2989 0030 00000000 		.4byte	.LFB8
 2990 0034 4C000000 		.4byte	.LFE8
 2991 0038 00000000 		.4byte	.LFB9
 2992 003c 38000000 		.4byte	.LFE9
 2993 0040 00000000 		.4byte	.LFB10
 2994 0044 10000000 		.4byte	.LFE10
 2995 0048 00000000 		.4byte	.LFB11
 2996 004c 14000000 		.4byte	.LFE11
 2997 0050 00000000 		.4byte	.LFB12
 2998 0054 1C000000 		.4byte	.LFE12
 2999 0058 00000000 		.4byte	.LFB13
 3000 005c 18000000 		.4byte	.LFE13
 3001 0060 00000000 		.4byte	.LFB14
 3002 0064 10000000 		.4byte	.LFE14
 3003 0068 00000000 		.4byte	.LFB15
 3004 006c 10000000 		.4byte	.LFE15
 3005 0070 00000000 		.4byte	.LFB16
 3006 0074 1C000000 		.4byte	.LFE16
 3007 0078 00000000 		.4byte	.LFB17
 3008 007c 1C000000 		.4byte	.LFE17
 3009 0080 00000000 		.4byte	.LFB18
 3010 0084 5C000000 		.4byte	.LFE18
 3011 0088 00000000 		.4byte	.LFB19
 3012 008c 40000000 		.4byte	.LFE19
 3013 0090 00000000 		.4byte	.LFB20
 3014 0094 48000000 		.4byte	.LFE20
 3015 0098 00000000 		.4byte	0
 3016 009c 00000000 		.4byte	0
 3017              		.section	.debug_line,"",%progbits
 3018              	.Ldebug_line0:
 3019 0000 A9020000 		.section	.debug_str,"MS",%progbits,1
 3019      02004D00 
 3019      00000201 
 3019      FB0E0D00 
 3019      01010101 
 3020              	.LASF10:
 3021 0000 75696E74 		.ascii	"uint16\000"
 3021      313600
 3022              	.LASF50:
 3023 0007 61646347 		.ascii	"adcGain\000"
 3023      61696E00 
 3024              	.LASF24:
 3025 000f 636F756E 		.ascii	"counts\000"
 3025      747300
 3026              	.LASF55:
 3027 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 3027      436F756E 
 3027      7473546F 
 3027      5F566F6C 
 3027      747300
 3028              	.LASF26:
 3029 0029 4144435F 		.ascii	"ADC_Init\000"
 3029      496E6974 
 3029      00
 3030              	.LASF7:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 70


 3031 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 3031      206C6F6E 
 3031      6720756E 
 3031      7369676E 
 3031      65642069 
 3032              	.LASF25:
 3033 0049 4144435F 		.ascii	"ADC_InputsPlacement\000"
 3033      496E7075 
 3033      7473506C 
 3033      6163656D 
 3033      656E7400 
 3034              	.LASF30:
 3035 005d 4144435F 		.ascii	"ADC_StartConvert\000"
 3035      53746172 
 3035      74436F6E 
 3035      76657274 
 3035      00
 3036              	.LASF6:
 3037 006e 6C6F6E67 		.ascii	"long long int\000"
 3037      206C6F6E 
 3037      6720696E 
 3037      7400
 3038              	.LASF0:
 3039 007c 7369676E 		.ascii	"signed char\000"
 3039      65642063 
 3039      68617200 
 3040              	.LASF32:
 3041 0088 73746174 		.ascii	"status\000"
 3041      757300
 3042              	.LASF13:
 3043 008f 696E7433 		.ascii	"int32\000"
 3043      3200
 3044              	.LASF28:
 3045 0095 4144435F 		.ascii	"ADC_Start\000"
 3045      53746172 
 3045      7400
 3046              	.LASF4:
 3047 009f 6C6F6E67 		.ascii	"long int\000"
 3047      20696E74 
 3047      00
 3048              	.LASF54:
 3049 00a8 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 3049      436F756E 
 3049      7473546F 
 3049      5F75566F 
 3049      6C747300 
 3050              	.LASF60:
 3051 00bc 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 3051      636F756E 
 3051      74735065 
 3051      72313056 
 3051      6F6C7400 
 3052              	.LASF9:
 3053 00d0 75696E74 		.ascii	"uint8\000"
 3053      3800
 3054              	.LASF62:
 3055 00d6 43794465 		.ascii	"CyDelayUs\000"
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 71


 3055      6C617955 
 3055      7300
 3056              	.LASF16:
 3057 00e0 646F7562 		.ascii	"double\000"
 3057      6C6500
 3058              	.LASF11:
 3059 00e7 75696E74 		.ascii	"uint32\000"
 3059      333200
 3060              	.LASF39:
 3061 00ee 6D61736B 		.ascii	"mask\000"
 3061      00
 3062              	.LASF58:
 3063 00f3 4144435F 		.ascii	"ADC_initVar\000"
 3063      696E6974 
 3063      56617200 
 3064              	.LASF35:
 3065 00ff 7265744D 		.ascii	"retMode\000"
 3065      6F646500 
 3066              	.LASF45:
 3067 0107 4144435F 		.ascii	"ADC_SetLimitMask\000"
 3067      5365744C 
 3067      696D6974 
 3067      4D61736B 
 3067      00
 3068              	.LASF8:
 3069 0118 756E7369 		.ascii	"unsigned int\000"
 3069      676E6564 
 3069      20696E74 
 3069      00
 3070              	.LASF66:
 3071 0125 75566F6C 		.ascii	"uVolts\000"
 3071      747300
 3072              	.LASF5:
 3073 012c 6C6F6E67 		.ascii	"long unsigned int\000"
 3073      20756E73 
 3073      69676E65 
 3073      6420696E 
 3073      7400
 3074              	.LASF46:
 3075 013e 4144435F 		.ascii	"ADC_SetSatMask\000"
 3075      53657453 
 3075      61744D61 
 3075      736B00
 3076              	.LASF56:
 3077 014d 766F6C74 		.ascii	"volts\000"
 3077      7300
 3078              	.LASF23:
 3079 0153 746D7052 		.ascii	"tmpRegVal\000"
 3079      65675661 
 3079      6C00
 3080              	.LASF3:
 3081 015d 73686F72 		.ascii	"short unsigned int\000"
 3081      7420756E 
 3081      7369676E 
 3081      65642069 
 3081      6E7400
 3082              	.LASF67:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 72


 3083 0170 4379496E 		.ascii	"CyIntSetVector\000"
 3083      74536574 
 3083      56656374 
 3083      6F7200
 3084              	.LASF31:
 3085 017f 4144435F 		.ascii	"ADC_StopConvert\000"
 3085      53746F70 
 3085      436F6E76 
 3085      65727400 
 3086              	.LASF53:
 3087 018f 6D566F6C 		.ascii	"mVolts\000"
 3087      747300
 3088              	.LASF19:
 3089 0196 72656733 		.ascii	"reg32\000"
 3089      3200
 3090              	.LASF14:
 3091 019c 666C6F61 		.ascii	"float32\000"
 3091      74333200 
 3092              	.LASF21:
 3093 01a4 73697A65 		.ascii	"sizetype\000"
 3093      74797065 
 3093      00
 3094              	.LASF42:
 3095 01ad 6C6F774C 		.ascii	"lowLimit\000"
 3095      696D6974 
 3095      00
 3096              	.LASF43:
 3097 01b6 4144435F 		.ascii	"ADC_SetHighLimit\000"
 3097      53657448 
 3097      6967684C 
 3097      696D6974 
 3097      00
 3098              	.LASF40:
 3099 01c7 4144435F 		.ascii	"ADC_EnableInjection\000"
 3099      456E6162 
 3099      6C65496E 
 3099      6A656374 
 3099      696F6E00 
 3100              	.LASF33:
 3101 01db 4144435F 		.ascii	"ADC_IsEndConversion\000"
 3101      4973456E 
 3101      64436F6E 
 3101      76657273 
 3101      696F6E00 
 3102              	.LASF63:
 3103 01ef 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3103      4320342E 
 3103      392E3320 
 3103      32303135 
 3103      30333033 
 3104 0222 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3104      20726576 
 3104      6973696F 
 3104      6E203232 
 3104      31323230 
 3105 0255 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3105      66756E63 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 73


 3105      74696F6E 
 3105      2D736563 
 3105      74696F6E 
 3106              	.LASF17:
 3107 027d 696E7436 		.ascii	"int64\000"
 3107      3400
 3108              	.LASF61:
 3109 0283 4379496E 		.ascii	"CyIntSetPriority\000"
 3109      74536574 
 3109      5072696F 
 3109      72697479 
 3109      00
 3110              	.LASF38:
 3111 0294 4144435F 		.ascii	"ADC_SetChanMask\000"
 3111      53657443 
 3111      68616E4D 
 3111      61736B00 
 3112              	.LASF49:
 3113 02a4 4144435F 		.ascii	"ADC_SetGain\000"
 3113      53657447 
 3113      61696E00 
 3114              	.LASF15:
 3115 02b0 666C6F61 		.ascii	"float\000"
 3115      7400
 3116              	.LASF44:
 3117 02b6 68696768 		.ascii	"highLimit\000"
 3117      4C696D69 
 3117      7400
 3118              	.LASF51:
 3119 02c0 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 3119      436F756E 
 3119      7473546F 
 3119      5F6D566F 
 3119      6C747300 
 3120              	.LASF41:
 3121 02d4 4144435F 		.ascii	"ADC_SetLowLimit\000"
 3121      5365744C 
 3121      6F774C69 
 3121      6D697400 
 3122              	.LASF68:
 3123 02e4 43794861 		.ascii	"CyHalt\000"
 3123      6C7400
 3124              	.LASF64:
 3125 02eb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 3125      6E657261 
 3125      7465645F 
 3125      536F7572 
 3125      63655C50 
 3126              	.LASF1:
 3127 030a 756E7369 		.ascii	"unsigned char\000"
 3127      676E6564 
 3127      20636861 
 3127      7200
 3128              	.LASF59:
 3129 0318 4144435F 		.ascii	"ADC_offset\000"
 3129      6F666673 
 3129      657400
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 74


 3130              	.LASF2:
 3131 0323 73686F72 		.ascii	"short int\000"
 3131      7420696E 
 3131      7400
 3132              	.LASF29:
 3133 032d 4144435F 		.ascii	"ADC_Stop\000"
 3133      53746F70 
 3133      00
 3134              	.LASF22:
 3135 0336 63684E75 		.ascii	"chNum\000"
 3135      6D00
 3136              	.LASF36:
 3137 033c 6368616E 		.ascii	"chan\000"
 3137      00
 3138              	.LASF18:
 3139 0341 63686172 		.ascii	"char\000"
 3139      00
 3140              	.LASF20:
 3141 0346 63796973 		.ascii	"cyisraddress\000"
 3141      72616464 
 3141      72657373 
 3141      00
 3142              	.LASF57:
 3143 0353 4144435F 		.ascii	"ADC_channelsConfig\000"
 3143      6368616E 
 3143      6E656C73 
 3143      436F6E66 
 3143      696700
 3144              	.LASF48:
 3145 0366 6F666673 		.ascii	"offset\000"
 3145      657400
 3146              	.LASF52:
 3147 036d 61646343 		.ascii	"adcCounts\000"
 3147      6F756E74 
 3147      7300
 3148              	.LASF27:
 3149 0377 4144435F 		.ascii	"ADC_Enable\000"
 3149      456E6162 
 3149      6C6500
 3150              	.LASF12:
 3151 0382 696E7431 		.ascii	"int16\000"
 3151      3600
 3152              	.LASF47:
 3153 0388 4144435F 		.ascii	"ADC_SetOffset\000"
 3153      5365744F 
 3153      66667365 
 3153      7400
 3154              	.LASF65:
 3155 0396 433A5C55 		.ascii	"C:\\Users\\mlgjmoor\\Documents\\PSoC Creator\\Nodus"
 3155      73657273 
 3155      5C6D6C67 
 3155      6A6D6F6F 
 3155      725C446F 
 3156 03c4 435C6E6F 		.ascii	"C\\nodusC.cydsn\000"
 3156      64757343 
 3156      2E637964 
 3156      736E00
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccjiRjkW.s 			page 75


 3157              	.LASF37:
 3158 03d3 72657375 		.ascii	"result\000"
 3158      6C7400
 3159              	.LASF34:
 3160 03da 4144435F 		.ascii	"ADC_GetResult16\000"
 3160      47657452 
 3160      6573756C 
 3160      74313600 
 3161              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
