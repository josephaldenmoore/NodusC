ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_BaseInit,"ax",%progbits
  18              		.align	2
  19              		.global	CapSense_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_BaseInit, %function
  23              	CapSense_BaseInit:
  24              	.LFB36:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 2


  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_40 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 3


  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  26              		.loc 1 137 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 30B5     		push	{r4, r5, lr}
  30              		.cfi_def_cfa_offset 12
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 5, -8
  33              		.cfi_offset 14, -4
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 4


 139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  34              		.loc 1 140 0
  35 0002 094B     		ldr	r3, .L2
  36 0004 1B5C     		ldrb	r3, [r3, r0]
  37              	.LVL1:
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  38              		.loc 1 154 0
  39 0006 4200     		lsl	r2, r0, #1
  40 0008 0849     		ldr	r1, .L2+4
  41 000a 545A     		ldrh	r4, [r2, r1]
  42 000c 0849     		ldr	r1, .L2+8
  43 000e 5452     		strh	r4, [r2, r1]
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  44              		.loc 1 155 0
  45 0010 0818     		add	r0, r1, r0
  46              	.LVL2:
  47 0012 0025     		mov	r5, #0
  48 0014 0571     		strb	r5, [r0, #4]
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  49              		.loc 1 156 0
  50 0016 0572     		strb	r5, [r0, #8]
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  51              		.loc 1 158 0
  52 0018 0648     		ldr	r0, .L2+12
  53 001a C05C     		ldrb	r0, [r0, r3]
  54 001c CB18     		add	r3, r1, r3
  55              	.LVL3:
  56 001e 1873     		strb	r0, [r3, #12]
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 5


 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  57              		.loc 1 173 0
  58 0020 054B     		ldr	r3, .L2+16
  59 0022 D452     		strh	r4, [r2, r3]
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
  60              		.loc 1 185 0
  61              		@ sp needed
  62 0024 30BD     		pop	{r4, r5, pc}
  63              	.L3:
  64 0026 C046     		.align	2
  65              	.L2:
  66 0028 00000000 		.word	CapSense_widgetNumber
  67 002c 00000000 		.word	CapSense_sensorRaw
  68 0030 00000000 		.word	.LANCHOR0
  69 0034 00000000 		.word	.LANCHOR1
  70 0038 00000000 		.word	CapSense_rawFilterData1
  71              		.cfi_endproc
  72              	.LFE36:
  73              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  74              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  75              		.align	2
  76              		.global	CapSense_InitializeSensorBaseline
  77              		.code	16
  78              		.thumb_func
  79              		.type	CapSense_InitializeSensorBaseline, %function
  80              	CapSense_InitializeSensorBaseline:
  81              	.LFB37:
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 6


 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  82              		.loc 1 213 0
  83              		.cfi_startproc
  84              	.LVL4:
  85 0000 10B5     		push	{r4, lr}
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
  89 0002 041C     		mov	r4, r0
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  90              		.loc 1 215 0
  91 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  92              	.LVL5:
  93              	.L5:
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  94              		.loc 1 216 0 discriminator 1
  95 0008 FFF7FEFF 		bl	CapSense_IsBusy
  96              	.LVL6:
  97 000c 0028     		cmp	r0, #0
  98 000e FBD1     		bne	.L5
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
  99              		.loc 1 222 0
 100 0010 201C     		mov	r0, r4
 101 0012 FFF7FEFF 		bl	CapSense_BaseInit
 102              	.LVL7:
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 103              		.loc 1 223 0
 104              		@ sp needed
 105              	.LVL8:
 106 0016 10BD     		pop	{r4, pc}
 107              		.cfi_endproc
 108              	.LFE37:
 109              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 110              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 111              		.align	2
 112              		.global	CapSense_InitializeAllBaselines
 113              		.code	16
 114              		.thumb_func
 115              		.type	CapSense_InitializeAllBaselines, %function
 116              	CapSense_InitializeAllBaselines:
 117              	.LFB38:
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 7


 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 118              		.loc 1 250 0
 119              		.cfi_startproc
 120 0000 10B5     		push	{r4, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 4, -8
 123              		.cfi_offset 14, -4
 124              	.LVL9:
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 125              		.loc 1 253 0
 126 0002 0024     		mov	r4, #0
 127 0004 03E0     		b	.L7
 128              	.LVL10:
 129              	.L8:
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 130              		.loc 1 255 0 discriminator 3
 131 0006 201C     		mov	r0, r4
 132 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 133              	.LVL11:
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 134              		.loc 1 253 0 discriminator 3
 135 000c 0134     		add	r4, r4, #1
 136              	.LVL12:
 137              	.L7:
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 138              		.loc 1 253 0 is_stmt 0 discriminator 1
 139 000e 012C     		cmp	r4, #1
 140 0010 F9D9     		bls	.L8
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 8


 141              		.loc 1 257 0 is_stmt 1
 142              		@ sp needed
 143              	.LVL13:
 144 0012 10BD     		pop	{r4, pc}
 145              		.cfi_endproc
 146              	.LFE38:
 147              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 148              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 149              		.align	2
 150              		.global	CapSense_InitializeEnabledBaselines
 151              		.code	16
 152              		.thumb_func
 153              		.type	CapSense_InitializeEnabledBaselines, %function
 154              	CapSense_InitializeEnabledBaselines:
 155              	.LFB39:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 156              		.loc 1 285 0
 157              		.cfi_startproc
 158 0000 10B5     		push	{r4, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 162              		.loc 1 289 0
 163 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 164              	.LVL14:
 165              	.L10:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 9


 290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 166              		.loc 1 290 0 discriminator 1
 167 0006 FFF7FEFF 		bl	CapSense_IsBusy
 168              	.LVL15:
 169 000a 0028     		cmp	r0, #0
 170 000c FBD1     		bne	.L10
 171 000e 0024     		mov	r4, #0
 172 0010 09E0     		b	.L11
 173              	.LVL16:
 174              	.L13:
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 175              		.loc 1 297 0
 176 0012 0648     		ldr	r0, .L14
 177 0014 211C     		mov	r1, r4
 178 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 179              	.LVL17:
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 180              		.loc 1 300 0
 181 001a 0028     		cmp	r0, #0
 182 001c 02D0     		beq	.L12
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 183              		.loc 1 303 0
 184 001e 201C     		mov	r0, r4
 185              	.LVL18:
 186 0020 FFF7FEFF 		bl	CapSense_BaseInit
 187              	.LVL19:
 188              	.L12:
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 189              		.loc 1 295 0 discriminator 2
 190 0024 0134     		add	r4, r4, #1
 191              	.LVL20:
 192              	.L11:
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 193              		.loc 1 295 0 is_stmt 0 discriminator 1
 194 0026 012C     		cmp	r4, #1
 195 0028 F3D9     		bls	.L13
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 196              		.loc 1 306 0 is_stmt 1
 197              		@ sp needed
 198              	.LVL21:
 199 002a 10BD     		pop	{r4, pc}
 200              	.L15:
 201              		.align	2
 202              	.L14:
 203 002c 00000000 		.word	CapSense_sensorEnableMask
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 10


 204              		.cfi_endproc
 205              	.LFE39:
 206              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 207              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 208              		.align	2
 209              		.global	CapSense_GetBaselineData
 210              		.code	16
 211              		.thumb_func
 212              		.type	CapSense_GetBaselineData, %function
 213              	CapSense_GetBaselineData:
 214              	.LFB44:
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 11


 353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 12


 410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 13


 467:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 14


 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 15


 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 16


 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 215              		.loc 1 690 0
 216              		.cfi_startproc
 217              	.LVL22:
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 17


 218              		.loc 1 691 0
 219 0000 4000     		lsl	r0, r0, #1
 220              	.LVL23:
 221 0002 014B     		ldr	r3, .L17
 222 0004 185A     		ldrh	r0, [r3, r0]
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 223              		.loc 1 692 0
 224              		@ sp needed
 225 0006 7047     		bx	lr
 226              	.L18:
 227              		.align	2
 228              	.L17:
 229 0008 00000000 		.word	.LANCHOR0
 230              		.cfi_endproc
 231              	.LFE44:
 232              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 233              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 234              		.align	2
 235              		.global	CapSense_SetBaselineData
 236              		.code	16
 237              		.thumb_func
 238              		.type	CapSense_SetBaselineData, %function
 239              	CapSense_SetBaselineData:
 240              	.LFB45:
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 241              		.loc 1 717 0
 242              		.cfi_startproc
 243              	.LVL24:
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 244              		.loc 1 718 0
 245 0000 4000     		lsl	r0, r0, #1
 246              	.LVL25:
 247 0002 014B     		ldr	r3, .L20
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 18


 248 0004 C152     		strh	r1, [r0, r3]
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 249              		.loc 1 719 0
 250              		@ sp needed
 251 0006 7047     		bx	lr
 252              	.L21:
 253              		.align	2
 254              	.L20:
 255 0008 00000000 		.word	.LANCHOR0
 256              		.cfi_endproc
 257              	.LFE45:
 258              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 259              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 260              		.align	2
 261              		.global	CapSense_GetDiffCountData
 262              		.code	16
 263              		.thumb_func
 264              		.type	CapSense_GetDiffCountData, %function
 265              	CapSense_GetDiffCountData:
 266              	.LFB46:
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 267              		.loc 1 744 0
 268              		.cfi_startproc
 269              	.LVL26:
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 270              		.loc 1 745 0
 271 0000 014B     		ldr	r3, .L23
 272 0002 1818     		add	r0, r3, r0
 273              	.LVL27:
 274 0004 007A     		ldrb	r0, [r0, #8]
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 275              		.loc 1 746 0
 276              		@ sp needed
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 19


 277 0006 7047     		bx	lr
 278              	.L24:
 279              		.align	2
 280              	.L23:
 281 0008 00000000 		.word	.LANCHOR0
 282              		.cfi_endproc
 283              	.LFE46:
 284              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 285              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 286              		.align	2
 287              		.global	CapSense_SetDiffCountData
 288              		.code	16
 289              		.thumb_func
 290              		.type	CapSense_SetDiffCountData, %function
 291              	CapSense_SetDiffCountData:
 292              	.LFB47:
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 293              		.loc 1 771 0
 294              		.cfi_startproc
 295              	.LVL28:
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 296              		.loc 1 772 0
 297 0000 014B     		ldr	r3, .L26
 298 0002 1818     		add	r0, r3, r0
 299              	.LVL29:
 300 0004 0172     		strb	r1, [r0, #8]
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 301              		.loc 1 773 0
 302              		@ sp needed
 303 0006 7047     		bx	lr
 304              	.L27:
 305              		.align	2
 306              	.L26:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 20


 307 0008 00000000 		.word	.LANCHOR0
 308              		.cfi_endproc
 309              	.LFE47:
 310              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 311              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 312              		.align	2
 313              		.global	CapSense_GetFingerThreshold
 314              		.code	16
 315              		.thumb_func
 316              		.type	CapSense_GetFingerThreshold, %function
 317              	CapSense_GetFingerThreshold:
 318              	.LFB48:
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 319              		.loc 1 798 0
 320              		.cfi_startproc
 321              	.LVL30:
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 322              		.loc 1 799 0
 323 0000 014B     		ldr	r3, .L29
 324 0002 185C     		ldrb	r0, [r3, r0]
 325              	.LVL31:
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 326              		.loc 1 800 0
 327              		@ sp needed
 328 0004 7047     		bx	lr
 329              	.L30:
 330 0006 C046     		.align	2
 331              	.L29:
 332 0008 00000000 		.word	CapSense_fingerThreshold
 333              		.cfi_endproc
 334              	.LFE48:
 335              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 336              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 21


 337              		.align	2
 338              		.global	CapSense_GetNoiseThreshold
 339              		.code	16
 340              		.thumb_func
 341              		.type	CapSense_GetNoiseThreshold, %function
 342              	CapSense_GetNoiseThreshold:
 343              	.LFB49:
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 344              		.loc 1 825 0
 345              		.cfi_startproc
 346              	.LVL32:
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 347              		.loc 1 826 0
 348 0000 014B     		ldr	r3, .L32
 349 0002 185C     		ldrb	r0, [r3, r0]
 350              	.LVL33:
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 351              		.loc 1 827 0
 352              		@ sp needed
 353 0004 7047     		bx	lr
 354              	.L33:
 355 0006 C046     		.align	2
 356              	.L32:
 357 0008 00000000 		.word	CapSense_noiseThreshold
 358              		.cfi_endproc
 359              	.LFE49:
 360              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 361              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 362              		.align	2
 363              		.global	CapSense_GetFingerHysteresis
 364              		.code	16
 365              		.thumb_func
 366              		.type	CapSense_GetFingerHysteresis, %function
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 22


 367              	CapSense_GetFingerHysteresis:
 368              	.LFB50:
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 369              		.loc 1 853 0
 370              		.cfi_startproc
 371              	.LVL34:
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 372              		.loc 1 854 0
 373 0000 014B     		ldr	r3, .L35
 374 0002 185C     		ldrb	r0, [r3, r0]
 375              	.LVL35:
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 376              		.loc 1 855 0
 377              		@ sp needed
 378 0004 7047     		bx	lr
 379              	.L36:
 380 0006 C046     		.align	2
 381              	.L35:
 382 0008 00000000 		.word	CapSense_hysteresis
 383              		.cfi_endproc
 384              	.LFE50:
 385              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 386              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 387              		.align	2
 388              		.global	CapSense_GetNegativeNoiseThreshold
 389              		.code	16
 390              		.thumb_func
 391              		.type	CapSense_GetNegativeNoiseThreshold, %function
 392              	CapSense_GetNegativeNoiseThreshold:
 393              	.LFB51:
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 23


 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 394              		.loc 1 881 0
 395              		.cfi_startproc
 396              	.LVL36:
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 397              		.loc 1 883 0
 398 0000 014B     		ldr	r3, .L38
 399 0002 185C     		ldrb	r0, [r3, r0]
 400              	.LVL37:
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 401              		.loc 1 887 0
 402              		@ sp needed
 403 0004 7047     		bx	lr
 404              	.L39:
 405 0006 C046     		.align	2
 406              	.L38:
 407 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 408              		.cfi_endproc
 409              	.LFE51:
 410              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 411              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 412              		.align	2
 413              		.global	CapSense_SetFingerThreshold
 414              		.code	16
 415              		.thumb_func
 416              		.type	CapSense_SetFingerThreshold, %function
 417              	CapSense_SetFingerThreshold:
 418              	.LFB52:
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 24


 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 419              		.loc 1 914 0
 420              		.cfi_startproc
 421              	.LVL38:
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 422              		.loc 1 915 0
 423 0000 014B     		ldr	r3, .L41
 424 0002 1954     		strb	r1, [r3, r0]
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 425              		.loc 1 916 0
 426              		@ sp needed
 427 0004 7047     		bx	lr
 428              	.L42:
 429 0006 C046     		.align	2
 430              	.L41:
 431 0008 00000000 		.word	CapSense_fingerThreshold
 432              		.cfi_endproc
 433              	.LFE52:
 434              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 435              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 436              		.align	2
 437              		.global	CapSense_SetNoiseThreshold
 438              		.code	16
 439              		.thumb_func
 440              		.type	CapSense_SetNoiseThreshold, %function
 441              	CapSense_SetNoiseThreshold:
 442              	.LFB53:
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 25


 923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 443              		.loc 1 942 0
 444              		.cfi_startproc
 445              	.LVL39:
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 446              		.loc 1 943 0
 447 0000 014B     		ldr	r3, .L44
 448 0002 1954     		strb	r1, [r3, r0]
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 449              		.loc 1 944 0
 450              		@ sp needed
 451 0004 7047     		bx	lr
 452              	.L45:
 453 0006 C046     		.align	2
 454              	.L44:
 455 0008 00000000 		.word	CapSense_noiseThreshold
 456              		.cfi_endproc
 457              	.LFE53:
 458              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 459              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 460              		.align	2
 461              		.global	CapSense_SetFingerHysteresis
 462              		.code	16
 463              		.thumb_func
 464              		.type	CapSense_SetFingerHysteresis, %function
 465              	CapSense_SetFingerHysteresis:
 466              	.LFB54:
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 26


 956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 467              		.loc 1 970 0
 468              		.cfi_startproc
 469              	.LVL40:
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 470              		.loc 1 971 0
 471 0000 014B     		ldr	r3, .L47
 472 0002 1954     		strb	r1, [r3, r0]
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 473              		.loc 1 972 0
 474              		@ sp needed
 475 0004 7047     		bx	lr
 476              	.L48:
 477 0006 C046     		.align	2
 478              	.L47:
 479 0008 00000000 		.word	CapSense_hysteresis
 480              		.cfi_endproc
 481              	.LFE54:
 482              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 483              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 484              		.align	2
 485              		.global	CapSense_SetNegativeNoiseThreshold
 486              		.code	16
 487              		.thumb_func
 488              		.type	CapSense_SetNegativeNoiseThreshold, %function
 489              	CapSense_SetNegativeNoiseThreshold:
 490              	.LFB55:
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 27


 989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 491              		.loc 1 999 0
 492              		.cfi_startproc
 493              	.LVL41:
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 494              		.loc 1 1000 0
 495 0000 014B     		ldr	r3, .L50
 496 0002 1954     		strb	r1, [r3, r0]
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 497              		.loc 1 1001 0
 498              		@ sp needed
 499 0004 7047     		bx	lr
 500              	.L51:
 501 0006 C046     		.align	2
 502              	.L50:
 503 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 504              		.cfi_endproc
 505              	.LFE55:
 506              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 507              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 508              		.align	2
 509              		.global	CapSense_SetDebounce
 510              		.code	16
 511              		.thumb_func
 512              		.type	CapSense_SetDebounce, %function
 513              	CapSense_SetDebounce:
 514              	.LFB56:
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 28


1022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 515              		.loc 1 1027 0
 516              		.cfi_startproc
 517              	.LVL42:
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 518              		.loc 1 1028 0
 519 0000 014B     		ldr	r3, .L53
 520 0002 1954     		strb	r1, [r3, r0]
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 521              		.loc 1 1029 0
 522              		@ sp needed
 523 0004 7047     		bx	lr
 524              	.L54:
 525 0006 C046     		.align	2
 526              	.L53:
 527 0008 00000000 		.word	.LANCHOR1
 528              		.cfi_endproc
 529              	.LFE56:
 530              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 531              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 532              		.align	2
 533              		.global	CapSense_SetLowBaselineReset
 534              		.code	16
 535              		.thumb_func
 536              		.type	CapSense_SetLowBaselineReset, %function
 537              	CapSense_SetLowBaselineReset:
 538              	.LFB57:
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 29


1055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 539              		.loc 1 1055 0
 540              		.cfi_startproc
 541              	.LVL43:
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 542              		.loc 1 1056 0
 543 0000 014B     		ldr	r3, .L56
 544 0002 1818     		add	r0, r3, r0
 545              	.LVL44:
 546 0004 0171     		strb	r1, [r0, #4]
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 547              		.loc 1 1057 0
 548              		@ sp needed
 549 0006 7047     		bx	lr
 550              	.L57:
 551              		.align	2
 552              	.L56:
 553 0008 00000000 		.word	.LANCHOR1
 554              		.cfi_endproc
 555              	.LFE57:
 556              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 557              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 558              		.align	2
 559              		.global	CapSense_CheckIsSensorActive
 560              		.code	16
 561              		.thumb_func
 562              		.type	CapSense_CheckIsSensorActive, %function
 563              	CapSense_CheckIsSensorActive:
 564              	.LFB58:
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 30


1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 565              		.loc 1 1101 0
 566              		.cfi_startproc
 567              	.LVL45:
 568 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 569              		.cfi_def_cfa_offset 20
 570              		.cfi_offset 4, -20
 571              		.cfi_offset 5, -16
 572              		.cfi_offset 6, -12
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 4746     		mov	r7, r8
 576 0004 80B4     		push	{r7}
 577              		.cfi_def_cfa_offset 24
 578              		.cfi_offset 8, -24
 579 0006 041C     		mov	r4, r0
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 580              		.loc 1 1111 0
 581 0008 224B     		ldr	r3, .L63
 582 000a 1D5C     		ldrb	r5, [r3, r0]
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 583              		.loc 1 1113 0
 584 000c 224B     		ldr	r3, .L63+4
 585 000e 5F5D     		ldrb	r7, [r3, r5]
 586              	.LVL46:
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 587              		.loc 1 1114 0
 588 0010 224B     		ldr	r3, .L63+8
 589 0012 5E5D     		ldrb	r6, [r3, r5]
 590              	.LVL47:
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 591              		.loc 1 1115 0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 31


 592 0014 224B     		ldr	r3, .L63+12
 593 0016 5B5D     		ldrb	r3, [r3, r5]
 594 0018 9846     		mov	r8, r3
 595              	.LVL48:
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget;
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 596              		.loc 1 1121 0
 597 001a 2248     		ldr	r0, .L63+16
 598              	.LVL49:
 599 001c 1030     		add	r0, r0, #16
 600 001e 211C     		mov	r1, r4
 601 0020 FFF7FEFF 		bl	CapSense_GetBitValue
 602              	.LVL50:
 603 0024 0028     		cmp	r0, #0
 604 0026 10D0     		beq	.L59
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 605              		.loc 1 1124 0
 606 0028 1E4B     		ldr	r3, .L63+16
 607 002a 1B19     		add	r3, r3, r4
 608 002c 1B7A     		ldrb	r3, [r3, #8]
 609 002e BE1B     		sub	r6, r7, r6
 610              	.LVL51:
 611 0030 B342     		cmp	r3, r6
 612 0032 23DA     		bge	.L60
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 613              		.loc 1 1126 0
 614 0034 1B4E     		ldr	r6, .L63+16
 615 0036 301C     		mov	r0, r6
 616 0038 1030     		add	r0, r0, #16
 617 003a 211C     		mov	r1, r4
 618 003c 0022     		mov	r2, #0
 619 003e FFF7FEFF 		bl	CapSense_SetBitValue
 620              	.LVL52:
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 621              		.loc 1 1128 0
 622 0042 7519     		add	r5, r6, r5
 623 0044 4346     		mov	r3, r8
 624 0046 2B73     		strb	r3, [r5, #12]
 625 0048 18E0     		b	.L60
 626              	.LVL53:
 627              	.L59:
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 628              		.loc 1 1134 0
 629 004a 164B     		ldr	r3, .L63+16
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 32


 630 004c 1B19     		add	r3, r3, r4
 631 004e 1B7A     		ldrb	r3, [r3, #8]
 632 0050 BE19     		add	r6, r7, r6
 633              	.LVL54:
 634 0052 B342     		cmp	r3, r6
 635 0054 0EDB     		blt	.L61
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 636              		.loc 1 1136 0
 637 0056 134B     		ldr	r3, .L63+16
 638 0058 5D19     		add	r5, r3, r5
 639 005a 2B7B     		ldrb	r3, [r5, #12]
 640 005c 013B     		sub	r3, r3, #1
 641 005e DBB2     		uxtb	r3, r3
 642 0060 2B73     		strb	r3, [r5, #12]
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 643              		.loc 1 1138 0
 644 0062 002B     		cmp	r3, #0
 645 0064 0AD1     		bne	.L60
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 646              		.loc 1 1140 0
 647 0066 0F48     		ldr	r0, .L63+16
 648 0068 1030     		add	r0, r0, #16
 649 006a 211C     		mov	r1, r4
 650 006c 0122     		mov	r2, #1
 651 006e FFF7FEFF 		bl	CapSense_SetBitValue
 652              	.LVL55:
 653 0072 03E0     		b	.L60
 654              	.L61:
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 655              		.loc 1 1146 0
 656 0074 0B4B     		ldr	r3, .L63+16
 657 0076 5D19     		add	r5, r3, r5
 658 0078 4346     		mov	r3, r8
 659 007a 2B73     		strb	r3, [r5, #12]
 660              	.L60:
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 661              		.loc 1 1150 0
 662 007c 0948     		ldr	r0, .L63+16
 663 007e 1030     		add	r0, r0, #16
 664 0080 211C     		mov	r1, r4
 665 0082 FFF7FEFF 		bl	CapSense_GetBitValue
 666              	.LVL56:
 667 0086 0028     		cmp	r0, #0
 668 0088 00D0     		beq	.L62
 669 008a 0120     		mov	r0, #1
 670              	.L62:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 33


1151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 671              		.loc 1 1151 0 discriminator 4
 672              		@ sp needed
 673              	.LVL57:
 674              	.LVL58:
 675              	.LVL59:
 676 008c 04BC     		pop	{r2}
 677 008e 9046     		mov	r8, r2
 678 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 679              	.L64:
 680 0092 C046     		.align	2
 681              	.L63:
 682 0094 00000000 		.word	CapSense_widgetNumber
 683 0098 00000000 		.word	CapSense_fingerThreshold
 684 009c 00000000 		.word	CapSense_hysteresis
 685 00a0 00000000 		.word	.LANCHOR1
 686 00a4 00000000 		.word	.LANCHOR0
 687              		.cfi_endproc
 688              	.LFE58:
 689              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 690              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 691              		.align	2
 692              		.global	CapSense_CheckIsWidgetActive
 693              		.code	16
 694              		.thumb_func
 695              		.type	CapSense_CheckIsWidgetActive, %function
 696              	CapSense_CheckIsWidgetActive:
 697              	.LFB59:
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 34


1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 698              		.loc 1 1183 0
 699              		.cfi_startproc
 700              	.LVL60:
 701 0000 70B5     		push	{r4, r5, r6, lr}
 702              		.cfi_def_cfa_offset 16
 703              		.cfi_offset 4, -16
 704              		.cfi_offset 5, -12
 705              		.cfi_offset 6, -8
 706              		.cfi_offset 14, -4
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 707              		.loc 1 1184 0
 708 0002 084B     		ldr	r3, .L69
 709 0004 1C5C     		ldrb	r4, [r3, r0]
 710              	.LVL61:
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 711              		.loc 1 1185 0
 712 0006 1818     		add	r0, r3, r0
 713              	.LVL62:
 714 0008 0579     		ldrb	r5, [r0, #4]
 715 000a 2D19     		add	r5, r5, r4
 716              	.LVL63:
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 717              		.loc 1 1186 0
 718 000c 0026     		mov	r6, #0
 719              	.LVL64:
 720              	.L67:
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 721              		.loc 1 1191 0
 722 000e 201C     		mov	r0, r4
 723 0010 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 724              	.LVL65:
 725 0014 0028     		cmp	r0, #0
 726 0016 00D0     		beq	.L66
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 727              		.loc 1 1193 0
 728 0018 0126     		mov	r6, #1
 729              	.LVL66:
 730              	.L66:
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 731              		.loc 1 1195 0
 732 001a 0134     		add	r4, r4, #1
 733              	.LVL67:
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 734              		.loc 1 1197 0
 735 001c AC42     		cmp	r4, r5
 736 001e F6D3     		bcc	.L67
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 35


1199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 737              		.loc 1 1202 0
 738 0020 301C     		mov	r0, r6
 739              		@ sp needed
 740              	.LVL68:
 741              	.LVL69:
 742              	.LVL70:
 743 0022 70BD     		pop	{r4, r5, r6, pc}
 744              	.L70:
 745              		.align	2
 746              	.L69:
 747 0024 00000000 		.word	.LANCHOR2
 748              		.cfi_endproc
 749              	.LFE59:
 750              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 751              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 752              		.align	2
 753              		.global	CapSense_CheckIsAnyWidgetActive
 754              		.code	16
 755              		.thumb_func
 756              		.type	CapSense_CheckIsAnyWidgetActive, %function
 757              	CapSense_CheckIsAnyWidgetActive:
 758              	.LFB60:
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 759              		.loc 1 1229 0
 760              		.cfi_startproc
 761 0000 38B5     		push	{r3, r4, r5, lr}
 762              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 36


 763              		.cfi_offset 3, -16
 764              		.cfi_offset 4, -12
 765              		.cfi_offset 5, -8
 766              		.cfi_offset 14, -4
 767              	.LVL71:
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 768              		.loc 1 1232 0
 769 0002 0025     		mov	r5, #0
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 770              		.loc 1 1234 0
 771 0004 0024     		mov	r4, #0
 772 0006 06E0     		b	.L72
 773              	.LVL72:
 774              	.L74:
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 775              		.loc 1 1236 0
 776 0008 201C     		mov	r0, r4
 777 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 778              	.LVL73:
 779 000e 0028     		cmp	r0, #0
 780 0010 00D0     		beq	.L73
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 781              		.loc 1 1238 0
 782 0012 0125     		mov	r5, #1
 783              	.LVL74:
 784              	.L73:
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 785              		.loc 1 1234 0 discriminator 2
 786 0014 0134     		add	r4, r4, #1
 787              	.LVL75:
 788              	.L72:
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 789              		.loc 1 1234 0 is_stmt 0 discriminator 1
 790 0016 012C     		cmp	r4, #1
 791 0018 F6D9     		bls	.L74
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 792              		.loc 1 1245 0 is_stmt 1
 793 001a 281C     		mov	r0, r5
 794              		@ sp needed
 795              	.LVL76:
 796              	.LVL77:
 797 001c 38BD     		pop	{r3, r4, r5, pc}
 798              		.cfi_endproc
 799              	.LFE60:
 800              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 801 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 37


 802              		.align	2
 803              		.global	CapSense_EnableWidget
 804              		.code	16
 805              		.thumb_func
 806              		.type	CapSense_EnableWidget, %function
 807              	CapSense_EnableWidget:
 808              	.LFB61:
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 809              		.loc 1 1276 0
 810              		.cfi_startproc
 811              	.LVL78:
 812 0000 38B5     		push	{r3, r4, r5, lr}
 813              		.cfi_def_cfa_offset 16
 814              		.cfi_offset 3, -16
 815              		.cfi_offset 4, -12
 816              		.cfi_offset 5, -8
 817              		.cfi_offset 14, -4
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 818              		.loc 1 1278 0
 819 0002 084B     		ldr	r3, .L78
 820 0004 1C5C     		ldrb	r4, [r3, r0]
 821              	.LVL79:
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 822              		.loc 1 1279 0
 823 0006 1818     		add	r0, r3, r0
 824              	.LVL80:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 38


 825 0008 0579     		ldrb	r5, [r0, #4]
 826 000a 2D19     		add	r5, r5, r4
 827 000c EDB2     		uxtb	r5, r5
 828              	.LVL81:
 829              	.L77:
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 830              		.loc 1 1284 0 discriminator 1
 831 000e 0648     		ldr	r0, .L78+4
 832 0010 211C     		mov	r1, r4
 833 0012 0122     		mov	r2, #1
 834 0014 FFF7FEFF 		bl	CapSense_SetBitValue
 835              	.LVL82:
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 836              		.loc 1 1285 0 discriminator 1
 837 0018 0134     		add	r4, r4, #1
 838              	.LVL83:
 839 001a E4B2     		uxtb	r4, r4
 840              	.LVL84:
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 841              		.loc 1 1287 0 discriminator 1
 842 001c AC42     		cmp	r4, r5
 843 001e F6D3     		bcc	.L77
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 844              		.loc 1 1288 0
 845              		@ sp needed
 846              	.LVL85:
 847              	.LVL86:
 848 0020 38BD     		pop	{r3, r4, r5, pc}
 849              	.L79:
 850 0022 C046     		.align	2
 851              	.L78:
 852 0024 00000000 		.word	.LANCHOR2
 853 0028 00000000 		.word	CapSense_sensorEnableMask
 854              		.cfi_endproc
 855              	.LFE61:
 856              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 857              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 858              		.align	2
 859              		.global	CapSense_DisableWidget
 860              		.code	16
 861              		.thumb_func
 862              		.type	CapSense_DisableWidget, %function
 863              	CapSense_DisableWidget:
 864              	.LFB62:
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 39


1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 865              		.loc 1 1319 0
 866              		.cfi_startproc
 867              	.LVL87:
 868 0000 38B5     		push	{r3, r4, r5, lr}
 869              		.cfi_def_cfa_offset 16
 870              		.cfi_offset 3, -16
 871              		.cfi_offset 4, -12
 872              		.cfi_offset 5, -8
 873              		.cfi_offset 14, -4
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 874              		.loc 1 1320 0
 875 0002 084B     		ldr	r3, .L82
 876 0004 1C5C     		ldrb	r4, [r3, r0]
 877              	.LVL88:
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 878              		.loc 1 1321 0
 879 0006 1818     		add	r0, r3, r0
 880              	.LVL89:
 881 0008 0579     		ldrb	r5, [r0, #4]
 882 000a 2D19     		add	r5, r5, r4
 883 000c EDB2     		uxtb	r5, r5
 884              	.LVL90:
 885              	.L81:
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 886              		.loc 1 1327 0 discriminator 1
 887 000e 0648     		ldr	r0, .L82+4
 888 0010 211C     		mov	r1, r4
 889 0012 0022     		mov	r2, #0
 890 0014 FFF7FEFF 		bl	CapSense_SetBitValue
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 40


 891              	.LVL91:
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 892              		.loc 1 1328 0 discriminator 1
 893 0018 0134     		add	r4, r4, #1
 894              	.LVL92:
 895 001a E4B2     		uxtb	r4, r4
 896              	.LVL93:
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 897              		.loc 1 1330 0 discriminator 1
 898 001c AC42     		cmp	r4, r5
 899 001e F6D3     		bcc	.L81
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 900              		.loc 1 1331 0
 901              		@ sp needed
 902              	.LVL94:
 903              	.LVL95:
 904 0020 38BD     		pop	{r3, r4, r5, pc}
 905              	.L83:
 906 0022 C046     		.align	2
 907              	.L82:
 908 0024 00000000 		.word	.LANCHOR2
 909 0028 00000000 		.word	CapSense_sensorEnableMask
 910              		.cfi_endproc
 911              	.LFE62:
 912              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 913              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 914              		.align	2
 915              		.global	CapSense_MedianFilter
 916              		.code	16
 917              		.thumb_func
 918              		.type	CapSense_MedianFilter, %function
 919              	CapSense_MedianFilter:
 920              	.LFB63:
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 41


1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 42


1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 43


1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 44


1526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 45


1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 46


1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 47


1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 48


1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 49


1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 50


1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 51


1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 52


1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 53


2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 54


2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 55


2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 56


2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 57


2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 58


2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 921              		.loc 1 2371 0
 922              		.cfi_startproc
 923              	.LVL96:
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 924              		.loc 1 2374 0
 925 0000 8842     		cmp	r0, r1
 926 0002 02D9     		bls	.L85
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 59


 927 0004 031C     		mov	r3, r0
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 928              		.loc 1 2378 0
 929 0006 081C     		mov	r0, r1
 930              	.LVL97:
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 931              		.loc 1 2377 0
 932 0008 191C     		mov	r1, r3
 933              	.LVL98:
 934              	.L85:
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 935              		.loc 1 2381 0
 936 000a 9142     		cmp	r1, r2
 937 000c 00D9     		bls	.L86
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 938              		.loc 1 2383 0
 939 000e 111C     		mov	r1, r2
 940              	.LVL99:
 941              	.L86:
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 942              		.loc 1 2386 0
 943 0010 0B1C     		add	r3, r1, #0
 944 0012 8142     		cmp	r1, r0
 945 0014 00D2     		bcs	.L87
 946 0016 031C     		add	r3, r0, #0
 947              	.L87:
 948 0018 98B2     		uxth	r0, r3
 949              	.LVL100:
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 950              		.loc 1 2387 0
 951              		@ sp needed
 952 001a 7047     		bx	lr
 953              		.cfi_endproc
 954              	.LFE63:
 955              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 956              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 957              		.align	2
 958              		.global	CapSense_IIR4Filter
 959              		.code	16
 960              		.thumb_func
 961              		.type	CapSense_IIR4Filter, %function
 962              	CapSense_IIR4Filter:
 963              	.LFB64:
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 60


2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 61


2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 964              		.loc 1 2491 0
 965              		.cfi_startproc
 966              	.LVL101:
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 967              		.loc 1 2495 0
 968 0000 4318     		add	r3, r0, r1
 969              	.LVL102:
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 970              		.loc 1 2496 0
 971 0002 4900     		lsl	r1, r1, #1
 972              	.LVL103:
 973 0004 C818     		add	r0, r1, r3
 974              	.LVL104:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 62


2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 975              		.loc 1 2497 0
 976 0006 8008     		lsr	r0, r0, #2
 977              	.LVL105:
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 978              		.loc 1 2499 0
 979 0008 80B2     		uxth	r0, r0
 980              	.LVL106:
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 981              		.loc 1 2500 0
 982              		@ sp needed
 983 000a 7047     		bx	lr
 984              		.cfi_endproc
 985              	.LFE64:
 986              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 987              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 988              		.align	2
 989              		.global	CapSense_UpdateBaselineNoThreshold
 990              		.code	16
 991              		.thumb_func
 992              		.type	CapSense_UpdateBaselineNoThreshold, %function
 993              	CapSense_UpdateBaselineNoThreshold:
 994              	.LFB40:
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 995              		.loc 1 350 0
 996              		.cfi_startproc
 997              	.LVL107:
 998 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 999              		.cfi_def_cfa_offset 20
 1000              		.cfi_offset 4, -20
 1001              		.cfi_offset 5, -16
 1002              		.cfi_offset 6, -12
 1003              		.cfi_offset 7, -8
 1004              		.cfi_offset 14, -4
 1005 0002 4746     		mov	r7, r8
 1006 0004 80B4     		push	{r7}
 1007              		.cfi_def_cfa_offset 24
 1008              		.cfi_offset 8, -24
 1009 0006 82B0     		sub	sp, sp, #8
 1010              		.cfi_def_cfa_offset 32
 1011 0008 041C     		mov	r4, r0
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 1012              		.loc 1 355 0
 1013 000a 3B4B     		ldr	r3, .L102
 1014 000c 1E5C     		ldrb	r6, [r3, r0]
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 1015              		.loc 1 364 0
 1016 000e 3B4B     		ldr	r3, .L102+4
 1017 0010 9B5D     		ldrb	r3, [r3, r6]
 1018 0012 0193     		str	r3, [sp, #4]
 1019              	.LVL108:
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1020              		.loc 1 365 0
 1021 0014 4200     		lsl	r2, r0, #1
 1022 0016 3A4B     		ldr	r3, .L102+8
 1023 0018 D75A     		ldrh	r7, [r2, r3]
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 63


 1024              	.LVL109:
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1025              		.loc 1 368 0
 1026 001a 3A4B     		ldr	r3, .L102+12
 1027 001c 9B79     		ldrb	r3, [r3, #6]
 1028 001e 002B     		cmp	r3, #0
 1029 0020 08D0     		beq	.L92
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 1030              		.loc 1 389 0
 1031 0022 394D     		ldr	r5, .L102+16
 1032 0024 9046     		mov	r8, r2
 1033 0026 515B     		ldrh	r1, [r2, r5]
 1034 0028 381C     		mov	r0, r7
 1035              	.LVL110:
 1036 002a FFF7FEFF 		bl	CapSense_IIR4Filter
 1037              	.LVL111:
 1038 002e 071C     		mov	r7, r0
 1039              	.LVL112:
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1040              		.loc 1 390 0
 1041 0030 4346     		mov	r3, r8
 1042 0032 5853     		strh	r0, [r3, r5]
 1043              	.LVL113:
 1044              	.L92:
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1045              		.loc 1 411 0
 1046 0034 E1B2     		uxtb	r1, r4
 1047 0036 3548     		ldr	r0, .L102+20
 1048 0038 314A     		ldr	r2, .L102+8
 1049 003a FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 1050              	.LVL114:
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1051              		.loc 1 416 0
 1052 003e 6300     		lsl	r3, r4, #1
 1053 0040 334A     		ldr	r2, .L102+24
 1054 0042 9A5A     		ldrh	r2, [r3, r2]
 1055 0044 BA42     		cmp	r2, r7
 1056 0046 07D8     		bhi	.L93
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1057              		.loc 1 418 0
 1058 0048 0021     		mov	r1, #0
 1059 004a 324B     		ldr	r3, .L102+28
 1060 004c 1955     		strb	r1, [r3, r4]
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1061              		.loc 1 419 0
 1062 004e BD1A     		sub	r5, r7, r2
 1063 0050 ADB2     		uxth	r5, r5
 1064              	.LVL115:
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1065              		.loc 1 420 0
 1066 0052 0123     		mov	r3, #1
 1067 0054 9846     		mov	r8, r3
 1068 0056 03E0     		b	.L94
 1069              	.LVL116:
 1070              	.L93:
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1071              		.loc 1 424 0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 64


 1072 0058 D51B     		sub	r5, r2, r7
 1073 005a ADB2     		uxth	r5, r5
 1074              	.LVL117:
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1075              		.loc 1 425 0
 1076 005c 0023     		mov	r3, #0
 1077 005e 9846     		mov	r8, r3
 1078              	.LVL118:
 1079              	.L94:
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1080              		.loc 1 429 0
 1081 0060 4346     		mov	r3, r8
 1082 0062 002B     		cmp	r3, #0
 1083 0064 15D1     		bne	.L95
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1084              		.loc 1 429 0 is_stmt 0 discriminator 1
 1085 0066 2C4B     		ldr	r3, .L102+32
 1086 0068 9B5D     		ldrb	r3, [r3, r6]
 1087 006a AB42     		cmp	r3, r5
 1088 006c 11D2     		bcs	.L95
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1089              		.loc 1 434 0 is_stmt 1
 1090 006e 294B     		ldr	r3, .L102+28
 1091 0070 1B5D     		ldrb	r3, [r3, r4]
 1092 0072 244A     		ldr	r2, .L102+12
 1093 0074 1219     		add	r2, r2, r4
 1094 0076 1279     		ldrb	r2, [r2, #4]
 1095 0078 9342     		cmp	r3, r2
 1096 007a 06D3     		bcc	.L96
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1097              		.loc 1 436 0
 1098 007c 201C     		mov	r0, r4
 1099 007e FFF7FEFF 		bl	CapSense_BaseInit
 1100              	.LVL119:
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1101              		.loc 1 437 0
 1102 0082 0022     		mov	r2, #0
 1103 0084 234B     		ldr	r3, .L102+28
 1104 0086 1A55     		strb	r2, [r3, r4]
 1105 0088 1CE0     		b	.L97
 1106              	.L96:
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1107              		.loc 1 441 0
 1108 008a 0133     		add	r3, r3, #1
 1109 008c 214A     		ldr	r2, .L102+28
 1110 008e 1355     		strb	r3, [r2, r4]
 1111 0090 18E0     		b	.L97
 1112              	.L95:
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1113              		.loc 1 449 0
 1114 0092 6B46     		mov	r3, sp
 1115 0094 9B88     		ldrh	r3, [r3, #4]
 1116 0096 AB42     		cmp	r3, r5
 1117 0098 06D2     		bcs	.L98
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 1118              		.loc 1 450 0 discriminator 1
 1119 009a 1F4B     		ldr	r3, .L102+32
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 65


 1120 009c 9B5D     		ldrb	r3, [r3, r6]
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1121              		.loc 1 449 0 discriminator 1
 1122 009e AB42     		cmp	r3, r5
 1123 00a0 10D9     		bls	.L97
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1124              		.loc 1 451 0
 1125 00a2 4346     		mov	r3, r8
 1126 00a4 002B     		cmp	r3, #0
 1127 00a6 0DD1     		bne	.L97
 1128              	.L98:
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1129              		.loc 1 462 0
 1130 00a8 1302     		lsl	r3, r2, #8
 1131              	.LVL120:
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1132              		.loc 1 463 0
 1133 00aa 1948     		ldr	r0, .L102+24
 1134 00ac 0119     		add	r1, r0, r4
 1135 00ae 0E79     		ldrb	r6, [r1, #4]
 1136 00b0 3343     		orr	r3, r6
 1137              	.LVL121:
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1138              		.loc 1 466 0
 1139 00b2 FF18     		add	r7, r7, r3
 1140              	.LVL122:
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1141              		.loc 1 469 0
 1142 00b4 BF1A     		sub	r7, r7, r2
 1143              	.LVL123:
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1144              		.loc 1 472 0
 1145 00b6 3A0A     		lsr	r2, r7, #8
 1146 00b8 6300     		lsl	r3, r4, #1
 1147 00ba C252     		strh	r2, [r0, r3]
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1148              		.loc 1 473 0
 1149 00bc 0F71     		strb	r7, [r1, #4]
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 1150              		.loc 1 475 0
 1151 00be 0022     		mov	r2, #0
 1152 00c0 144B     		ldr	r3, .L102+28
 1153 00c2 1A55     		strb	r2, [r3, r4]
 1154              	.LVL124:
 1155              	.L97:
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1156              		.loc 1 482 0
 1157 00c4 6B46     		mov	r3, sp
 1158 00c6 9E88     		ldrh	r6, [r3, #4]
 1159 00c8 AE42     		cmp	r6, r5
 1160 00ca 0DD2     		bcs	.L99
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1161              		.loc 1 482 0 is_stmt 0 discriminator 1
 1162 00cc 4346     		mov	r3, r8
 1163 00ce 002B     		cmp	r3, #0
 1164 00d0 0AD0     		beq	.L99
 1165              	.LVL125:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 66


 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1166              		.loc 1 486 0 is_stmt 1
 1167 00d2 FF2D     		cmp	r5, #255
 1168 00d4 04D9     		bls	.L100
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1169              		.loc 1 488 0
 1170 00d6 0E4B     		ldr	r3, .L102+24
 1171              	.LVL126:
 1172 00d8 1C19     		add	r4, r3, r4
 1173              	.LVL127:
 1174 00da FF23     		mov	r3, #255
 1175 00dc 2372     		strb	r3, [r4, #8]
 1176 00de 07E0     		b	.L91
 1177              	.LVL128:
 1178              	.L100:
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1179              		.loc 1 492 0
 1180 00e0 0B4B     		ldr	r3, .L102+24
 1181              	.LVL129:
 1182 00e2 1C19     		add	r4, r3, r4
 1183              	.LVL130:
 1184 00e4 2572     		strb	r5, [r4, #8]
 1185 00e6 03E0     		b	.L91
 1186              	.LVL131:
 1187              	.L99:
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1188              		.loc 1 501 0
 1189 00e8 094B     		ldr	r3, .L102+24
 1190 00ea 1C19     		add	r4, r3, r4
 1191              	.LVL132:
 1192 00ec 0023     		mov	r3, #0
 1193 00ee 2372     		strb	r3, [r4, #8]
 1194              	.L91:
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1195              		.loc 1 508 0
 1196 00f0 02B0     		add	sp, sp, #8
 1197              		@ sp needed
 1198              	.LVL133:
 1199              	.LVL134:
 1200 00f2 04BC     		pop	{r2}
 1201 00f4 9046     		mov	r8, r2
 1202 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1203              	.L103:
 1204              		.align	2
 1205              	.L102:
 1206 00f8 00000000 		.word	CapSense_widgetNumber
 1207 00fc 00000000 		.word	CapSense_noiseThreshold
 1208 0100 00000000 		.word	CapSense_sensorRaw
 1209 0104 00000000 		.word	.LANCHOR1
 1210 0108 00000000 		.word	CapSense_rawFilterData1
 1211 010c 00000000 		.word	CapSense_config
 1212 0110 00000000 		.word	.LANCHOR0
 1213 0114 00000000 		.word	CapSense_lowBaselineResetCnt
 1214 0118 00000000 		.word	CapSense_negativeNoiseThreshold
 1215              		.cfi_endproc
 1216              	.LFE40:
 1217              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 67


 1218              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 1219              		.align	2
 1220              		.global	CapSense_UpdateSensorBaseline
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	CapSense_UpdateSensorBaseline, %function
 1224              	CapSense_UpdateSensorBaseline:
 1225              	.LFB41:
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 1226              		.loc 1 542 0
 1227              		.cfi_startproc
 1228              	.LVL135:
 1229 0000 10B5     		push	{r4, lr}
 1230              		.cfi_def_cfa_offset 8
 1231              		.cfi_offset 4, -8
 1232              		.cfi_offset 14, -4
 1233 0002 041C     		mov	r4, r0
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1234              		.loc 1 554 0
 1235 0004 FFF7FEFF 		bl	CapSense_UpdateThresholds
 1236              	.LVL136:
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1237              		.loc 1 557 0
 1238 0008 201C     		mov	r0, r4
 1239 000a FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1240              	.LVL137:
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1241              		.loc 1 563 0
 1242              		@ sp needed
 1243              	.LVL138:
 1244 000e 10BD     		pop	{r4, pc}
 1245              		.cfi_endproc
 1246              	.LFE41:
 1247              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1248              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1249              		.align	2
 1250              		.global	CapSense_UpdateEnabledBaselines
 1251              		.code	16
 1252              		.thumb_func
 1253              		.type	CapSense_UpdateEnabledBaselines, %function
 1254              	CapSense_UpdateEnabledBaselines:
 1255              	.LFB42:
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 1256              		.loc 1 596 0
 1257              		.cfi_startproc
 1258 0000 10B5     		push	{r4, lr}
 1259              		.cfi_def_cfa_offset 8
 1260              		.cfi_offset 4, -8
 1261              		.cfi_offset 14, -4
 1262              	.LVL139:
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1263              		.loc 1 600 0
 1264 0002 0024     		mov	r4, #0
 1265 0004 09E0     		b	.L106
 1266              	.LVL140:
 1267              	.L108:
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 68


 1268              		.loc 1 602 0
 1269 0006 0648     		ldr	r0, .L109
 1270 0008 211C     		mov	r1, r4
 1271 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1272              	.LVL141:
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1273              		.loc 1 604 0
 1274 000e 0028     		cmp	r0, #0
 1275 0010 02D0     		beq	.L107
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1276              		.loc 1 606 0
 1277 0012 201C     		mov	r0, r4
 1278              	.LVL142:
 1279 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1280              	.LVL143:
 1281              	.L107:
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1282              		.loc 1 600 0 discriminator 2
 1283 0018 0134     		add	r4, r4, #1
 1284              	.LVL144:
 1285              	.L106:
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1286              		.loc 1 600 0 is_stmt 0 discriminator 1
 1287 001a 012C     		cmp	r4, #1
 1288 001c F3D9     		bls	.L108
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1289              		.loc 1 609 0 is_stmt 1
 1290              		@ sp needed
 1291              	.LVL145:
 1292 001e 10BD     		pop	{r4, pc}
 1293              	.L110:
 1294              		.align	2
 1295              	.L109:
 1296 0020 00000000 		.word	CapSense_sensorEnableMask
 1297              		.cfi_endproc
 1298              	.LFE42:
 1299              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1300              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1301              		.align	2
 1302              		.global	CapSense_UpdateWidgetBaseline
 1303              		.code	16
 1304              		.thumb_func
 1305              		.type	CapSense_UpdateWidgetBaseline, %function
 1306              	CapSense_UpdateWidgetBaseline:
 1307              	.LFB43:
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 1308              		.loc 1 641 0
 1309              		.cfi_startproc
 1310              	.LVL146:
 1311 0000 38B5     		push	{r3, r4, r5, lr}
 1312              		.cfi_def_cfa_offset 16
 1313              		.cfi_offset 3, -16
 1314              		.cfi_offset 4, -12
 1315              		.cfi_offset 5, -8
 1316              		.cfi_offset 14, -4
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1317              		.loc 1 649 0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 69


 1318 0002 094B     		ldr	r3, .L115
 1319 0004 1A18     		add	r2, r3, r0
 1320 0006 1579     		ldrb	r5, [r2, #4]
 1321              	.LVL147:
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1322              		.loc 1 652 0
 1323 0008 1C5C     		ldrb	r4, [r3, r0]
 1324              	.LVL148:
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1325              		.loc 1 655 0
 1326 000a 2D19     		add	r5, r5, r4
 1327              	.LVL149:
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1328              		.loc 1 657 0
 1329 000c 09E0     		b	.L112
 1330              	.LVL150:
 1331              	.L114:
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1332              		.loc 1 659 0
 1333 000e 0748     		ldr	r0, .L115+4
 1334 0010 211C     		mov	r1, r4
 1335 0012 FFF7FEFF 		bl	CapSense_GetBitValue
 1336              	.LVL151:
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1337              		.loc 1 661 0
 1338 0016 0028     		cmp	r0, #0
 1339 0018 02D0     		beq	.L113
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1340              		.loc 1 663 0
 1341 001a 201C     		mov	r0, r4
 1342              	.LVL152:
 1343 001c FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1344              	.LVL153:
 1345              	.L113:
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1346              		.loc 1 657 0 discriminator 2
 1347 0020 0134     		add	r4, r4, #1
 1348              	.LVL154:
 1349              	.L112:
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1350              		.loc 1 657 0 is_stmt 0 discriminator 1
 1351 0022 AC42     		cmp	r4, r5
 1352 0024 F3D3     		bcc	.L114
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1353              		.loc 1 666 0 is_stmt 1
 1354              		@ sp needed
 1355              	.LVL155:
 1356              	.LVL156:
 1357 0026 38BD     		pop	{r3, r4, r5, pc}
 1358              	.L116:
 1359              		.align	2
 1360              	.L115:
 1361 0028 00000000 		.word	.LANCHOR2
 1362 002c 00000000 		.word	CapSense_sensorEnableMask
 1363              		.cfi_endproc
 1364              	.LFE43:
 1365              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 70


 1366              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1367              		.align	2
 1368              		.global	CapSense_GetWidgetNumber
 1369              		.code	16
 1370              		.thumb_func
 1371              		.type	CapSense_GetWidgetNumber, %function
 1372              	CapSense_GetWidgetNumber:
 1373              	.LFB65:
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 71


2550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 72


2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 73


2664:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 74


2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1374              		.loc 1 2724 0
 1375              		.cfi_startproc
 1376              	.LVL157:
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 1377              		.loc 1 2725 0
 1378 0000 014B     		ldr	r3, .L118
 1379 0002 185C     		ldrb	r0, [r3, r0]
 1380              	.LVL158:
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1381              		.loc 1 2726 0
 1382              		@ sp needed
 1383 0004 7047     		bx	lr
 1384              	.L119:
 1385 0006 C046     		.align	2
 1386              	.L118:
 1387 0008 00000000 		.word	CapSense_widgetNumber
 1388              		.cfi_endproc
 1389              	.LFE65:
 1390              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1391              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1392              		.align	2
 1393              		.global	CapSense_GetLowBaselineReset
 1394              		.code	16
 1395              		.thumb_func
 1396              		.type	CapSense_GetLowBaselineReset, %function
 1397              	CapSense_GetLowBaselineReset:
 1398              	.LFB66:
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1399              		.loc 1 2750 0
 1400              		.cfi_startproc
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 75


 1401              	.LVL159:
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 1402              		.loc 1 2751 0
 1403 0000 014B     		ldr	r3, .L121
 1404 0002 1818     		add	r0, r3, r0
 1405              	.LVL160:
 1406 0004 0079     		ldrb	r0, [r0, #4]
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1407              		.loc 1 2752 0
 1408              		@ sp needed
 1409 0006 7047     		bx	lr
 1410              	.L122:
 1411              		.align	2
 1412              	.L121:
 1413 0008 00000000 		.word	.LANCHOR1
 1414              		.cfi_endproc
 1415              	.LFE66:
 1416              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1417              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1418              		.align	2
 1419              		.global	CapSense_GetDebounce
 1420              		.code	16
 1421              		.thumb_func
 1422              		.type	CapSense_GetDebounce, %function
 1423              	CapSense_GetDebounce:
 1424              	.LFB67:
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1425              		.loc 1 2776 0
 1426              		.cfi_startproc
 1427              	.LVL161:
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 1428              		.loc 1 2777 0
 1429 0000 014B     		ldr	r3, .L124
 1430 0002 185C     		ldrb	r0, [r3, r0]
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 76


 1431              	.LVL162:
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1432              		.loc 1 2778 0
 1433              		@ sp needed
 1434 0004 7047     		bx	lr
 1435              	.L125:
 1436 0006 C046     		.align	2
 1437              	.L124:
 1438 0008 00000000 		.word	.LANCHOR1
 1439              		.cfi_endproc
 1440              	.LFE67:
 1441              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1442              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1443              		.align	2
 1444              		.global	CapSense_EnableRawDataFilters
 1445              		.code	16
 1446              		.thumb_func
 1447              		.type	CapSense_EnableRawDataFilters, %function
 1448              	CapSense_EnableRawDataFilters:
 1449              	.LFB68:
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1450              		.loc 1 2802 0
 1451              		.cfi_startproc
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1452              		.loc 1 2803 0
 1453 0000 0122     		mov	r2, #1
 1454 0002 014B     		ldr	r3, .L127
 1455 0004 9A71     		strb	r2, [r3, #6]
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1456              		.loc 1 2804 0
 1457              		@ sp needed
 1458 0006 7047     		bx	lr
 1459              	.L128:
 1460              		.align	2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 77


 1461              	.L127:
 1462 0008 00000000 		.word	.LANCHOR1
 1463              		.cfi_endproc
 1464              	.LFE68:
 1465              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1466              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1467              		.align	2
 1468              		.global	CapSense_DisableRawDataFilters
 1469              		.code	16
 1470              		.thumb_func
 1471              		.type	CapSense_DisableRawDataFilters, %function
 1472              	CapSense_DisableRawDataFilters:
 1473              	.LFB69:
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1474              		.loc 1 2827 0
 1475              		.cfi_startproc
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1476              		.loc 1 2828 0
 1477 0000 0022     		mov	r2, #0
 1478 0002 014B     		ldr	r3, .L130
 1479 0004 9A71     		strb	r2, [r3, #6]
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1480              		.loc 1 2829 0
 1481              		@ sp needed
 1482 0006 7047     		bx	lr
 1483              	.L131:
 1484              		.align	2
 1485              	.L130:
 1486 0008 00000000 		.word	.LANCHOR1
 1487              		.cfi_endproc
 1488              	.LFE69:
 1489              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1490              		.global	CapSense_numberOfSensors
 1491              		.global	CapSense_rawDataIndex
 1492              		.global	CapSense_debounce
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 78


 1493              		.comm	CapSense_hysteresis,2,4
 1494              		.comm	CapSense_negativeNoiseThreshold,2,4
 1495              		.comm	CapSense_noiseThreshold,2,4
 1496              		.comm	CapSense_fingerThreshold,2,4
 1497              		.global	CapSense_enableRawFilters
 1498              		.global	CapSense_lowBaselineReset
 1499              		.comm	CapSense_lowBaselineResetCnt,2,4
 1500              		.global	CapSense_sensorOnMask
 1501              		.global	CapSense_sensorSignal
 1502              		.global	CapSense_sensorBaselineLow
 1503              		.global	CapSense_sensorBaseline
 1504              		.comm	CapSense_rawFilterData1,4,4
 1505              		.section	.rodata
 1506              		.align	2
 1507              		.set	.LANCHOR2,. + 0
 1508              		.type	CapSense_rawDataIndex, %object
 1509              		.size	CapSense_rawDataIndex, 2
 1510              	CapSense_rawDataIndex:
 1511 0000 00       		.byte	0
 1512 0001 01       		.byte	1
 1513 0002 0000     		.space	2
 1514              		.type	CapSense_numberOfSensors, %object
 1515              		.size	CapSense_numberOfSensors, 2
 1516              	CapSense_numberOfSensors:
 1517 0004 01       		.byte	1
 1518 0005 01       		.byte	1
 1519 0006 0000     		.data
 1520              		.align	2
 1521              		.set	.LANCHOR1,. + 0
 1522              		.type	CapSense_debounce, %object
 1523              		.size	CapSense_debounce, 2
 1524              	CapSense_debounce:
 1525 0000 05       		.byte	5
 1526 0001 05       		.byte	5
 1527 0002 0000     		.space	2
 1528              		.type	CapSense_lowBaselineReset, %object
 1529              		.size	CapSense_lowBaselineReset, 2
 1530              	CapSense_lowBaselineReset:
 1531 0004 1E       		.byte	30
 1532 0005 1E       		.byte	30
 1533              		.type	CapSense_enableRawFilters, %object
 1534              		.size	CapSense_enableRawFilters, 1
 1535              	CapSense_enableRawFilters:
 1536 0006 01       		.byte	1
 1537 0007 00       		.bss
 1538              		.align	2
 1539              		.set	.LANCHOR0,. + 0
 1540              		.type	CapSense_sensorBaseline, %object
 1541              		.size	CapSense_sensorBaseline, 4
 1542              	CapSense_sensorBaseline:
 1543 0000 00000000 		.space	4
 1544              		.type	CapSense_sensorBaselineLow, %object
 1545              		.size	CapSense_sensorBaselineLow, 2
 1546              	CapSense_sensorBaselineLow:
 1547 0004 0000     		.space	2
 1548 0006 0000     		.space	2
 1549              		.type	CapSense_sensorSignal, %object
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 79


 1550              		.size	CapSense_sensorSignal, 2
 1551              	CapSense_sensorSignal:
 1552 0008 0000     		.space	2
 1553 000a 0000     		.space	2
 1554              		.type	CapSense_debounceCounter, %object
 1555              		.size	CapSense_debounceCounter, 3
 1556              	CapSense_debounceCounter:
 1557 000c 000000   		.space	3
 1558 000f 00       		.space	1
 1559              		.type	CapSense_sensorOnMask, %object
 1560              		.size	CapSense_sensorOnMask, 1
 1561              	CapSense_sensorOnMask:
 1562 0010 00       		.space	1
 1563 0011 000000   		.text
 1564              	.Letext0:
 1565              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1566              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 1567              		.file 4 ".\\Generated_Source\\PSoC4\\CapSense.h"
 1568              		.section	.debug_info,"",%progbits
 1569              	.Ldebug_info0:
 1570 0000 180E0000 		.4byte	0xe18
 1571 0004 0400     		.2byte	0x4
 1572 0006 00000000 		.4byte	.Ldebug_abbrev0
 1573 000a 04       		.byte	0x4
 1574 000b 01       		.uleb128 0x1
 1575 000c 68070000 		.4byte	.LASF124
 1576 0010 01       		.byte	0x1
 1577 0011 66050000 		.4byte	.LASF125
 1578 0015 19070000 		.4byte	.LASF126
 1579 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1580 001d 00000000 		.4byte	0
 1581 0021 00000000 		.4byte	.Ldebug_line0
 1582 0025 02       		.uleb128 0x2
 1583 0026 01       		.byte	0x1
 1584 0027 06       		.byte	0x6
 1585 0028 B4090000 		.4byte	.LASF0
 1586 002c 02       		.uleb128 0x2
 1587 002d 01       		.byte	0x1
 1588 002e 08       		.byte	0x8
 1589 002f C7080000 		.4byte	.LASF1
 1590 0033 02       		.uleb128 0x2
 1591 0034 02       		.byte	0x2
 1592 0035 05       		.byte	0x5
 1593 0036 FA060000 		.4byte	.LASF2
 1594 003a 02       		.uleb128 0x2
 1595 003b 02       		.byte	0x2
 1596 003c 07       		.byte	0x7
 1597 003d C0090000 		.4byte	.LASF3
 1598 0041 02       		.uleb128 0x2
 1599 0042 04       		.byte	0x4
 1600 0043 05       		.byte	0x5
 1601 0044 04070000 		.4byte	.LASF4
 1602 0048 02       		.uleb128 0x2
 1603 0049 04       		.byte	0x4
 1604 004a 07       		.byte	0x7
 1605 004b 59080000 		.4byte	.LASF5
 1606 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 80


 1607 0050 08       		.byte	0x8
 1608 0051 05       		.byte	0x5
 1609 0052 8F050000 		.4byte	.LASF6
 1610 0056 02       		.uleb128 0x2
 1611 0057 08       		.byte	0x8
 1612 0058 07       		.byte	0x7
 1613 0059 D4020000 		.4byte	.LASF7
 1614 005d 03       		.uleb128 0x3
 1615 005e 04       		.byte	0x4
 1616 005f 05       		.byte	0x5
 1617 0060 696E7400 		.ascii	"int\000"
 1618 0064 02       		.uleb128 0x2
 1619 0065 04       		.byte	0x4
 1620 0066 07       		.byte	0x7
 1621 0067 18010000 		.4byte	.LASF8
 1622 006b 04       		.uleb128 0x4
 1623 006c 320A0000 		.4byte	.LASF9
 1624 0070 02       		.byte	0x2
 1625 0071 9801     		.2byte	0x198
 1626 0073 2C000000 		.4byte	0x2c
 1627 0077 04       		.uleb128 0x4
 1628 0078 0C050000 		.4byte	.LASF10
 1629 007c 02       		.byte	0x2
 1630 007d 9901     		.2byte	0x199
 1631 007f 3A000000 		.4byte	0x3a
 1632 0083 04       		.uleb128 0x4
 1633 0084 81060000 		.4byte	.LASF11
 1634 0088 02       		.byte	0x2
 1635 0089 9A01     		.2byte	0x19a
 1636 008b 48000000 		.4byte	0x48
 1637 008f 02       		.uleb128 0x2
 1638 0090 04       		.byte	0x4
 1639 0091 04       		.byte	0x4
 1640 0092 8F020000 		.4byte	.LASF12
 1641 0096 02       		.uleb128 0x2
 1642 0097 08       		.byte	0x8
 1643 0098 04       		.byte	0x4
 1644 0099 380A0000 		.4byte	.LASF13
 1645 009d 02       		.uleb128 0x2
 1646 009e 01       		.byte	0x1
 1647 009f 08       		.byte	0x8
 1648 00a0 D5040000 		.4byte	.LASF14
 1649 00a4 02       		.uleb128 0x2
 1650 00a5 04       		.byte	0x4
 1651 00a6 07       		.byte	0x7
 1652 00a7 50080000 		.4byte	.LASF15
 1653 00ab 05       		.uleb128 0x5
 1654 00ac 04       		.byte	0x4
 1655 00ad 06       		.uleb128 0x6
 1656 00ae 5C       		.byte	0x5c
 1657 00af 03       		.byte	0x3
 1658 00b0 2F       		.byte	0x2f
 1659 00b1 CA010000 		.4byte	0x1ca
 1660 00b5 07       		.uleb128 0x7
 1661 00b6 18050000 		.4byte	.LASF16
 1662 00ba 03       		.byte	0x3
 1663 00bb 31       		.byte	0x31
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 81


 1664 00bc CA010000 		.4byte	0x1ca
 1665 00c0 00       		.byte	0
 1666 00c1 07       		.uleb128 0x7
 1667 00c2 EB060000 		.4byte	.LASF17
 1668 00c6 03       		.byte	0x3
 1669 00c7 32       		.byte	0x32
 1670 00c8 CA010000 		.4byte	0x1ca
 1671 00cc 04       		.byte	0x4
 1672 00cd 07       		.uleb128 0x7
 1673 00ce 51090000 		.4byte	.LASF18
 1674 00d2 03       		.byte	0x3
 1675 00d3 33       		.byte	0x33
 1676 00d4 CA010000 		.4byte	0x1ca
 1677 00d8 08       		.byte	0x8
 1678 00d9 07       		.uleb128 0x7
 1679 00da BA080000 		.4byte	.LASF19
 1680 00de 03       		.byte	0x3
 1681 00df 34       		.byte	0x34
 1682 00e0 CA010000 		.4byte	0x1ca
 1683 00e4 0C       		.byte	0xc
 1684 00e5 07       		.uleb128 0x7
 1685 00e6 AA090000 		.4byte	.LASF20
 1686 00ea 03       		.byte	0x3
 1687 00eb 35       		.byte	0x35
 1688 00ec CA010000 		.4byte	0x1ca
 1689 00f0 10       		.byte	0x10
 1690 00f1 07       		.uleb128 0x7
 1691 00f2 DA060000 		.4byte	.LASF21
 1692 00f6 03       		.byte	0x3
 1693 00f7 36       		.byte	0x36
 1694 00f8 D0010000 		.4byte	0x1d0
 1695 00fc 14       		.byte	0x14
 1696 00fd 07       		.uleb128 0x7
 1697 00fe 95020000 		.4byte	.LASF22
 1698 0102 03       		.byte	0x3
 1699 0103 37       		.byte	0x37
 1700 0104 DB010000 		.4byte	0x1db
 1701 0108 18       		.byte	0x18
 1702 0109 07       		.uleb128 0x7
 1703 010a D6030000 		.4byte	.LASF23
 1704 010e 03       		.byte	0x3
 1705 010f 38       		.byte	0x38
 1706 0110 CA010000 		.4byte	0x1ca
 1707 0114 1C       		.byte	0x1c
 1708 0115 07       		.uleb128 0x7
 1709 0116 BF020000 		.4byte	.LASF24
 1710 011a 03       		.byte	0x3
 1711 011b 39       		.byte	0x39
 1712 011c CA010000 		.4byte	0x1ca
 1713 0120 20       		.byte	0x20
 1714 0121 07       		.uleb128 0x7
 1715 0122 66010000 		.4byte	.LASF25
 1716 0126 03       		.byte	0x3
 1717 0127 3A       		.byte	0x3a
 1718 0128 CA010000 		.4byte	0x1ca
 1719 012c 24       		.byte	0x24
 1720 012d 07       		.uleb128 0x7
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 82


 1721 012e 21060000 		.4byte	.LASF26
 1722 0132 03       		.byte	0x3
 1723 0133 3B       		.byte	0x3b
 1724 0134 E1010000 		.4byte	0x1e1
 1725 0138 28       		.byte	0x28
 1726 0139 07       		.uleb128 0x7
 1727 013a 35010000 		.4byte	.LASF27
 1728 013e 03       		.byte	0x3
 1729 013f 3C       		.byte	0x3c
 1730 0140 E1010000 		.4byte	0x1e1
 1731 0144 2C       		.byte	0x2c
 1732 0145 07       		.uleb128 0x7
 1733 0146 83080000 		.4byte	.LASF28
 1734 014a 03       		.byte	0x3
 1735 014b 3D       		.byte	0x3d
 1736 014c E1010000 		.4byte	0x1e1
 1737 0150 30       		.byte	0x30
 1738 0151 07       		.uleb128 0x7
 1739 0152 2E080000 		.4byte	.LASF29
 1740 0156 03       		.byte	0x3
 1741 0157 3E       		.byte	0x3e
 1742 0158 CA010000 		.4byte	0x1ca
 1743 015c 34       		.byte	0x34
 1744 015d 07       		.uleb128 0x7
 1745 015e 48000000 		.4byte	.LASF30
 1746 0162 03       		.byte	0x3
 1747 0163 3F       		.byte	0x3f
 1748 0164 CA010000 		.4byte	0x1ca
 1749 0168 38       		.byte	0x38
 1750 0169 07       		.uleb128 0x7
 1751 016a FD040000 		.4byte	.LASF31
 1752 016e 03       		.byte	0x3
 1753 016f 40       		.byte	0x40
 1754 0170 D0010000 		.4byte	0x1d0
 1755 0174 3C       		.byte	0x3c
 1756 0175 07       		.uleb128 0x7
 1757 0176 DF010000 		.4byte	.LASF32
 1758 017a 03       		.byte	0x3
 1759 017b 41       		.byte	0x41
 1760 017c D0010000 		.4byte	0x1d0
 1761 0180 40       		.byte	0x40
 1762 0181 07       		.uleb128 0x7
 1763 0182 95000000 		.4byte	.LASF33
 1764 0186 03       		.byte	0x3
 1765 0187 42       		.byte	0x42
 1766 0188 D0010000 		.4byte	0x1d0
 1767 018c 44       		.byte	0x44
 1768 018d 07       		.uleb128 0x7
 1769 018e E7050000 		.4byte	.LASF34
 1770 0192 03       		.byte	0x3
 1771 0193 43       		.byte	0x43
 1772 0194 F6010000 		.4byte	0x1f6
 1773 0198 48       		.byte	0x48
 1774 0199 07       		.uleb128 0x7
 1775 019a BF050000 		.4byte	.LASF35
 1776 019e 03       		.byte	0x3
 1777 019f 44       		.byte	0x44
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 83


 1778 01a0 07020000 		.4byte	0x207
 1779 01a4 4C       		.byte	0x4c
 1780 01a5 07       		.uleb128 0x7
 1781 01a6 EC030000 		.4byte	.LASF36
 1782 01aa 03       		.byte	0x3
 1783 01ab 45       		.byte	0x45
 1784 01ac F6010000 		.4byte	0x1f6
 1785 01b0 50       		.byte	0x50
 1786 01b1 07       		.uleb128 0x7
 1787 01b2 A5000000 		.4byte	.LASF37
 1788 01b6 03       		.byte	0x3
 1789 01b7 46       		.byte	0x46
 1790 01b8 21020000 		.4byte	0x221
 1791 01bc 54       		.byte	0x54
 1792 01bd 07       		.uleb128 0x7
 1793 01be D3090000 		.4byte	.LASF38
 1794 01c2 03       		.byte	0x3
 1795 01c3 47       		.byte	0x47
 1796 01c4 3C020000 		.4byte	0x23c
 1797 01c8 58       		.byte	0x58
 1798 01c9 00       		.byte	0
 1799 01ca 08       		.uleb128 0x8
 1800 01cb 04       		.byte	0x4
 1801 01cc 6B000000 		.4byte	0x6b
 1802 01d0 08       		.uleb128 0x8
 1803 01d1 04       		.byte	0x4
 1804 01d2 D6010000 		.4byte	0x1d6
 1805 01d6 09       		.uleb128 0x9
 1806 01d7 6B000000 		.4byte	0x6b
 1807 01db 08       		.uleb128 0x8
 1808 01dc 04       		.byte	0x4
 1809 01dd 83000000 		.4byte	0x83
 1810 01e1 08       		.uleb128 0x8
 1811 01e2 04       		.byte	0x4
 1812 01e3 77000000 		.4byte	0x77
 1813 01e7 0A       		.uleb128 0xa
 1814 01e8 77000000 		.4byte	0x77
 1815 01ec F6010000 		.4byte	0x1f6
 1816 01f0 0B       		.uleb128 0xb
 1817 01f1 83000000 		.4byte	0x83
 1818 01f5 00       		.byte	0
 1819 01f6 08       		.uleb128 0x8
 1820 01f7 04       		.byte	0x4
 1821 01f8 E7010000 		.4byte	0x1e7
 1822 01fc 0C       		.uleb128 0xc
 1823 01fd 07020000 		.4byte	0x207
 1824 0201 0B       		.uleb128 0xb
 1825 0202 83000000 		.4byte	0x83
 1826 0206 00       		.byte	0
 1827 0207 08       		.uleb128 0x8
 1828 0208 04       		.byte	0x4
 1829 0209 FC010000 		.4byte	0x1fc
 1830 020d 0A       		.uleb128 0xa
 1831 020e 83000000 		.4byte	0x83
 1832 0212 21020000 		.4byte	0x221
 1833 0216 0B       		.uleb128 0xb
 1834 0217 D0010000 		.4byte	0x1d0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 84


 1835 021b 0B       		.uleb128 0xb
 1836 021c 83000000 		.4byte	0x83
 1837 0220 00       		.byte	0
 1838 0221 08       		.uleb128 0x8
 1839 0222 04       		.byte	0x4
 1840 0223 0D020000 		.4byte	0x20d
 1841 0227 0C       		.uleb128 0xc
 1842 0228 3C020000 		.4byte	0x23c
 1843 022c 0B       		.uleb128 0xb
 1844 022d CA010000 		.4byte	0x1ca
 1845 0231 0B       		.uleb128 0xb
 1846 0232 83000000 		.4byte	0x83
 1847 0236 0B       		.uleb128 0xb
 1848 0237 83000000 		.4byte	0x83
 1849 023b 00       		.byte	0
 1850 023c 08       		.uleb128 0x8
 1851 023d 04       		.byte	0x4
 1852 023e 27020000 		.4byte	0x227
 1853 0242 0D       		.uleb128 0xd
 1854 0243 3F0A0000 		.4byte	.LASF39
 1855 0247 03       		.byte	0x3
 1856 0248 48       		.byte	0x48
 1857 0249 AD000000 		.4byte	0xad
 1858 024d 06       		.uleb128 0x6
 1859 024e 0C       		.byte	0xc
 1860 024f 03       		.byte	0x3
 1861 0250 4A       		.byte	0x4a
 1862 0251 9E020000 		.4byte	0x29e
 1863 0255 07       		.uleb128 0x7
 1864 0256 96040000 		.4byte	.LASF40
 1865 025a 03       		.byte	0x3
 1866 025b 4C       		.byte	0x4c
 1867 025c 6B000000 		.4byte	0x6b
 1868 0260 00       		.byte	0
 1869 0261 07       		.uleb128 0x7
 1870 0262 EC010000 		.4byte	.LASF41
 1871 0266 03       		.byte	0x3
 1872 0267 4D       		.byte	0x4d
 1873 0268 6B000000 		.4byte	0x6b
 1874 026c 01       		.byte	0x1
 1875 026d 07       		.uleb128 0x7
 1876 026e 25010000 		.4byte	.LASF42
 1877 0272 03       		.byte	0x3
 1878 0273 4E       		.byte	0x4e
 1879 0274 6B000000 		.4byte	0x6b
 1880 0278 02       		.byte	0x2
 1881 0279 07       		.uleb128 0x7
 1882 027a AF040000 		.4byte	.LASF43
 1883 027e 03       		.byte	0x3
 1884 027f 4F       		.byte	0x4f
 1885 0280 77000000 		.4byte	0x77
 1886 0284 04       		.byte	0x4
 1887 0285 07       		.uleb128 0x7
 1888 0286 CC060000 		.4byte	.LASF44
 1889 028a 03       		.byte	0x3
 1890 028b 50       		.byte	0x50
 1891 028c 77000000 		.4byte	0x77
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 85


 1892 0290 06       		.byte	0x6
 1893 0291 07       		.uleb128 0x7
 1894 0292 6B080000 		.4byte	.LASF45
 1895 0296 03       		.byte	0x3
 1896 0297 51       		.byte	0x51
 1897 0298 9E020000 		.4byte	0x29e
 1898 029c 08       		.byte	0x8
 1899 029d 00       		.byte	0
 1900 029e 08       		.uleb128 0x8
 1901 029f 04       		.byte	0x4
 1902 02a0 A4020000 		.4byte	0x2a4
 1903 02a4 09       		.uleb128 0x9
 1904 02a5 42020000 		.4byte	0x242
 1905 02a9 0D       		.uleb128 0xd
 1906 02aa 98010000 		.4byte	.LASF46
 1907 02ae 03       		.byte	0x3
 1908 02af 52       		.byte	0x52
 1909 02b0 4D020000 		.4byte	0x24d
 1910 02b4 0E       		.uleb128 0xe
 1911 02b5 0F060000 		.4byte	.LASF47
 1912 02b9 01       		.byte	0x1
 1913 02ba 88       		.byte	0x88
 1914 02bb 00000000 		.4byte	.LFB36
 1915 02bf 3C000000 		.4byte	.LFE36-.LFB36
 1916 02c3 01       		.uleb128 0x1
 1917 02c4 9C       		.byte	0x9c
 1918 02c5 E8020000 		.4byte	0x2e8
 1919 02c9 0F       		.uleb128 0xf
 1920 02ca A8040000 		.4byte	.LASF49
 1921 02ce 01       		.byte	0x1
 1922 02cf 88       		.byte	0x88
 1923 02d0 83000000 		.4byte	0x83
 1924 02d4 00000000 		.4byte	.LLST0
 1925 02d8 10       		.uleb128 0x10
 1926 02d9 23030000 		.4byte	.LASF51
 1927 02dd 01       		.byte	0x1
 1928 02de 8C       		.byte	0x8c
 1929 02df 6B000000 		.4byte	0x6b
 1930 02e3 21000000 		.4byte	.LLST1
 1931 02e7 00       		.byte	0
 1932 02e8 0E       		.uleb128 0xe
 1933 02e9 76010000 		.4byte	.LASF48
 1934 02ed 01       		.byte	0x1
 1935 02ee D4       		.byte	0xd4
 1936 02ef 00000000 		.4byte	.LFB37
 1937 02f3 18000000 		.4byte	.LFE37-.LFB37
 1938 02f7 01       		.uleb128 0x1
 1939 02f8 9C       		.byte	0x9c
 1940 02f9 3A030000 		.4byte	0x33a
 1941 02fd 0F       		.uleb128 0xf
 1942 02fe A8040000 		.4byte	.LASF49
 1943 0302 01       		.byte	0x1
 1944 0303 D4       		.byte	0xd4
 1945 0304 83000000 		.4byte	0x83
 1946 0308 34000000 		.4byte	.LLST2
 1947 030c 11       		.uleb128 0x11
 1948 030d 08000000 		.4byte	.LVL5
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 86


 1949 0311 900D0000 		.4byte	0xd90
 1950 0315 20030000 		.4byte	0x320
 1951 0319 12       		.uleb128 0x12
 1952 031a 01       		.uleb128 0x1
 1953 031b 50       		.byte	0x50
 1954 031c 02       		.uleb128 0x2
 1955 031d 74       		.byte	0x74
 1956 031e 00       		.sleb128 0
 1957 031f 00       		.byte	0
 1958 0320 13       		.uleb128 0x13
 1959 0321 0C000000 		.4byte	.LVL6
 1960 0325 A10D0000 		.4byte	0xda1
 1961 0329 14       		.uleb128 0x14
 1962 032a 16000000 		.4byte	.LVL7
 1963 032e B4020000 		.4byte	0x2b4
 1964 0332 12       		.uleb128 0x12
 1965 0333 01       		.uleb128 0x1
 1966 0334 50       		.byte	0x50
 1967 0335 02       		.uleb128 0x2
 1968 0336 74       		.byte	0x74
 1969 0337 00       		.sleb128 0
 1970 0338 00       		.byte	0
 1971 0339 00       		.byte	0
 1972 033a 0E       		.uleb128 0xe
 1973 033b FB080000 		.4byte	.LASF50
 1974 033f 01       		.byte	0x1
 1975 0340 F9       		.byte	0xf9
 1976 0341 00000000 		.4byte	.LFB38
 1977 0345 14000000 		.4byte	.LFE38-.LFB38
 1978 0349 01       		.uleb128 0x1
 1979 034a 9C       		.byte	0x9c
 1980 034b 6D030000 		.4byte	0x36d
 1981 034f 15       		.uleb128 0x15
 1982 0350 6900     		.ascii	"i\000"
 1983 0352 01       		.byte	0x1
 1984 0353 FB       		.byte	0xfb
 1985 0354 83000000 		.4byte	0x83
 1986 0358 60000000 		.4byte	.LLST3
 1987 035c 14       		.uleb128 0x14
 1988 035d 0C000000 		.4byte	.LVL11
 1989 0361 E8020000 		.4byte	0x2e8
 1990 0365 12       		.uleb128 0x12
 1991 0366 01       		.uleb128 0x1
 1992 0367 50       		.byte	0x50
 1993 0368 02       		.uleb128 0x2
 1994 0369 74       		.byte	0x74
 1995 036a 00       		.sleb128 0
 1996 036b 00       		.byte	0
 1997 036c 00       		.byte	0
 1998 036d 16       		.uleb128 0x16
 1999 036e 42010000 		.4byte	.LASF52
 2000 0372 01       		.byte	0x1
 2001 0373 1C01     		.2byte	0x11c
 2002 0375 00000000 		.4byte	.LFB39
 2003 0379 30000000 		.4byte	.LFE39-.LFB39
 2004 037d 01       		.uleb128 0x1
 2005 037e 9C       		.byte	0x9c
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 87


 2006 037f D8030000 		.4byte	0x3d8
 2007 0383 17       		.uleb128 0x17
 2008 0384 6900     		.ascii	"i\000"
 2009 0386 01       		.byte	0x1
 2010 0387 1E01     		.2byte	0x11e
 2011 0389 83000000 		.4byte	0x83
 2012 038d 7F000000 		.4byte	.LLST4
 2013 0391 18       		.uleb128 0x18
 2014 0392 FB000000 		.4byte	.LASF53
 2015 0396 01       		.byte	0x1
 2016 0397 1F01     		.2byte	0x11f
 2017 0399 83000000 		.4byte	0x83
 2018 039d 92000000 		.4byte	.LLST5
 2019 03a1 13       		.uleb128 0x13
 2020 03a2 06000000 		.4byte	.LVL14
 2021 03a6 AC0D0000 		.4byte	0xdac
 2022 03aa 13       		.uleb128 0x13
 2023 03ab 0A000000 		.4byte	.LVL15
 2024 03af A10D0000 		.4byte	0xda1
 2025 03b3 11       		.uleb128 0x11
 2026 03b4 1A000000 		.4byte	.LVL17
 2027 03b8 B30D0000 		.4byte	0xdb3
 2028 03bc C7030000 		.4byte	0x3c7
 2029 03c0 12       		.uleb128 0x12
 2030 03c1 01       		.uleb128 0x1
 2031 03c2 51       		.byte	0x51
 2032 03c3 02       		.uleb128 0x2
 2033 03c4 74       		.byte	0x74
 2034 03c5 00       		.sleb128 0
 2035 03c6 00       		.byte	0
 2036 03c7 14       		.uleb128 0x14
 2037 03c8 24000000 		.4byte	.LVL19
 2038 03cc B4020000 		.4byte	0x2b4
 2039 03d0 12       		.uleb128 0x12
 2040 03d1 01       		.uleb128 0x1
 2041 03d2 50       		.byte	0x50
 2042 03d3 02       		.uleb128 0x2
 2043 03d4 74       		.byte	0x74
 2044 03d5 00       		.sleb128 0
 2045 03d6 00       		.byte	0
 2046 03d7 00       		.byte	0
 2047 03d8 19       		.uleb128 0x19
 2048 03d9 1B090000 		.4byte	.LASF56
 2049 03dd 01       		.byte	0x1
 2050 03de B102     		.2byte	0x2b1
 2051 03e0 77000000 		.4byte	0x77
 2052 03e4 00000000 		.4byte	.LFB44
 2053 03e8 0C000000 		.4byte	.LFE44-.LFB44
 2054 03ec 01       		.uleb128 0x1
 2055 03ed 9C       		.byte	0x9c
 2056 03ee 03040000 		.4byte	0x403
 2057 03f2 1A       		.uleb128 0x1a
 2058 03f3 A8040000 		.4byte	.LASF49
 2059 03f7 01       		.byte	0x1
 2060 03f8 B102     		.2byte	0x2b1
 2061 03fa 83000000 		.4byte	0x83
 2062 03fe A5000000 		.4byte	.LLST6
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 88


 2063 0402 00       		.byte	0
 2064 0403 16       		.uleb128 0x16
 2065 0404 C6010000 		.4byte	.LASF54
 2066 0408 01       		.byte	0x1
 2067 0409 CC02     		.2byte	0x2cc
 2068 040b 00000000 		.4byte	.LFB45
 2069 040f 0C000000 		.4byte	.LFE45-.LFB45
 2070 0413 01       		.uleb128 0x1
 2071 0414 9C       		.byte	0x9c
 2072 0415 38040000 		.4byte	0x438
 2073 0419 1A       		.uleb128 0x1a
 2074 041a A8040000 		.4byte	.LASF49
 2075 041e 01       		.byte	0x1
 2076 041f CC02     		.2byte	0x2cc
 2077 0421 83000000 		.4byte	0x83
 2078 0425 C6000000 		.4byte	.LLST7
 2079 0429 1B       		.uleb128 0x1b
 2080 042a 13050000 		.4byte	.LASF55
 2081 042e 01       		.byte	0x1
 2082 042f CC02     		.2byte	0x2cc
 2083 0431 77000000 		.4byte	0x77
 2084 0435 01       		.uleb128 0x1
 2085 0436 51       		.byte	0x51
 2086 0437 00       		.byte	0
 2087 0438 19       		.uleb128 0x19
 2088 0439 B7030000 		.4byte	.LASF57
 2089 043d 01       		.byte	0x1
 2090 043e E702     		.2byte	0x2e7
 2091 0440 6B000000 		.4byte	0x6b
 2092 0444 00000000 		.4byte	.LFB46
 2093 0448 0C000000 		.4byte	.LFE46-.LFB46
 2094 044c 01       		.uleb128 0x1
 2095 044d 9C       		.byte	0x9c
 2096 044e 63040000 		.4byte	0x463
 2097 0452 1A       		.uleb128 0x1a
 2098 0453 A8040000 		.4byte	.LASF49
 2099 0457 01       		.byte	0x1
 2100 0458 E702     		.2byte	0x2e7
 2101 045a 83000000 		.4byte	0x83
 2102 045e E7000000 		.4byte	.LLST8
 2103 0462 00       		.byte	0
 2104 0463 16       		.uleb128 0x16
 2105 0464 FC010000 		.4byte	.LASF58
 2106 0468 01       		.byte	0x1
 2107 0469 0203     		.2byte	0x302
 2108 046b 00000000 		.4byte	.LFB47
 2109 046f 0C000000 		.4byte	.LFE47-.LFB47
 2110 0473 01       		.uleb128 0x1
 2111 0474 9C       		.byte	0x9c
 2112 0475 98040000 		.4byte	0x498
 2113 0479 1A       		.uleb128 0x1a
 2114 047a A8040000 		.4byte	.LASF49
 2115 047e 01       		.byte	0x1
 2116 047f 0203     		.2byte	0x302
 2117 0481 83000000 		.4byte	0x83
 2118 0485 08010000 		.4byte	.LLST9
 2119 0489 1B       		.uleb128 0x1b
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 89


 2120 048a 94030000 		.4byte	.LASF59
 2121 048e 01       		.byte	0x1
 2122 048f 0203     		.2byte	0x302
 2123 0491 6B000000 		.4byte	0x6b
 2124 0495 01       		.uleb128 0x1
 2125 0496 51       		.byte	0x51
 2126 0497 00       		.byte	0
 2127 0498 19       		.uleb128 0x19
 2128 0499 A5060000 		.4byte	.LASF60
 2129 049d 01       		.byte	0x1
 2130 049e 1D03     		.2byte	0x31d
 2131 04a0 6B000000 		.4byte	0x6b
 2132 04a4 00000000 		.4byte	.LFB48
 2133 04a8 0C000000 		.4byte	.LFE48-.LFB48
 2134 04ac 01       		.uleb128 0x1
 2135 04ad 9C       		.byte	0x9c
 2136 04ae C3040000 		.4byte	0x4c3
 2137 04b2 1A       		.uleb128 0x1a
 2138 04b3 23030000 		.4byte	.LASF51
 2139 04b7 01       		.byte	0x1
 2140 04b8 1D03     		.2byte	0x31d
 2141 04ba 83000000 		.4byte	0x83
 2142 04be 29010000 		.4byte	.LLST10
 2143 04c2 00       		.byte	0
 2144 04c3 19       		.uleb128 0x19
 2145 04c4 A4020000 		.4byte	.LASF61
 2146 04c8 01       		.byte	0x1
 2147 04c9 3803     		.2byte	0x338
 2148 04cb 6B000000 		.4byte	0x6b
 2149 04cf 00000000 		.4byte	.LFB49
 2150 04d3 0C000000 		.4byte	.LFE49-.LFB49
 2151 04d7 01       		.uleb128 0x1
 2152 04d8 9C       		.byte	0x9c
 2153 04d9 EE040000 		.4byte	0x4ee
 2154 04dd 1A       		.uleb128 0x1a
 2155 04de 23030000 		.4byte	.LASF51
 2156 04e2 01       		.byte	0x1
 2157 04e3 3803     		.2byte	0x338
 2158 04e5 83000000 		.4byte	0x83
 2159 04e9 4A010000 		.4byte	.LLST11
 2160 04ed 00       		.byte	0
 2161 04ee 19       		.uleb128 0x19
 2162 04ef 9A030000 		.4byte	.LASF62
 2163 04f3 01       		.byte	0x1
 2164 04f4 5403     		.2byte	0x354
 2165 04f6 6B000000 		.4byte	0x6b
 2166 04fa 00000000 		.4byte	.LFB50
 2167 04fe 0C000000 		.4byte	.LFE50-.LFB50
 2168 0502 01       		.uleb128 0x1
 2169 0503 9C       		.byte	0x9c
 2170 0504 19050000 		.4byte	0x519
 2171 0508 1A       		.uleb128 0x1a
 2172 0509 23030000 		.4byte	.LASF51
 2173 050d 01       		.byte	0x1
 2174 050e 5403     		.2byte	0x354
 2175 0510 83000000 		.4byte	0x83
 2176 0514 6B010000 		.4byte	.LLST12
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 90


 2177 0518 00       		.byte	0
 2178 0519 19       		.uleb128 0x19
 2179 051a DA040000 		.4byte	.LASF63
 2180 051e 01       		.byte	0x1
 2181 051f 7003     		.2byte	0x370
 2182 0521 6B000000 		.4byte	0x6b
 2183 0525 00000000 		.4byte	.LFB51
 2184 0529 0C000000 		.4byte	.LFE51-.LFB51
 2185 052d 01       		.uleb128 0x1
 2186 052e 9C       		.byte	0x9c
 2187 052f 44050000 		.4byte	0x544
 2188 0533 1A       		.uleb128 0x1a
 2189 0534 23030000 		.4byte	.LASF51
 2190 0538 01       		.byte	0x1
 2191 0539 7003     		.2byte	0x370
 2192 053b 83000000 		.4byte	0x83
 2193 053f 8C010000 		.4byte	.LLST13
 2194 0543 00       		.byte	0
 2195 0544 16       		.uleb128 0x16
 2196 0545 59030000 		.4byte	.LASF64
 2197 0549 01       		.byte	0x1
 2198 054a 9103     		.2byte	0x391
 2199 054c 00000000 		.4byte	.LFB52
 2200 0550 0C000000 		.4byte	.LFE52-.LFB52
 2201 0554 01       		.uleb128 0x1
 2202 0555 9C       		.byte	0x9c
 2203 0556 77050000 		.4byte	0x577
 2204 055a 1B       		.uleb128 0x1b
 2205 055b 23030000 		.4byte	.LASF51
 2206 055f 01       		.byte	0x1
 2207 0560 9103     		.2byte	0x391
 2208 0562 83000000 		.4byte	0x83
 2209 0566 01       		.uleb128 0x1
 2210 0567 50       		.byte	0x50
 2211 0568 1B       		.uleb128 0x1b
 2212 0569 94030000 		.4byte	.LASF59
 2213 056d 01       		.byte	0x1
 2214 056e 9103     		.2byte	0x391
 2215 0570 6B000000 		.4byte	0x6b
 2216 0574 01       		.uleb128 0x1
 2217 0575 51       		.byte	0x51
 2218 0576 00       		.byte	0
 2219 0577 16       		.uleb128 0x16
 2220 0578 42020000 		.4byte	.LASF65
 2221 057c 01       		.byte	0x1
 2222 057d AD03     		.2byte	0x3ad
 2223 057f 00000000 		.4byte	.LFB53
 2224 0583 0C000000 		.4byte	.LFE53-.LFB53
 2225 0587 01       		.uleb128 0x1
 2226 0588 9C       		.byte	0x9c
 2227 0589 AA050000 		.4byte	0x5aa
 2228 058d 1B       		.uleb128 0x1b
 2229 058e 23030000 		.4byte	.LASF51
 2230 0592 01       		.byte	0x1
 2231 0593 AD03     		.2byte	0x3ad
 2232 0595 83000000 		.4byte	0x83
 2233 0599 01       		.uleb128 0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 91


 2234 059a 50       		.byte	0x50
 2235 059b 1B       		.uleb128 0x1b
 2236 059c 94030000 		.4byte	.LASF59
 2237 05a0 01       		.byte	0x1
 2238 05a1 AD03     		.2byte	0x3ad
 2239 05a3 6B000000 		.4byte	0x6b
 2240 05a7 01       		.uleb128 0x1
 2241 05a8 51       		.byte	0x51
 2242 05a9 00       		.byte	0
 2243 05aa 16       		.uleb128 0x16
 2244 05ab 88060000 		.4byte	.LASF66
 2245 05af 01       		.byte	0x1
 2246 05b0 C903     		.2byte	0x3c9
 2247 05b2 00000000 		.4byte	.LFB54
 2248 05b6 0C000000 		.4byte	.LFE54-.LFB54
 2249 05ba 01       		.uleb128 0x1
 2250 05bb 9C       		.byte	0x9c
 2251 05bc DD050000 		.4byte	0x5dd
 2252 05c0 1B       		.uleb128 0x1b
 2253 05c1 23030000 		.4byte	.LASF51
 2254 05c5 01       		.byte	0x1
 2255 05c6 C903     		.2byte	0x3c9
 2256 05c8 83000000 		.4byte	0x83
 2257 05cc 01       		.uleb128 0x1
 2258 05cd 50       		.byte	0x50
 2259 05ce 1B       		.uleb128 0x1b
 2260 05cf 94030000 		.4byte	.LASF59
 2261 05d3 01       		.byte	0x1
 2262 05d4 C903     		.2byte	0x3c9
 2263 05d6 6B000000 		.4byte	0x6b
 2264 05da 01       		.uleb128 0x1
 2265 05db 51       		.byte	0x51
 2266 05dc 00       		.byte	0
 2267 05dd 16       		.uleb128 0x16
 2268 05de 5E060000 		.4byte	.LASF67
 2269 05e2 01       		.byte	0x1
 2270 05e3 E603     		.2byte	0x3e6
 2271 05e5 00000000 		.4byte	.LFB55
 2272 05e9 0C000000 		.4byte	.LFE55-.LFB55
 2273 05ed 01       		.uleb128 0x1
 2274 05ee 9C       		.byte	0x9c
 2275 05ef 10060000 		.4byte	0x610
 2276 05f3 1B       		.uleb128 0x1b
 2277 05f4 23030000 		.4byte	.LASF51
 2278 05f8 01       		.byte	0x1
 2279 05f9 E603     		.2byte	0x3e6
 2280 05fb 83000000 		.4byte	0x83
 2281 05ff 01       		.uleb128 0x1
 2282 0600 50       		.byte	0x50
 2283 0601 1B       		.uleb128 0x1b
 2284 0602 94030000 		.4byte	.LASF59
 2285 0606 01       		.byte	0x1
 2286 0607 E603     		.2byte	0x3e6
 2287 0609 6B000000 		.4byte	0x6b
 2288 060d 01       		.uleb128 0x1
 2289 060e 51       		.byte	0x51
 2290 060f 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 92


 2291 0610 16       		.uleb128 0x16
 2292 0611 95080000 		.4byte	.LASF68
 2293 0615 01       		.byte	0x1
 2294 0616 0204     		.2byte	0x402
 2295 0618 00000000 		.4byte	.LFB56
 2296 061c 0C000000 		.4byte	.LFE56-.LFB56
 2297 0620 01       		.uleb128 0x1
 2298 0621 9C       		.byte	0x9c
 2299 0622 43060000 		.4byte	0x643
 2300 0626 1B       		.uleb128 0x1b
 2301 0627 23030000 		.4byte	.LASF51
 2302 062b 01       		.byte	0x1
 2303 062c 0204     		.2byte	0x402
 2304 062e 83000000 		.4byte	0x83
 2305 0632 01       		.uleb128 0x1
 2306 0633 50       		.byte	0x50
 2307 0634 1B       		.uleb128 0x1b
 2308 0635 94030000 		.4byte	.LASF59
 2309 0639 01       		.byte	0x1
 2310 063a 0204     		.2byte	0x402
 2311 063c 6B000000 		.4byte	0x6b
 2312 0640 01       		.uleb128 0x1
 2313 0641 51       		.byte	0x51
 2314 0642 00       		.byte	0
 2315 0643 16       		.uleb128 0x16
 2316 0644 34090000 		.4byte	.LASF69
 2317 0648 01       		.byte	0x1
 2318 0649 1E04     		.2byte	0x41e
 2319 064b 00000000 		.4byte	.LFB57
 2320 064f 0C000000 		.4byte	.LFE57-.LFB57
 2321 0653 01       		.uleb128 0x1
 2322 0654 9C       		.byte	0x9c
 2323 0655 78060000 		.4byte	0x678
 2324 0659 1A       		.uleb128 0x1a
 2325 065a A8040000 		.4byte	.LASF49
 2326 065e 01       		.byte	0x1
 2327 065f 1E04     		.2byte	0x41e
 2328 0661 83000000 		.4byte	0x83
 2329 0665 AD010000 		.4byte	.LLST14
 2330 0669 1B       		.uleb128 0x1b
 2331 066a 94030000 		.4byte	.LASF59
 2332 066e 01       		.byte	0x1
 2333 066f 1E04     		.2byte	0x41e
 2334 0671 6B000000 		.4byte	0x6b
 2335 0675 01       		.uleb128 0x1
 2336 0676 51       		.byte	0x51
 2337 0677 00       		.byte	0
 2338 0678 19       		.uleb128 0x19
 2339 0679 CA050000 		.4byte	.LASF70
 2340 067d 01       		.byte	0x1
 2341 067e 4C04     		.2byte	0x44c
 2342 0680 83000000 		.4byte	0x83
 2343 0684 00000000 		.4byte	.LFB58
 2344 0688 A8000000 		.4byte	.LFE58-.LFB58
 2345 068c 01       		.uleb128 0x1
 2346 068d 9C       		.byte	0x9c
 2347 068e 62070000 		.4byte	0x762
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 93


 2348 0692 1A       		.uleb128 0x1a
 2349 0693 A8040000 		.4byte	.LASF49
 2350 0697 01       		.byte	0x1
 2351 0698 4C04     		.2byte	0x44c
 2352 069a 83000000 		.4byte	0x83
 2353 069e CE010000 		.4byte	.LLST15
 2354 06a2 1C       		.uleb128 0x1c
 2355 06a3 23030000 		.4byte	.LASF51
 2356 06a7 01       		.byte	0x1
 2357 06a8 4E04     		.2byte	0x44e
 2358 06aa 6B000000 		.4byte	0x6b
 2359 06ae 18       		.uleb128 0x18
 2360 06af B6050000 		.4byte	.LASF71
 2361 06b3 01       		.byte	0x1
 2362 06b4 4F04     		.2byte	0x44f
 2363 06b6 6B000000 		.4byte	0x6b
 2364 06ba FA010000 		.4byte	.LLST16
 2365 06be 1C       		.uleb128 0x1c
 2366 06bf ED080000 		.4byte	.LASF72
 2367 06c3 01       		.byte	0x1
 2368 06c4 5004     		.2byte	0x450
 2369 06c6 6B000000 		.4byte	0x6b
 2370 06ca 18       		.uleb128 0x18
 2371 06cb AA080000 		.4byte	.LASF73
 2372 06cf 01       		.byte	0x1
 2373 06d0 5204     		.2byte	0x452
 2374 06d2 6B000000 		.4byte	0x6b
 2375 06d6 0D020000 		.4byte	.LLST17
 2376 06da 18       		.uleb128 0x18
 2377 06db FD030000 		.4byte	.LASF74
 2378 06df 01       		.byte	0x1
 2379 06e0 5304     		.2byte	0x453
 2380 06e2 6B000000 		.4byte	0x6b
 2381 06e6 20020000 		.4byte	.LLST18
 2382 06ea 11       		.uleb128 0x11
 2383 06eb 24000000 		.4byte	.LVL50
 2384 06ef B30D0000 		.4byte	0xdb3
 2385 06f3 07070000 		.4byte	0x707
 2386 06f7 12       		.uleb128 0x12
 2387 06f8 01       		.uleb128 0x1
 2388 06f9 51       		.byte	0x51
 2389 06fa 02       		.uleb128 0x2
 2390 06fb 74       		.byte	0x74
 2391 06fc 00       		.sleb128 0
 2392 06fd 12       		.uleb128 0x12
 2393 06fe 01       		.uleb128 0x1
 2394 06ff 50       		.byte	0x50
 2395 0700 05       		.uleb128 0x5
 2396 0701 03       		.byte	0x3
 2397 0702 10000000 		.4byte	.LANCHOR0+16
 2398 0706 00       		.byte	0
 2399 0707 11       		.uleb128 0x11
 2400 0708 42000000 		.4byte	.LVL52
 2401 070c CD0D0000 		.4byte	0xdcd
 2402 0710 26070000 		.4byte	0x726
 2403 0714 12       		.uleb128 0x12
 2404 0715 01       		.uleb128 0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 94


 2405 0716 52       		.byte	0x52
 2406 0717 01       		.uleb128 0x1
 2407 0718 30       		.byte	0x30
 2408 0719 12       		.uleb128 0x12
 2409 071a 01       		.uleb128 0x1
 2410 071b 51       		.byte	0x51
 2411 071c 02       		.uleb128 0x2
 2412 071d 74       		.byte	0x74
 2413 071e 00       		.sleb128 0
 2414 071f 12       		.uleb128 0x12
 2415 0720 01       		.uleb128 0x1
 2416 0721 50       		.byte	0x50
 2417 0722 02       		.uleb128 0x2
 2418 0723 76       		.byte	0x76
 2419 0724 10       		.sleb128 16
 2420 0725 00       		.byte	0
 2421 0726 11       		.uleb128 0x11
 2422 0727 72000000 		.4byte	.LVL55
 2423 072b CD0D0000 		.4byte	0xdcd
 2424 072f 48070000 		.4byte	0x748
 2425 0733 12       		.uleb128 0x12
 2426 0734 01       		.uleb128 0x1
 2427 0735 52       		.byte	0x52
 2428 0736 01       		.uleb128 0x1
 2429 0737 31       		.byte	0x31
 2430 0738 12       		.uleb128 0x12
 2431 0739 01       		.uleb128 0x1
 2432 073a 51       		.byte	0x51
 2433 073b 02       		.uleb128 0x2
 2434 073c 74       		.byte	0x74
 2435 073d 00       		.sleb128 0
 2436 073e 12       		.uleb128 0x12
 2437 073f 01       		.uleb128 0x1
 2438 0740 50       		.byte	0x50
 2439 0741 05       		.uleb128 0x5
 2440 0742 03       		.byte	0x3
 2441 0743 10000000 		.4byte	.LANCHOR0+16
 2442 0747 00       		.byte	0
 2443 0748 14       		.uleb128 0x14
 2444 0749 86000000 		.4byte	.LVL56
 2445 074d B30D0000 		.4byte	0xdb3
 2446 0751 12       		.uleb128 0x12
 2447 0752 01       		.uleb128 0x1
 2448 0753 51       		.byte	0x51
 2449 0754 02       		.uleb128 0x2
 2450 0755 74       		.byte	0x74
 2451 0756 00       		.sleb128 0
 2452 0757 12       		.uleb128 0x12
 2453 0758 01       		.uleb128 0x1
 2454 0759 50       		.byte	0x50
 2455 075a 05       		.uleb128 0x5
 2456 075b 03       		.byte	0x3
 2457 075c 10000000 		.4byte	.LANCHOR0+16
 2458 0760 00       		.byte	0
 2459 0761 00       		.byte	0
 2460 0762 19       		.uleb128 0x19
 2461 0763 150A0000 		.4byte	.LASF75
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 95


 2462 0767 01       		.byte	0x1
 2463 0768 9E04     		.2byte	0x49e
 2464 076a 83000000 		.4byte	0x83
 2465 076e 00000000 		.4byte	.LFB59
 2466 0772 28000000 		.4byte	.LFE59-.LFB59
 2467 0776 01       		.uleb128 0x1
 2468 0777 9C       		.byte	0x9c
 2469 0778 CD070000 		.4byte	0x7cd
 2470 077c 1A       		.uleb128 0x1a
 2471 077d 23030000 		.4byte	.LASF51
 2472 0781 01       		.byte	0x1
 2473 0782 9E04     		.2byte	0x49e
 2474 0784 83000000 		.4byte	0x83
 2475 0788 3E020000 		.4byte	.LLST19
 2476 078c 18       		.uleb128 0x18
 2477 078d 27050000 		.4byte	.LASF76
 2478 0791 01       		.byte	0x1
 2479 0792 A004     		.2byte	0x4a0
 2480 0794 83000000 		.4byte	0x83
 2481 0798 5F020000 		.4byte	.LLST20
 2482 079c 18       		.uleb128 0x18
 2483 079d 0B010000 		.4byte	.LASF77
 2484 07a1 01       		.byte	0x1
 2485 07a2 A104     		.2byte	0x4a1
 2486 07a4 83000000 		.4byte	0x83
 2487 07a8 72020000 		.4byte	.LLST21
 2488 07ac 18       		.uleb128 0x18
 2489 07ad 8A090000 		.4byte	.LASF78
 2490 07b1 01       		.byte	0x1
 2491 07b2 A204     		.2byte	0x4a2
 2492 07b4 83000000 		.4byte	0x83
 2493 07b8 AD020000 		.4byte	.LLST22
 2494 07bc 14       		.uleb128 0x14
 2495 07bd 14000000 		.4byte	.LVL65
 2496 07c1 78060000 		.4byte	0x678
 2497 07c5 12       		.uleb128 0x12
 2498 07c6 01       		.uleb128 0x1
 2499 07c7 50       		.byte	0x50
 2500 07c8 02       		.uleb128 0x2
 2501 07c9 74       		.byte	0x74
 2502 07ca 00       		.sleb128 0
 2503 07cb 00       		.byte	0
 2504 07cc 00       		.byte	0
 2505 07cd 19       		.uleb128 0x19
 2506 07ce 3D040000 		.4byte	.LASF79
 2507 07d2 01       		.byte	0x1
 2508 07d3 CC04     		.2byte	0x4cc
 2509 07d5 83000000 		.4byte	0x83
 2510 07d9 00000000 		.4byte	.LFB60
 2511 07dd 1E000000 		.4byte	.LFE60-.LFB60
 2512 07e1 01       		.uleb128 0x1
 2513 07e2 9C       		.byte	0x9c
 2514 07e3 16080000 		.4byte	0x816
 2515 07e7 17       		.uleb128 0x17
 2516 07e8 6900     		.ascii	"i\000"
 2517 07ea 01       		.byte	0x1
 2518 07eb CF04     		.2byte	0x4cf
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 96


 2519 07ed 83000000 		.4byte	0x83
 2520 07f1 D7020000 		.4byte	.LLST23
 2521 07f5 18       		.uleb128 0x18
 2522 07f6 8A090000 		.4byte	.LASF78
 2523 07fa 01       		.byte	0x1
 2524 07fb D004     		.2byte	0x4d0
 2525 07fd 83000000 		.4byte	0x83
 2526 0801 F6020000 		.4byte	.LLST24
 2527 0805 14       		.uleb128 0x14
 2528 0806 0E000000 		.4byte	.LVL73
 2529 080a 62070000 		.4byte	0x762
 2530 080e 12       		.uleb128 0x12
 2531 080f 01       		.uleb128 0x1
 2532 0810 50       		.byte	0x50
 2533 0811 02       		.uleb128 0x2
 2534 0812 74       		.byte	0x74
 2535 0813 00       		.sleb128 0
 2536 0814 00       		.byte	0
 2537 0815 00       		.byte	0
 2538 0816 16       		.uleb128 0x16
 2539 0817 BF040000 		.4byte	.LASF80
 2540 081b 01       		.byte	0x1
 2541 081c FB04     		.2byte	0x4fb
 2542 081e 00000000 		.4byte	.LFB61
 2543 0822 2C000000 		.4byte	.LFE61-.LFB61
 2544 0826 01       		.uleb128 0x1
 2545 0827 9C       		.byte	0x9c
 2546 0828 72080000 		.4byte	0x872
 2547 082c 1A       		.uleb128 0x1a
 2548 082d 23030000 		.4byte	.LASF51
 2549 0831 01       		.byte	0x1
 2550 0832 FB04     		.2byte	0x4fb
 2551 0834 83000000 		.4byte	0x83
 2552 0838 20030000 		.4byte	.LLST25
 2553 083c 18       		.uleb128 0x18
 2554 083d 27050000 		.4byte	.LASF76
 2555 0841 01       		.byte	0x1
 2556 0842 FE04     		.2byte	0x4fe
 2557 0844 6B000000 		.4byte	0x6b
 2558 0848 41030000 		.4byte	.LLST26
 2559 084c 18       		.uleb128 0x18
 2560 084d 0B010000 		.4byte	.LASF77
 2561 0851 01       		.byte	0x1
 2562 0852 FF04     		.2byte	0x4ff
 2563 0854 6B000000 		.4byte	0x6b
 2564 0858 5F030000 		.4byte	.LLST27
 2565 085c 14       		.uleb128 0x14
 2566 085d 18000000 		.4byte	.LVL82
 2567 0861 CD0D0000 		.4byte	0xdcd
 2568 0865 12       		.uleb128 0x12
 2569 0866 01       		.uleb128 0x1
 2570 0867 52       		.byte	0x52
 2571 0868 01       		.uleb128 0x1
 2572 0869 31       		.byte	0x31
 2573 086a 12       		.uleb128 0x12
 2574 086b 01       		.uleb128 0x1
 2575 086c 51       		.byte	0x51
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 97


 2576 086d 02       		.uleb128 0x2
 2577 086e 74       		.byte	0x74
 2578 086f 00       		.sleb128 0
 2579 0870 00       		.byte	0
 2580 0871 00       		.byte	0
 2581 0872 16       		.uleb128 0x16
 2582 0873 B4000000 		.4byte	.LASF81
 2583 0877 01       		.byte	0x1
 2584 0878 2605     		.2byte	0x526
 2585 087a 00000000 		.4byte	.LFB62
 2586 087e 2C000000 		.4byte	.LFE62-.LFB62
 2587 0882 01       		.uleb128 0x1
 2588 0883 9C       		.byte	0x9c
 2589 0884 CE080000 		.4byte	0x8ce
 2590 0888 1A       		.uleb128 0x1a
 2591 0889 23030000 		.4byte	.LASF51
 2592 088d 01       		.byte	0x1
 2593 088e 2605     		.2byte	0x526
 2594 0890 83000000 		.4byte	0x83
 2595 0894 9A030000 		.4byte	.LLST28
 2596 0898 18       		.uleb128 0x18
 2597 0899 27050000 		.4byte	.LASF76
 2598 089d 01       		.byte	0x1
 2599 089e 2805     		.2byte	0x528
 2600 08a0 6B000000 		.4byte	0x6b
 2601 08a4 BB030000 		.4byte	.LLST29
 2602 08a8 18       		.uleb128 0x18
 2603 08a9 0B010000 		.4byte	.LASF77
 2604 08ad 01       		.byte	0x1
 2605 08ae 2905     		.2byte	0x529
 2606 08b0 6B000000 		.4byte	0x6b
 2607 08b4 D9030000 		.4byte	.LLST30
 2608 08b8 14       		.uleb128 0x14
 2609 08b9 18000000 		.4byte	.LVL91
 2610 08bd CD0D0000 		.4byte	0xdcd
 2611 08c1 12       		.uleb128 0x12
 2612 08c2 01       		.uleb128 0x1
 2613 08c3 52       		.byte	0x52
 2614 08c4 01       		.uleb128 0x1
 2615 08c5 30       		.byte	0x30
 2616 08c6 12       		.uleb128 0x12
 2617 08c7 01       		.uleb128 0x1
 2618 08c8 51       		.byte	0x51
 2619 08c9 02       		.uleb128 0x2
 2620 08ca 74       		.byte	0x74
 2621 08cb 00       		.sleb128 0
 2622 08cc 00       		.byte	0
 2623 08cd 00       		.byte	0
 2624 08ce 19       		.uleb128 0x19
 2625 08cf E2090000 		.4byte	.LASF82
 2626 08d3 01       		.byte	0x1
 2627 08d4 4209     		.2byte	0x942
 2628 08d6 77000000 		.4byte	0x77
 2629 08da 00000000 		.4byte	.LFB63
 2630 08de 1C000000 		.4byte	.LFE63-.LFB63
 2631 08e2 01       		.uleb128 0x1
 2632 08e3 9C       		.byte	0x9c
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 98


 2633 08e4 20090000 		.4byte	0x920
 2634 08e8 1D       		.uleb128 0x1d
 2635 08e9 783100   		.ascii	"x1\000"
 2636 08ec 01       		.byte	0x1
 2637 08ed 4209     		.2byte	0x942
 2638 08ef 77000000 		.4byte	0x77
 2639 08f3 14040000 		.4byte	.LLST31
 2640 08f7 1D       		.uleb128 0x1d
 2641 08f8 783200   		.ascii	"x2\000"
 2642 08fb 01       		.byte	0x1
 2643 08fc 4209     		.2byte	0x942
 2644 08fe 77000000 		.4byte	0x77
 2645 0902 40040000 		.4byte	.LLST32
 2646 0906 1E       		.uleb128 0x1e
 2647 0907 783300   		.ascii	"x3\000"
 2648 090a 01       		.byte	0x1
 2649 090b 4209     		.2byte	0x942
 2650 090d 77000000 		.4byte	0x77
 2651 0911 01       		.uleb128 0x1
 2652 0912 52       		.byte	0x52
 2653 0913 1F       		.uleb128 0x1f
 2654 0914 746D7000 		.ascii	"tmp\000"
 2655 0918 01       		.byte	0x1
 2656 0919 4409     		.2byte	0x944
 2657 091b 77000000 		.4byte	0x77
 2658 091f 00       		.byte	0
 2659 0920 19       		.uleb128 0x19
 2660 0921 1B000000 		.4byte	.LASF83
 2661 0925 01       		.byte	0x1
 2662 0926 BA09     		.2byte	0x9ba
 2663 0928 77000000 		.4byte	0x77
 2664 092c 00000000 		.4byte	.LFB64
 2665 0930 0C000000 		.4byte	.LFE64-.LFB64
 2666 0934 01       		.uleb128 0x1
 2667 0935 9C       		.byte	0x9c
 2668 0936 69090000 		.4byte	0x969
 2669 093a 1D       		.uleb128 0x1d
 2670 093b 783100   		.ascii	"x1\000"
 2671 093e 01       		.byte	0x1
 2672 093f BA09     		.2byte	0x9ba
 2673 0941 77000000 		.4byte	0x77
 2674 0945 5E040000 		.4byte	.LLST33
 2675 0949 1D       		.uleb128 0x1d
 2676 094a 783200   		.ascii	"x2\000"
 2677 094d 01       		.byte	0x1
 2678 094e BA09     		.2byte	0x9ba
 2679 0950 77000000 		.4byte	0x77
 2680 0954 7F040000 		.4byte	.LLST34
 2681 0958 17       		.uleb128 0x17
 2682 0959 746D7000 		.ascii	"tmp\000"
 2683 095d 01       		.byte	0x1
 2684 095e BC09     		.2byte	0x9bc
 2685 0960 83000000 		.4byte	0x83
 2686 0964 A0040000 		.4byte	.LLST35
 2687 0968 00       		.byte	0
 2688 0969 16       		.uleb128 0x16
 2689 096a 72000000 		.4byte	.LASF84
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 99


 2690 096e 01       		.byte	0x1
 2691 096f 5D01     		.2byte	0x15d
 2692 0971 00000000 		.4byte	.LFB40
 2693 0975 1C010000 		.4byte	.LFE40-.LFB40
 2694 0979 01       		.uleb128 0x1
 2695 097a 9C       		.byte	0x9c
 2696 097b 230A0000 		.4byte	0xa23
 2697 097f 1A       		.uleb128 0x1a
 2698 0980 A8040000 		.4byte	.LASF49
 2699 0984 01       		.byte	0x1
 2700 0985 5D01     		.2byte	0x15d
 2701 0987 83000000 		.4byte	0x83
 2702 098b D0040000 		.4byte	.LLST36
 2703 098f 18       		.uleb128 0x18
 2704 0990 E7030000 		.4byte	.LASF85
 2705 0994 01       		.byte	0x1
 2706 0995 5F01     		.2byte	0x15f
 2707 0997 83000000 		.4byte	0x83
 2708 099b 2E050000 		.4byte	.LLST37
 2709 099f 18       		.uleb128 0x18
 2710 09a0 D1030000 		.4byte	.LASF86
 2711 09a4 01       		.byte	0x1
 2712 09a5 6001     		.2byte	0x160
 2713 09a7 83000000 		.4byte	0x83
 2714 09ab 4C050000 		.4byte	.LLST38
 2715 09af 18       		.uleb128 0x18
 2716 09b0 F8090000 		.4byte	.LASF87
 2717 09b4 01       		.byte	0x1
 2718 09b5 6101     		.2byte	0x161
 2719 09b7 77000000 		.4byte	0x77
 2720 09bb A3050000 		.4byte	.LLST39
 2721 09bf 18       		.uleb128 0x18
 2722 09c0 1C040000 		.4byte	.LASF88
 2723 09c4 01       		.byte	0x1
 2724 09c5 6201     		.2byte	0x162
 2725 09c7 77000000 		.4byte	0x77
 2726 09cb C1050000 		.4byte	.LLST40
 2727 09cf 1C       		.uleb128 0x1c
 2728 09d0 23030000 		.4byte	.LASF51
 2729 09d4 01       		.byte	0x1
 2730 09d5 6301     		.2byte	0x163
 2731 09d7 6B000000 		.4byte	0x6b
 2732 09db 20       		.uleb128 0x20
 2733 09dc 74080000 		.4byte	.LASF89
 2734 09e0 01       		.byte	0x1
 2735 09e1 6401     		.2byte	0x164
 2736 09e3 6B000000 		.4byte	0x6b
 2737 09e7 02       		.uleb128 0x2
 2738 09e8 91       		.byte	0x91
 2739 09e9 64       		.sleb128 -28
 2740 09ea 11       		.uleb128 0x11
 2741 09eb 2E000000 		.4byte	.LVL111
 2742 09ef 20090000 		.4byte	0x920
 2743 09f3 FE090000 		.4byte	0x9fe
 2744 09f7 12       		.uleb128 0x12
 2745 09f8 01       		.uleb128 0x1
 2746 09f9 50       		.byte	0x50
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 100


 2747 09fa 02       		.uleb128 0x2
 2748 09fb 77       		.byte	0x77
 2749 09fc 00       		.sleb128 0
 2750 09fd 00       		.byte	0
 2751 09fe 11       		.uleb128 0x11
 2752 09ff 3E000000 		.4byte	.LVL114
 2753 0a03 E80D0000 		.4byte	0xde8
 2754 0a07 120A0000 		.4byte	0xa12
 2755 0a0b 12       		.uleb128 0x12
 2756 0a0c 01       		.uleb128 0x1
 2757 0a0d 51       		.byte	0x51
 2758 0a0e 02       		.uleb128 0x2
 2759 0a0f 74       		.byte	0x74
 2760 0a10 00       		.sleb128 0
 2761 0a11 00       		.byte	0
 2762 0a12 14       		.uleb128 0x14
 2763 0a13 82000000 		.4byte	.LVL119
 2764 0a17 B4020000 		.4byte	0x2b4
 2765 0a1b 12       		.uleb128 0x12
 2766 0a1c 01       		.uleb128 0x1
 2767 0a1d 50       		.byte	0x50
 2768 0a1e 02       		.uleb128 0x2
 2769 0a1f 74       		.byte	0x74
 2770 0a20 00       		.sleb128 0
 2771 0a21 00       		.byte	0
 2772 0a22 00       		.byte	0
 2773 0a23 16       		.uleb128 0x16
 2774 0a24 F1050000 		.4byte	.LASF90
 2775 0a28 01       		.byte	0x1
 2776 0a29 1D02     		.2byte	0x21d
 2777 0a2b 00000000 		.4byte	.LFB41
 2778 0a2f 10000000 		.4byte	.LFE41-.LFB41
 2779 0a33 01       		.uleb128 0x1
 2780 0a34 9C       		.byte	0x9c
 2781 0a35 6E0A0000 		.4byte	0xa6e
 2782 0a39 1A       		.uleb128 0x1a
 2783 0a3a A8040000 		.4byte	.LASF49
 2784 0a3e 01       		.byte	0x1
 2785 0a3f 1D02     		.2byte	0x21d
 2786 0a41 83000000 		.4byte	0x83
 2787 0a45 EA050000 		.4byte	.LLST41
 2788 0a49 11       		.uleb128 0x11
 2789 0a4a 08000000 		.4byte	.LVL136
 2790 0a4e 0E0E0000 		.4byte	0xe0e
 2791 0a52 5D0A0000 		.4byte	0xa5d
 2792 0a56 12       		.uleb128 0x12
 2793 0a57 01       		.uleb128 0x1
 2794 0a58 50       		.byte	0x50
 2795 0a59 02       		.uleb128 0x2
 2796 0a5a 74       		.byte	0x74
 2797 0a5b 00       		.sleb128 0
 2798 0a5c 00       		.byte	0
 2799 0a5d 14       		.uleb128 0x14
 2800 0a5e 0E000000 		.4byte	.LVL137
 2801 0a62 69090000 		.4byte	0x969
 2802 0a66 12       		.uleb128 0x12
 2803 0a67 01       		.uleb128 0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 101


 2804 0a68 50       		.byte	0x50
 2805 0a69 02       		.uleb128 0x2
 2806 0a6a 74       		.byte	0x74
 2807 0a6b 00       		.sleb128 0
 2808 0a6c 00       		.byte	0
 2809 0a6d 00       		.byte	0
 2810 0a6e 16       		.uleb128 0x16
 2811 0a6f CB000000 		.4byte	.LASF91
 2812 0a73 01       		.byte	0x1
 2813 0a74 5302     		.2byte	0x253
 2814 0a76 00000000 		.4byte	.LFB42
 2815 0a7a 24000000 		.4byte	.LFE42-.LFB42
 2816 0a7e 01       		.uleb128 0x1
 2817 0a7f 9C       		.byte	0x9c
 2818 0a80 C70A0000 		.4byte	0xac7
 2819 0a84 17       		.uleb128 0x17
 2820 0a85 6900     		.ascii	"i\000"
 2821 0a87 01       		.byte	0x1
 2822 0a88 5502     		.2byte	0x255
 2823 0a8a 83000000 		.4byte	0x83
 2824 0a8e 16060000 		.4byte	.LLST42
 2825 0a92 18       		.uleb128 0x18
 2826 0a93 FB000000 		.4byte	.LASF53
 2827 0a97 01       		.byte	0x1
 2828 0a98 5602     		.2byte	0x256
 2829 0a9a 83000000 		.4byte	0x83
 2830 0a9e 35060000 		.4byte	.LLST43
 2831 0aa2 11       		.uleb128 0x11
 2832 0aa3 0E000000 		.4byte	.LVL141
 2833 0aa7 B30D0000 		.4byte	0xdb3
 2834 0aab B60A0000 		.4byte	0xab6
 2835 0aaf 12       		.uleb128 0x12
 2836 0ab0 01       		.uleb128 0x1
 2837 0ab1 51       		.byte	0x51
 2838 0ab2 02       		.uleb128 0x2
 2839 0ab3 74       		.byte	0x74
 2840 0ab4 00       		.sleb128 0
 2841 0ab5 00       		.byte	0
 2842 0ab6 14       		.uleb128 0x14
 2843 0ab7 18000000 		.4byte	.LVL143
 2844 0abb 230A0000 		.4byte	0xa23
 2845 0abf 12       		.uleb128 0x12
 2846 0ac0 01       		.uleb128 0x1
 2847 0ac1 50       		.byte	0x50
 2848 0ac2 02       		.uleb128 0x2
 2849 0ac3 74       		.byte	0x74
 2850 0ac4 00       		.sleb128 0
 2851 0ac5 00       		.byte	0
 2852 0ac6 00       		.byte	0
 2853 0ac7 16       		.uleb128 0x16
 2854 0ac8 5D020000 		.4byte	.LASF92
 2855 0acc 01       		.byte	0x1
 2856 0acd 8002     		.2byte	0x280
 2857 0acf 00000000 		.4byte	.LFB43
 2858 0ad3 30000000 		.4byte	.LFE43-.LFB43
 2859 0ad7 01       		.uleb128 0x1
 2860 0ad8 9C       		.byte	0x9c
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 102


 2861 0ad9 600B0000 		.4byte	0xb60
 2862 0add 1A       		.uleb128 0x1a
 2863 0ade 23030000 		.4byte	.LASF51
 2864 0ae2 01       		.byte	0x1
 2865 0ae3 8002     		.2byte	0x280
 2866 0ae5 83000000 		.4byte	0x83
 2867 0ae9 48060000 		.4byte	.LLST44
 2868 0aed 18       		.uleb128 0x18
 2869 0aee 2C040000 		.4byte	.LASF93
 2870 0af2 01       		.byte	0x1
 2871 0af3 8202     		.2byte	0x282
 2872 0af5 83000000 		.4byte	0x83
 2873 0af9 69060000 		.4byte	.LLST45
 2874 0afd 18       		.uleb128 0x18
 2875 0afe 0D070000 		.4byte	.LASF94
 2876 0b02 01       		.byte	0x1
 2877 0b03 8302     		.2byte	0x283
 2878 0b05 83000000 		.4byte	0x83
 2879 0b09 A7060000 		.4byte	.LLST46
 2880 0b0d 18       		.uleb128 0x18
 2881 0b0e C1060000 		.4byte	.LASF95
 2882 0b12 01       		.byte	0x1
 2883 0b13 8402     		.2byte	0x284
 2884 0b15 83000000 		.4byte	0x83
 2885 0b19 D3060000 		.4byte	.LLST47
 2886 0b1d 17       		.uleb128 0x17
 2887 0b1e 6900     		.ascii	"i\000"
 2888 0b20 01       		.byte	0x1
 2889 0b21 8502     		.2byte	0x285
 2890 0b23 83000000 		.4byte	0x83
 2891 0b27 0E070000 		.4byte	.LLST48
 2892 0b2b 18       		.uleb128 0x18
 2893 0b2c FB000000 		.4byte	.LASF53
 2894 0b30 01       		.byte	0x1
 2895 0b31 8602     		.2byte	0x286
 2896 0b33 83000000 		.4byte	0x83
 2897 0b37 21070000 		.4byte	.LLST49
 2898 0b3b 11       		.uleb128 0x11
 2899 0b3c 16000000 		.4byte	.LVL151
 2900 0b40 B30D0000 		.4byte	0xdb3
 2901 0b44 4F0B0000 		.4byte	0xb4f
 2902 0b48 12       		.uleb128 0x12
 2903 0b49 01       		.uleb128 0x1
 2904 0b4a 51       		.byte	0x51
 2905 0b4b 02       		.uleb128 0x2
 2906 0b4c 74       		.byte	0x74
 2907 0b4d 00       		.sleb128 0
 2908 0b4e 00       		.byte	0
 2909 0b4f 14       		.uleb128 0x14
 2910 0b50 20000000 		.4byte	.LVL153
 2911 0b54 230A0000 		.4byte	0xa23
 2912 0b58 12       		.uleb128 0x12
 2913 0b59 01       		.uleb128 0x1
 2914 0b5a 50       		.byte	0x50
 2915 0b5b 02       		.uleb128 0x2
 2916 0b5c 74       		.byte	0x74
 2917 0b5d 00       		.sleb128 0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 103


 2918 0b5e 00       		.byte	0
 2919 0b5f 00       		.byte	0
 2920 0b60 19       		.uleb128 0x19
 2921 0b61 9D050000 		.4byte	.LASF96
 2922 0b65 01       		.byte	0x1
 2923 0b66 A30A     		.2byte	0xaa3
 2924 0b68 83000000 		.4byte	0x83
 2925 0b6c 00000000 		.4byte	.LFB65
 2926 0b70 0C000000 		.4byte	.LFE65-.LFB65
 2927 0b74 01       		.uleb128 0x1
 2928 0b75 9C       		.byte	0x9c
 2929 0b76 8B0B0000 		.4byte	0xb8b
 2930 0b7a 1A       		.uleb128 0x1a
 2931 0b7b A8040000 		.4byte	.LASF49
 2932 0b7f 01       		.byte	0x1
 2933 0b80 A30A     		.2byte	0xaa3
 2934 0b82 83000000 		.4byte	0x83
 2935 0b86 34070000 		.4byte	.LLST50
 2936 0b8a 00       		.byte	0
 2937 0b8b 19       		.uleb128 0x19
 2938 0b8c 41060000 		.4byte	.LASF97
 2939 0b90 01       		.byte	0x1
 2940 0b91 BD0A     		.2byte	0xabd
 2941 0b93 6B000000 		.4byte	0x6b
 2942 0b97 00000000 		.4byte	.LFB66
 2943 0b9b 0C000000 		.4byte	.LFE66-.LFB66
 2944 0b9f 01       		.uleb128 0x1
 2945 0ba0 9C       		.byte	0x9c
 2946 0ba1 B60B0000 		.4byte	0xbb6
 2947 0ba5 1A       		.uleb128 0x1a
 2948 0ba6 A8040000 		.4byte	.LASF49
 2949 0baa 01       		.byte	0x1
 2950 0bab BD0A     		.2byte	0xabd
 2951 0bad 83000000 		.4byte	0x83
 2952 0bb1 55070000 		.4byte	.LLST51
 2953 0bb5 00       		.byte	0
 2954 0bb6 19       		.uleb128 0x19
 2955 0bb7 000A0000 		.4byte	.LASF98
 2956 0bbb 01       		.byte	0x1
 2957 0bbc D70A     		.2byte	0xad7
 2958 0bbe 6B000000 		.4byte	0x6b
 2959 0bc2 00000000 		.4byte	.LFB67
 2960 0bc6 0C000000 		.4byte	.LFE67-.LFB67
 2961 0bca 01       		.uleb128 0x1
 2962 0bcb 9C       		.byte	0x9c
 2963 0bcc E10B0000 		.4byte	0xbe1
 2964 0bd0 1A       		.uleb128 0x1a
 2965 0bd1 23030000 		.4byte	.LASF51
 2966 0bd5 01       		.byte	0x1
 2967 0bd6 D70A     		.2byte	0xad7
 2968 0bd8 83000000 		.4byte	0x83
 2969 0bdc 76070000 		.4byte	.LLST52
 2970 0be0 00       		.byte	0
 2971 0be1 21       		.uleb128 0x21
 2972 0be2 F6070000 		.4byte	.LASF99
 2973 0be6 01       		.byte	0x1
 2974 0be7 F10A     		.2byte	0xaf1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 104


 2975 0be9 00000000 		.4byte	.LFB68
 2976 0bed 0C000000 		.4byte	.LFE68-.LFB68
 2977 0bf1 01       		.uleb128 0x1
 2978 0bf2 9C       		.byte	0x9c
 2979 0bf3 21       		.uleb128 0x21
 2980 0bf4 75030000 		.4byte	.LASF100
 2981 0bf8 01       		.byte	0x1
 2982 0bf9 0A0B     		.2byte	0xb0a
 2983 0bfb 00000000 		.4byte	.LFB69
 2984 0bff 0C000000 		.4byte	.LFE69-.LFB69
 2985 0c03 01       		.uleb128 0x1
 2986 0c04 9C       		.byte	0x9c
 2987 0c05 22       		.uleb128 0x22
 2988 0c06 6B000000 		.4byte	0x6b
 2989 0c0a 150C0000 		.4byte	0xc15
 2990 0c0e 23       		.uleb128 0x23
 2991 0c0f A4000000 		.4byte	0xa4
 2992 0c13 02       		.byte	0x2
 2993 0c14 00       		.byte	0
 2994 0c15 24       		.uleb128 0x24
 2995 0c16 2F000000 		.4byte	.LASF101
 2996 0c1a 01       		.byte	0x1
 2997 0c1b 55       		.byte	0x55
 2998 0c1c 050C0000 		.4byte	0xc05
 2999 0c20 05       		.uleb128 0x5
 3000 0c21 03       		.byte	0x3
 3001 0c22 0C000000 		.4byte	CapSense_debounceCounter
 3002 0c26 22       		.uleb128 0x22
 3003 0c27 77000000 		.4byte	0x77
 3004 0c2b 360C0000 		.4byte	0xc36
 3005 0c2f 23       		.uleb128 0x23
 3006 0c30 A4000000 		.4byte	0xa4
 3007 0c34 01       		.byte	0x1
 3008 0c35 00       		.byte	0
 3009 0c36 25       		.uleb128 0x25
 3010 0c37 2E060000 		.4byte	.LASF102
 3011 0c3b 01       		.byte	0x1
 3012 0c3c 2C       		.byte	0x2c
 3013 0c3d 260C0000 		.4byte	0xc26
 3014 0c41 22       		.uleb128 0x22
 3015 0c42 6B000000 		.4byte	0x6b
 3016 0c46 510C0000 		.4byte	0xc51
 3017 0c4a 23       		.uleb128 0x23
 3018 0c4b A4000000 		.4byte	0xa4
 3019 0c4f 00       		.byte	0
 3020 0c50 00       		.byte	0
 3021 0c51 25       		.uleb128 0x25
 3022 0c52 EB020000 		.4byte	.LASF103
 3023 0c56 01       		.byte	0x1
 3024 0c57 2D       		.byte	0x2d
 3025 0c58 410C0000 		.4byte	0xc41
 3026 0c5c 22       		.uleb128 0x22
 3027 0c5d 6B000000 		.4byte	0x6b
 3028 0c61 6C0C0000 		.4byte	0xc6c
 3029 0c65 23       		.uleb128 0x23
 3030 0c66 A4000000 		.4byte	0xa4
 3031 0c6a 01       		.byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 105


 3032 0c6b 00       		.byte	0
 3033 0c6c 25       		.uleb128 0x25
 3034 0c6d 43030000 		.4byte	.LASF104
 3035 0c71 01       		.byte	0x1
 3036 0c72 2E       		.byte	0x2e
 3037 0c73 770C0000 		.4byte	0xc77
 3038 0c77 09       		.uleb128 0x9
 3039 0c78 5C0C0000 		.4byte	0xc5c
 3040 0c7c 26       		.uleb128 0x26
 3041 0c7d 38080000 		.4byte	.LASF105
 3042 0c81 01       		.byte	0x1
 3043 0c82 34       		.byte	0x34
 3044 0c83 260C0000 		.4byte	0xc26
 3045 0c87 05       		.uleb128 0x5
 3046 0c88 03       		.byte	0x3
 3047 0c89 00000000 		.4byte	CapSense_sensorBaseline
 3048 0c8d 26       		.uleb128 0x26
 3049 0c8e 00000000 		.4byte	.LASF106
 3050 0c92 01       		.byte	0x1
 3051 0c93 35       		.byte	0x35
 3052 0c94 5C0C0000 		.4byte	0xc5c
 3053 0c98 05       		.uleb128 0x5
 3054 0c99 03       		.byte	0x3
 3055 0c9a 00000000 		.4byte	CapSense_sensorBaselineLow
 3056 0c9e 26       		.uleb128 0x26
 3057 0c9f 16020000 		.4byte	.LASF107
 3058 0ca3 01       		.byte	0x1
 3059 0ca4 36       		.byte	0x36
 3060 0ca5 5C0C0000 		.4byte	0xc5c
 3061 0ca9 05       		.uleb128 0x5
 3062 0caa 03       		.byte	0x3
 3063 0cab 00000000 		.4byte	CapSense_sensorSignal
 3064 0caf 26       		.uleb128 0x26
 3065 0cb0 7E0A0000 		.4byte	.LASF108
 3066 0cb4 01       		.byte	0x1
 3067 0cb5 37       		.byte	0x37
 3068 0cb6 410C0000 		.4byte	0xc41
 3069 0cba 05       		.uleb128 0x5
 3070 0cbb 03       		.byte	0x3
 3071 0cbc 00000000 		.4byte	CapSense_sensorOnMask
 3072 0cc0 26       		.uleb128 0x26
 3073 0cc1 55000000 		.4byte	.LASF109
 3074 0cc5 01       		.byte	0x1
 3075 0cc6 39       		.byte	0x39
 3076 0cc7 5C0C0000 		.4byte	0xc5c
 3077 0ccb 05       		.uleb128 0x5
 3078 0ccc 03       		.byte	0x3
 3079 0ccd 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3080 0cd1 26       		.uleb128 0x26
 3081 0cd2 14080000 		.4byte	.LASF110
 3082 0cd6 01       		.byte	0x1
 3083 0cd7 3A       		.byte	0x3a
 3084 0cd8 5C0C0000 		.4byte	0xc5c
 3085 0cdc 05       		.uleb128 0x5
 3086 0cdd 03       		.byte	0x3
 3087 0cde 00000000 		.4byte	CapSense_lowBaselineReset
 3088 0ce2 26       		.uleb128 0x26
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 106


 3089 0ce3 2A030000 		.4byte	.LASF111
 3090 0ce7 01       		.byte	0x1
 3091 0ce8 49       		.byte	0x49
 3092 0ce9 5C0C0000 		.4byte	0xc5c
 3093 0ced 05       		.uleb128 0x5
 3094 0cee 03       		.byte	0x3
 3095 0cef 00000000 		.4byte	CapSense_fingerThreshold
 3096 0cf3 26       		.uleb128 0x26
 3097 0cf4 D5080000 		.4byte	.LASF112
 3098 0cf8 01       		.byte	0x1
 3099 0cf9 4B       		.byte	0x4b
 3100 0cfa 5C0C0000 		.4byte	0xc5c
 3101 0cfe 05       		.uleb128 0x5
 3102 0cff 03       		.byte	0x3
 3103 0d00 00000000 		.4byte	CapSense_noiseThreshold
 3104 0d04 26       		.uleb128 0x26
 3105 0d05 76040000 		.4byte	.LASF113
 3106 0d09 01       		.byte	0x1
 3107 0d0a 4D       		.byte	0x4d
 3108 0d0b 5C0C0000 		.4byte	0xc5c
 3109 0d0f 05       		.uleb128 0x5
 3110 0d10 03       		.byte	0x3
 3111 0d11 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3112 0d15 26       		.uleb128 0x26
 3113 0d16 7B020000 		.4byte	.LASF114
 3114 0d1a 01       		.byte	0x1
 3115 0d1b 4F       		.byte	0x4f
 3116 0d1c 5C0C0000 		.4byte	0xc5c
 3117 0d20 05       		.uleb128 0x5
 3118 0d21 03       		.byte	0x3
 3119 0d22 00000000 		.4byte	CapSense_hysteresis
 3120 0d26 26       		.uleb128 0x26
 3121 0d27 56070000 		.4byte	.LASF115
 3122 0d2b 01       		.byte	0x1
 3123 0d2c 51       		.byte	0x51
 3124 0d2d 5C0C0000 		.4byte	0xc5c
 3125 0d31 05       		.uleb128 0x5
 3126 0d32 03       		.byte	0x3
 3127 0d33 00000000 		.4byte	CapSense_debounce
 3128 0d37 26       		.uleb128 0x26
 3129 0d38 2C020000 		.4byte	.LASF116
 3130 0d3c 01       		.byte	0x1
 3131 0d3d 59       		.byte	0x59
 3132 0d3e 480D0000 		.4byte	0xd48
 3133 0d42 05       		.uleb128 0x5
 3134 0d43 03       		.byte	0x3
 3135 0d44 00000000 		.4byte	CapSense_rawDataIndex
 3136 0d48 09       		.uleb128 0x9
 3137 0d49 5C0C0000 		.4byte	0xc5c
 3138 0d4d 26       		.uleb128 0x26
 3139 0d4e 5D040000 		.4byte	.LASF117
 3140 0d52 01       		.byte	0x1
 3141 0d53 5E       		.byte	0x5e
 3142 0d54 5E0D0000 		.4byte	0xd5e
 3143 0d58 05       		.uleb128 0x5
 3144 0d59 03       		.byte	0x3
 3145 0d5a 00000000 		.4byte	CapSense_numberOfSensors
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 107


 3146 0d5e 09       		.uleb128 0x9
 3147 0d5f 5C0C0000 		.4byte	0xc5c
 3148 0d63 26       		.uleb128 0x26
 3149 0d64 660A0000 		.4byte	.LASF118
 3150 0d68 01       		.byte	0x1
 3151 0d69 27       		.byte	0x27
 3152 0d6a 260C0000 		.4byte	0xc26
 3153 0d6e 05       		.uleb128 0x5
 3154 0d6f 03       		.byte	0x3
 3155 0d70 00000000 		.4byte	CapSense_rawFilterData1
 3156 0d74 25       		.uleb128 0x25
 3157 0d75 EB000000 		.4byte	.LASF119
 3158 0d79 01       		.byte	0x1
 3159 0d7a 41       		.byte	0x41
 3160 0d7b A9020000 		.4byte	0x2a9
 3161 0d7f 26       		.uleb128 0x26
 3162 0d80 90090000 		.4byte	.LASF120
 3163 0d84 01       		.byte	0x1
 3164 0d85 45       		.byte	0x45
 3165 0d86 6B000000 		.4byte	0x6b
 3166 0d8a 05       		.uleb128 0x5
 3167 0d8b 03       		.byte	0x3
 3168 0d8c 00000000 		.4byte	CapSense_enableRawFilters
 3169 0d90 27       		.uleb128 0x27
 3170 0d91 08040000 		.4byte	.LASF121
 3171 0d95 04       		.byte	0x4
 3172 0d96 9D       		.byte	0x9d
 3173 0d97 A10D0000 		.4byte	0xda1
 3174 0d9b 0B       		.uleb128 0xb
 3175 0d9c 83000000 		.4byte	0x83
 3176 0da0 00       		.byte	0
 3177 0da1 28       		.uleb128 0x28
 3178 0da2 B6010000 		.4byte	.LASF127
 3179 0da6 04       		.byte	0x4
 3180 0da7 9C       		.byte	0x9c
 3181 0da8 83000000 		.4byte	0x83
 3182 0dac 29       		.uleb128 0x29
 3183 0dad 4A050000 		.4byte	.LASF128
 3184 0db1 04       		.byte	0x4
 3185 0db2 9F       		.byte	0x9f
 3186 0db3 2A       		.uleb128 0x2a
 3187 0db4 75090000 		.4byte	.LASF129
 3188 0db8 03       		.byte	0x3
 3189 0db9 6A       		.byte	0x6a
 3190 0dba 83000000 		.4byte	0x83
 3191 0dbe CD0D0000 		.4byte	0xdcd
 3192 0dc2 0B       		.uleb128 0xb
 3193 0dc3 D0010000 		.4byte	0x1d0
 3194 0dc7 0B       		.uleb128 0xb
 3195 0dc8 83000000 		.4byte	0x83
 3196 0dcc 00       		.byte	0
 3197 0dcd 27       		.uleb128 0x27
 3198 0dce 60090000 		.4byte	.LASF122
 3199 0dd2 03       		.byte	0x3
 3200 0dd3 6B       		.byte	0x6b
 3201 0dd4 E80D0000 		.4byte	0xde8
 3202 0dd8 0B       		.uleb128 0xb
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 108


 3203 0dd9 CA010000 		.4byte	0x1ca
 3204 0ddd 0B       		.uleb128 0xb
 3205 0dde 83000000 		.4byte	0x83
 3206 0de2 0B       		.uleb128 0xb
 3207 0de3 83000000 		.4byte	0x83
 3208 0de7 00       		.byte	0
 3209 0de8 27       		.uleb128 0x27
 3210 0de9 05030000 		.4byte	.LASF123
 3211 0ded 03       		.byte	0x3
 3212 0dee 81       		.byte	0x81
 3213 0def 030E0000 		.4byte	0xe03
 3214 0df3 0B       		.uleb128 0xb
 3215 0df4 AB000000 		.4byte	0xab
 3216 0df8 0B       		.uleb128 0xb
 3217 0df9 D6010000 		.4byte	0x1d6
 3218 0dfd 0B       		.uleb128 0xb
 3219 0dfe 030E0000 		.4byte	0xe03
 3220 0e02 00       		.byte	0
 3221 0e03 08       		.uleb128 0x8
 3222 0e04 04       		.byte	0x4
 3223 0e05 090E0000 		.4byte	0xe09
 3224 0e09 09       		.uleb128 0x9
 3225 0e0a 77000000 		.4byte	0x77
 3226 0e0e 2B       		.uleb128 0x2b
 3227 0e0f 30050000 		.4byte	.LASF130
 3228 0e13 01       		.byte	0x1
 3229 0e14 17       		.byte	0x17
 3230 0e15 0B       		.uleb128 0xb
 3231 0e16 83000000 		.4byte	0x83
 3232 0e1a 00       		.byte	0
 3233 0e1b 00       		.byte	0
 3234              		.section	.debug_abbrev,"",%progbits
 3235              	.Ldebug_abbrev0:
 3236 0000 01       		.uleb128 0x1
 3237 0001 11       		.uleb128 0x11
 3238 0002 01       		.byte	0x1
 3239 0003 25       		.uleb128 0x25
 3240 0004 0E       		.uleb128 0xe
 3241 0005 13       		.uleb128 0x13
 3242 0006 0B       		.uleb128 0xb
 3243 0007 03       		.uleb128 0x3
 3244 0008 0E       		.uleb128 0xe
 3245 0009 1B       		.uleb128 0x1b
 3246 000a 0E       		.uleb128 0xe
 3247 000b 55       		.uleb128 0x55
 3248 000c 17       		.uleb128 0x17
 3249 000d 11       		.uleb128 0x11
 3250 000e 01       		.uleb128 0x1
 3251 000f 10       		.uleb128 0x10
 3252 0010 17       		.uleb128 0x17
 3253 0011 00       		.byte	0
 3254 0012 00       		.byte	0
 3255 0013 02       		.uleb128 0x2
 3256 0014 24       		.uleb128 0x24
 3257 0015 00       		.byte	0
 3258 0016 0B       		.uleb128 0xb
 3259 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 109


 3260 0018 3E       		.uleb128 0x3e
 3261 0019 0B       		.uleb128 0xb
 3262 001a 03       		.uleb128 0x3
 3263 001b 0E       		.uleb128 0xe
 3264 001c 00       		.byte	0
 3265 001d 00       		.byte	0
 3266 001e 03       		.uleb128 0x3
 3267 001f 24       		.uleb128 0x24
 3268 0020 00       		.byte	0
 3269 0021 0B       		.uleb128 0xb
 3270 0022 0B       		.uleb128 0xb
 3271 0023 3E       		.uleb128 0x3e
 3272 0024 0B       		.uleb128 0xb
 3273 0025 03       		.uleb128 0x3
 3274 0026 08       		.uleb128 0x8
 3275 0027 00       		.byte	0
 3276 0028 00       		.byte	0
 3277 0029 04       		.uleb128 0x4
 3278 002a 16       		.uleb128 0x16
 3279 002b 00       		.byte	0
 3280 002c 03       		.uleb128 0x3
 3281 002d 0E       		.uleb128 0xe
 3282 002e 3A       		.uleb128 0x3a
 3283 002f 0B       		.uleb128 0xb
 3284 0030 3B       		.uleb128 0x3b
 3285 0031 05       		.uleb128 0x5
 3286 0032 49       		.uleb128 0x49
 3287 0033 13       		.uleb128 0x13
 3288 0034 00       		.byte	0
 3289 0035 00       		.byte	0
 3290 0036 05       		.uleb128 0x5
 3291 0037 0F       		.uleb128 0xf
 3292 0038 00       		.byte	0
 3293 0039 0B       		.uleb128 0xb
 3294 003a 0B       		.uleb128 0xb
 3295 003b 00       		.byte	0
 3296 003c 00       		.byte	0
 3297 003d 06       		.uleb128 0x6
 3298 003e 13       		.uleb128 0x13
 3299 003f 01       		.byte	0x1
 3300 0040 0B       		.uleb128 0xb
 3301 0041 0B       		.uleb128 0xb
 3302 0042 3A       		.uleb128 0x3a
 3303 0043 0B       		.uleb128 0xb
 3304 0044 3B       		.uleb128 0x3b
 3305 0045 0B       		.uleb128 0xb
 3306 0046 01       		.uleb128 0x1
 3307 0047 13       		.uleb128 0x13
 3308 0048 00       		.byte	0
 3309 0049 00       		.byte	0
 3310 004a 07       		.uleb128 0x7
 3311 004b 0D       		.uleb128 0xd
 3312 004c 00       		.byte	0
 3313 004d 03       		.uleb128 0x3
 3314 004e 0E       		.uleb128 0xe
 3315 004f 3A       		.uleb128 0x3a
 3316 0050 0B       		.uleb128 0xb
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 110


 3317 0051 3B       		.uleb128 0x3b
 3318 0052 0B       		.uleb128 0xb
 3319 0053 49       		.uleb128 0x49
 3320 0054 13       		.uleb128 0x13
 3321 0055 38       		.uleb128 0x38
 3322 0056 0B       		.uleb128 0xb
 3323 0057 00       		.byte	0
 3324 0058 00       		.byte	0
 3325 0059 08       		.uleb128 0x8
 3326 005a 0F       		.uleb128 0xf
 3327 005b 00       		.byte	0
 3328 005c 0B       		.uleb128 0xb
 3329 005d 0B       		.uleb128 0xb
 3330 005e 49       		.uleb128 0x49
 3331 005f 13       		.uleb128 0x13
 3332 0060 00       		.byte	0
 3333 0061 00       		.byte	0
 3334 0062 09       		.uleb128 0x9
 3335 0063 26       		.uleb128 0x26
 3336 0064 00       		.byte	0
 3337 0065 49       		.uleb128 0x49
 3338 0066 13       		.uleb128 0x13
 3339 0067 00       		.byte	0
 3340 0068 00       		.byte	0
 3341 0069 0A       		.uleb128 0xa
 3342 006a 15       		.uleb128 0x15
 3343 006b 01       		.byte	0x1
 3344 006c 27       		.uleb128 0x27
 3345 006d 19       		.uleb128 0x19
 3346 006e 49       		.uleb128 0x49
 3347 006f 13       		.uleb128 0x13
 3348 0070 01       		.uleb128 0x1
 3349 0071 13       		.uleb128 0x13
 3350 0072 00       		.byte	0
 3351 0073 00       		.byte	0
 3352 0074 0B       		.uleb128 0xb
 3353 0075 05       		.uleb128 0x5
 3354 0076 00       		.byte	0
 3355 0077 49       		.uleb128 0x49
 3356 0078 13       		.uleb128 0x13
 3357 0079 00       		.byte	0
 3358 007a 00       		.byte	0
 3359 007b 0C       		.uleb128 0xc
 3360 007c 15       		.uleb128 0x15
 3361 007d 01       		.byte	0x1
 3362 007e 27       		.uleb128 0x27
 3363 007f 19       		.uleb128 0x19
 3364 0080 01       		.uleb128 0x1
 3365 0081 13       		.uleb128 0x13
 3366 0082 00       		.byte	0
 3367 0083 00       		.byte	0
 3368 0084 0D       		.uleb128 0xd
 3369 0085 16       		.uleb128 0x16
 3370 0086 00       		.byte	0
 3371 0087 03       		.uleb128 0x3
 3372 0088 0E       		.uleb128 0xe
 3373 0089 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 111


 3374 008a 0B       		.uleb128 0xb
 3375 008b 3B       		.uleb128 0x3b
 3376 008c 0B       		.uleb128 0xb
 3377 008d 49       		.uleb128 0x49
 3378 008e 13       		.uleb128 0x13
 3379 008f 00       		.byte	0
 3380 0090 00       		.byte	0
 3381 0091 0E       		.uleb128 0xe
 3382 0092 2E       		.uleb128 0x2e
 3383 0093 01       		.byte	0x1
 3384 0094 3F       		.uleb128 0x3f
 3385 0095 19       		.uleb128 0x19
 3386 0096 03       		.uleb128 0x3
 3387 0097 0E       		.uleb128 0xe
 3388 0098 3A       		.uleb128 0x3a
 3389 0099 0B       		.uleb128 0xb
 3390 009a 3B       		.uleb128 0x3b
 3391 009b 0B       		.uleb128 0xb
 3392 009c 27       		.uleb128 0x27
 3393 009d 19       		.uleb128 0x19
 3394 009e 11       		.uleb128 0x11
 3395 009f 01       		.uleb128 0x1
 3396 00a0 12       		.uleb128 0x12
 3397 00a1 06       		.uleb128 0x6
 3398 00a2 40       		.uleb128 0x40
 3399 00a3 18       		.uleb128 0x18
 3400 00a4 9742     		.uleb128 0x2117
 3401 00a6 19       		.uleb128 0x19
 3402 00a7 01       		.uleb128 0x1
 3403 00a8 13       		.uleb128 0x13
 3404 00a9 00       		.byte	0
 3405 00aa 00       		.byte	0
 3406 00ab 0F       		.uleb128 0xf
 3407 00ac 05       		.uleb128 0x5
 3408 00ad 00       		.byte	0
 3409 00ae 03       		.uleb128 0x3
 3410 00af 0E       		.uleb128 0xe
 3411 00b0 3A       		.uleb128 0x3a
 3412 00b1 0B       		.uleb128 0xb
 3413 00b2 3B       		.uleb128 0x3b
 3414 00b3 0B       		.uleb128 0xb
 3415 00b4 49       		.uleb128 0x49
 3416 00b5 13       		.uleb128 0x13
 3417 00b6 02       		.uleb128 0x2
 3418 00b7 17       		.uleb128 0x17
 3419 00b8 00       		.byte	0
 3420 00b9 00       		.byte	0
 3421 00ba 10       		.uleb128 0x10
 3422 00bb 34       		.uleb128 0x34
 3423 00bc 00       		.byte	0
 3424 00bd 03       		.uleb128 0x3
 3425 00be 0E       		.uleb128 0xe
 3426 00bf 3A       		.uleb128 0x3a
 3427 00c0 0B       		.uleb128 0xb
 3428 00c1 3B       		.uleb128 0x3b
 3429 00c2 0B       		.uleb128 0xb
 3430 00c3 49       		.uleb128 0x49
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 112


 3431 00c4 13       		.uleb128 0x13
 3432 00c5 02       		.uleb128 0x2
 3433 00c6 17       		.uleb128 0x17
 3434 00c7 00       		.byte	0
 3435 00c8 00       		.byte	0
 3436 00c9 11       		.uleb128 0x11
 3437 00ca 898201   		.uleb128 0x4109
 3438 00cd 01       		.byte	0x1
 3439 00ce 11       		.uleb128 0x11
 3440 00cf 01       		.uleb128 0x1
 3441 00d0 31       		.uleb128 0x31
 3442 00d1 13       		.uleb128 0x13
 3443 00d2 01       		.uleb128 0x1
 3444 00d3 13       		.uleb128 0x13
 3445 00d4 00       		.byte	0
 3446 00d5 00       		.byte	0
 3447 00d6 12       		.uleb128 0x12
 3448 00d7 8A8201   		.uleb128 0x410a
 3449 00da 00       		.byte	0
 3450 00db 02       		.uleb128 0x2
 3451 00dc 18       		.uleb128 0x18
 3452 00dd 9142     		.uleb128 0x2111
 3453 00df 18       		.uleb128 0x18
 3454 00e0 00       		.byte	0
 3455 00e1 00       		.byte	0
 3456 00e2 13       		.uleb128 0x13
 3457 00e3 898201   		.uleb128 0x4109
 3458 00e6 00       		.byte	0
 3459 00e7 11       		.uleb128 0x11
 3460 00e8 01       		.uleb128 0x1
 3461 00e9 31       		.uleb128 0x31
 3462 00ea 13       		.uleb128 0x13
 3463 00eb 00       		.byte	0
 3464 00ec 00       		.byte	0
 3465 00ed 14       		.uleb128 0x14
 3466 00ee 898201   		.uleb128 0x4109
 3467 00f1 01       		.byte	0x1
 3468 00f2 11       		.uleb128 0x11
 3469 00f3 01       		.uleb128 0x1
 3470 00f4 31       		.uleb128 0x31
 3471 00f5 13       		.uleb128 0x13
 3472 00f6 00       		.byte	0
 3473 00f7 00       		.byte	0
 3474 00f8 15       		.uleb128 0x15
 3475 00f9 34       		.uleb128 0x34
 3476 00fa 00       		.byte	0
 3477 00fb 03       		.uleb128 0x3
 3478 00fc 08       		.uleb128 0x8
 3479 00fd 3A       		.uleb128 0x3a
 3480 00fe 0B       		.uleb128 0xb
 3481 00ff 3B       		.uleb128 0x3b
 3482 0100 0B       		.uleb128 0xb
 3483 0101 49       		.uleb128 0x49
 3484 0102 13       		.uleb128 0x13
 3485 0103 02       		.uleb128 0x2
 3486 0104 17       		.uleb128 0x17
 3487 0105 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 113


 3488 0106 00       		.byte	0
 3489 0107 16       		.uleb128 0x16
 3490 0108 2E       		.uleb128 0x2e
 3491 0109 01       		.byte	0x1
 3492 010a 3F       		.uleb128 0x3f
 3493 010b 19       		.uleb128 0x19
 3494 010c 03       		.uleb128 0x3
 3495 010d 0E       		.uleb128 0xe
 3496 010e 3A       		.uleb128 0x3a
 3497 010f 0B       		.uleb128 0xb
 3498 0110 3B       		.uleb128 0x3b
 3499 0111 05       		.uleb128 0x5
 3500 0112 27       		.uleb128 0x27
 3501 0113 19       		.uleb128 0x19
 3502 0114 11       		.uleb128 0x11
 3503 0115 01       		.uleb128 0x1
 3504 0116 12       		.uleb128 0x12
 3505 0117 06       		.uleb128 0x6
 3506 0118 40       		.uleb128 0x40
 3507 0119 18       		.uleb128 0x18
 3508 011a 9742     		.uleb128 0x2117
 3509 011c 19       		.uleb128 0x19
 3510 011d 01       		.uleb128 0x1
 3511 011e 13       		.uleb128 0x13
 3512 011f 00       		.byte	0
 3513 0120 00       		.byte	0
 3514 0121 17       		.uleb128 0x17
 3515 0122 34       		.uleb128 0x34
 3516 0123 00       		.byte	0
 3517 0124 03       		.uleb128 0x3
 3518 0125 08       		.uleb128 0x8
 3519 0126 3A       		.uleb128 0x3a
 3520 0127 0B       		.uleb128 0xb
 3521 0128 3B       		.uleb128 0x3b
 3522 0129 05       		.uleb128 0x5
 3523 012a 49       		.uleb128 0x49
 3524 012b 13       		.uleb128 0x13
 3525 012c 02       		.uleb128 0x2
 3526 012d 17       		.uleb128 0x17
 3527 012e 00       		.byte	0
 3528 012f 00       		.byte	0
 3529 0130 18       		.uleb128 0x18
 3530 0131 34       		.uleb128 0x34
 3531 0132 00       		.byte	0
 3532 0133 03       		.uleb128 0x3
 3533 0134 0E       		.uleb128 0xe
 3534 0135 3A       		.uleb128 0x3a
 3535 0136 0B       		.uleb128 0xb
 3536 0137 3B       		.uleb128 0x3b
 3537 0138 05       		.uleb128 0x5
 3538 0139 49       		.uleb128 0x49
 3539 013a 13       		.uleb128 0x13
 3540 013b 02       		.uleb128 0x2
 3541 013c 17       		.uleb128 0x17
 3542 013d 00       		.byte	0
 3543 013e 00       		.byte	0
 3544 013f 19       		.uleb128 0x19
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 114


 3545 0140 2E       		.uleb128 0x2e
 3546 0141 01       		.byte	0x1
 3547 0142 3F       		.uleb128 0x3f
 3548 0143 19       		.uleb128 0x19
 3549 0144 03       		.uleb128 0x3
 3550 0145 0E       		.uleb128 0xe
 3551 0146 3A       		.uleb128 0x3a
 3552 0147 0B       		.uleb128 0xb
 3553 0148 3B       		.uleb128 0x3b
 3554 0149 05       		.uleb128 0x5
 3555 014a 27       		.uleb128 0x27
 3556 014b 19       		.uleb128 0x19
 3557 014c 49       		.uleb128 0x49
 3558 014d 13       		.uleb128 0x13
 3559 014e 11       		.uleb128 0x11
 3560 014f 01       		.uleb128 0x1
 3561 0150 12       		.uleb128 0x12
 3562 0151 06       		.uleb128 0x6
 3563 0152 40       		.uleb128 0x40
 3564 0153 18       		.uleb128 0x18
 3565 0154 9742     		.uleb128 0x2117
 3566 0156 19       		.uleb128 0x19
 3567 0157 01       		.uleb128 0x1
 3568 0158 13       		.uleb128 0x13
 3569 0159 00       		.byte	0
 3570 015a 00       		.byte	0
 3571 015b 1A       		.uleb128 0x1a
 3572 015c 05       		.uleb128 0x5
 3573 015d 00       		.byte	0
 3574 015e 03       		.uleb128 0x3
 3575 015f 0E       		.uleb128 0xe
 3576 0160 3A       		.uleb128 0x3a
 3577 0161 0B       		.uleb128 0xb
 3578 0162 3B       		.uleb128 0x3b
 3579 0163 05       		.uleb128 0x5
 3580 0164 49       		.uleb128 0x49
 3581 0165 13       		.uleb128 0x13
 3582 0166 02       		.uleb128 0x2
 3583 0167 17       		.uleb128 0x17
 3584 0168 00       		.byte	0
 3585 0169 00       		.byte	0
 3586 016a 1B       		.uleb128 0x1b
 3587 016b 05       		.uleb128 0x5
 3588 016c 00       		.byte	0
 3589 016d 03       		.uleb128 0x3
 3590 016e 0E       		.uleb128 0xe
 3591 016f 3A       		.uleb128 0x3a
 3592 0170 0B       		.uleb128 0xb
 3593 0171 3B       		.uleb128 0x3b
 3594 0172 05       		.uleb128 0x5
 3595 0173 49       		.uleb128 0x49
 3596 0174 13       		.uleb128 0x13
 3597 0175 02       		.uleb128 0x2
 3598 0176 18       		.uleb128 0x18
 3599 0177 00       		.byte	0
 3600 0178 00       		.byte	0
 3601 0179 1C       		.uleb128 0x1c
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 115


 3602 017a 34       		.uleb128 0x34
 3603 017b 00       		.byte	0
 3604 017c 03       		.uleb128 0x3
 3605 017d 0E       		.uleb128 0xe
 3606 017e 3A       		.uleb128 0x3a
 3607 017f 0B       		.uleb128 0xb
 3608 0180 3B       		.uleb128 0x3b
 3609 0181 05       		.uleb128 0x5
 3610 0182 49       		.uleb128 0x49
 3611 0183 13       		.uleb128 0x13
 3612 0184 00       		.byte	0
 3613 0185 00       		.byte	0
 3614 0186 1D       		.uleb128 0x1d
 3615 0187 05       		.uleb128 0x5
 3616 0188 00       		.byte	0
 3617 0189 03       		.uleb128 0x3
 3618 018a 08       		.uleb128 0x8
 3619 018b 3A       		.uleb128 0x3a
 3620 018c 0B       		.uleb128 0xb
 3621 018d 3B       		.uleb128 0x3b
 3622 018e 05       		.uleb128 0x5
 3623 018f 49       		.uleb128 0x49
 3624 0190 13       		.uleb128 0x13
 3625 0191 02       		.uleb128 0x2
 3626 0192 17       		.uleb128 0x17
 3627 0193 00       		.byte	0
 3628 0194 00       		.byte	0
 3629 0195 1E       		.uleb128 0x1e
 3630 0196 05       		.uleb128 0x5
 3631 0197 00       		.byte	0
 3632 0198 03       		.uleb128 0x3
 3633 0199 08       		.uleb128 0x8
 3634 019a 3A       		.uleb128 0x3a
 3635 019b 0B       		.uleb128 0xb
 3636 019c 3B       		.uleb128 0x3b
 3637 019d 05       		.uleb128 0x5
 3638 019e 49       		.uleb128 0x49
 3639 019f 13       		.uleb128 0x13
 3640 01a0 02       		.uleb128 0x2
 3641 01a1 18       		.uleb128 0x18
 3642 01a2 00       		.byte	0
 3643 01a3 00       		.byte	0
 3644 01a4 1F       		.uleb128 0x1f
 3645 01a5 34       		.uleb128 0x34
 3646 01a6 00       		.byte	0
 3647 01a7 03       		.uleb128 0x3
 3648 01a8 08       		.uleb128 0x8
 3649 01a9 3A       		.uleb128 0x3a
 3650 01aa 0B       		.uleb128 0xb
 3651 01ab 3B       		.uleb128 0x3b
 3652 01ac 05       		.uleb128 0x5
 3653 01ad 49       		.uleb128 0x49
 3654 01ae 13       		.uleb128 0x13
 3655 01af 00       		.byte	0
 3656 01b0 00       		.byte	0
 3657 01b1 20       		.uleb128 0x20
 3658 01b2 34       		.uleb128 0x34
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 116


 3659 01b3 00       		.byte	0
 3660 01b4 03       		.uleb128 0x3
 3661 01b5 0E       		.uleb128 0xe
 3662 01b6 3A       		.uleb128 0x3a
 3663 01b7 0B       		.uleb128 0xb
 3664 01b8 3B       		.uleb128 0x3b
 3665 01b9 05       		.uleb128 0x5
 3666 01ba 49       		.uleb128 0x49
 3667 01bb 13       		.uleb128 0x13
 3668 01bc 02       		.uleb128 0x2
 3669 01bd 18       		.uleb128 0x18
 3670 01be 00       		.byte	0
 3671 01bf 00       		.byte	0
 3672 01c0 21       		.uleb128 0x21
 3673 01c1 2E       		.uleb128 0x2e
 3674 01c2 00       		.byte	0
 3675 01c3 3F       		.uleb128 0x3f
 3676 01c4 19       		.uleb128 0x19
 3677 01c5 03       		.uleb128 0x3
 3678 01c6 0E       		.uleb128 0xe
 3679 01c7 3A       		.uleb128 0x3a
 3680 01c8 0B       		.uleb128 0xb
 3681 01c9 3B       		.uleb128 0x3b
 3682 01ca 05       		.uleb128 0x5
 3683 01cb 27       		.uleb128 0x27
 3684 01cc 19       		.uleb128 0x19
 3685 01cd 11       		.uleb128 0x11
 3686 01ce 01       		.uleb128 0x1
 3687 01cf 12       		.uleb128 0x12
 3688 01d0 06       		.uleb128 0x6
 3689 01d1 40       		.uleb128 0x40
 3690 01d2 18       		.uleb128 0x18
 3691 01d3 9742     		.uleb128 0x2117
 3692 01d5 19       		.uleb128 0x19
 3693 01d6 00       		.byte	0
 3694 01d7 00       		.byte	0
 3695 01d8 22       		.uleb128 0x22
 3696 01d9 01       		.uleb128 0x1
 3697 01da 01       		.byte	0x1
 3698 01db 49       		.uleb128 0x49
 3699 01dc 13       		.uleb128 0x13
 3700 01dd 01       		.uleb128 0x1
 3701 01de 13       		.uleb128 0x13
 3702 01df 00       		.byte	0
 3703 01e0 00       		.byte	0
 3704 01e1 23       		.uleb128 0x23
 3705 01e2 21       		.uleb128 0x21
 3706 01e3 00       		.byte	0
 3707 01e4 49       		.uleb128 0x49
 3708 01e5 13       		.uleb128 0x13
 3709 01e6 2F       		.uleb128 0x2f
 3710 01e7 0B       		.uleb128 0xb
 3711 01e8 00       		.byte	0
 3712 01e9 00       		.byte	0
 3713 01ea 24       		.uleb128 0x24
 3714 01eb 34       		.uleb128 0x34
 3715 01ec 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 117


 3716 01ed 03       		.uleb128 0x3
 3717 01ee 0E       		.uleb128 0xe
 3718 01ef 3A       		.uleb128 0x3a
 3719 01f0 0B       		.uleb128 0xb
 3720 01f1 3B       		.uleb128 0x3b
 3721 01f2 0B       		.uleb128 0xb
 3722 01f3 49       		.uleb128 0x49
 3723 01f4 13       		.uleb128 0x13
 3724 01f5 02       		.uleb128 0x2
 3725 01f6 18       		.uleb128 0x18
 3726 01f7 00       		.byte	0
 3727 01f8 00       		.byte	0
 3728 01f9 25       		.uleb128 0x25
 3729 01fa 34       		.uleb128 0x34
 3730 01fb 00       		.byte	0
 3731 01fc 03       		.uleb128 0x3
 3732 01fd 0E       		.uleb128 0xe
 3733 01fe 3A       		.uleb128 0x3a
 3734 01ff 0B       		.uleb128 0xb
 3735 0200 3B       		.uleb128 0x3b
 3736 0201 0B       		.uleb128 0xb
 3737 0202 49       		.uleb128 0x49
 3738 0203 13       		.uleb128 0x13
 3739 0204 3F       		.uleb128 0x3f
 3740 0205 19       		.uleb128 0x19
 3741 0206 3C       		.uleb128 0x3c
 3742 0207 19       		.uleb128 0x19
 3743 0208 00       		.byte	0
 3744 0209 00       		.byte	0
 3745 020a 26       		.uleb128 0x26
 3746 020b 34       		.uleb128 0x34
 3747 020c 00       		.byte	0
 3748 020d 03       		.uleb128 0x3
 3749 020e 0E       		.uleb128 0xe
 3750 020f 3A       		.uleb128 0x3a
 3751 0210 0B       		.uleb128 0xb
 3752 0211 3B       		.uleb128 0x3b
 3753 0212 0B       		.uleb128 0xb
 3754 0213 49       		.uleb128 0x49
 3755 0214 13       		.uleb128 0x13
 3756 0215 3F       		.uleb128 0x3f
 3757 0216 19       		.uleb128 0x19
 3758 0217 02       		.uleb128 0x2
 3759 0218 18       		.uleb128 0x18
 3760 0219 00       		.byte	0
 3761 021a 00       		.byte	0
 3762 021b 27       		.uleb128 0x27
 3763 021c 2E       		.uleb128 0x2e
 3764 021d 01       		.byte	0x1
 3765 021e 3F       		.uleb128 0x3f
 3766 021f 19       		.uleb128 0x19
 3767 0220 03       		.uleb128 0x3
 3768 0221 0E       		.uleb128 0xe
 3769 0222 3A       		.uleb128 0x3a
 3770 0223 0B       		.uleb128 0xb
 3771 0224 3B       		.uleb128 0x3b
 3772 0225 0B       		.uleb128 0xb
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 118


 3773 0226 27       		.uleb128 0x27
 3774 0227 19       		.uleb128 0x19
 3775 0228 3C       		.uleb128 0x3c
 3776 0229 19       		.uleb128 0x19
 3777 022a 01       		.uleb128 0x1
 3778 022b 13       		.uleb128 0x13
 3779 022c 00       		.byte	0
 3780 022d 00       		.byte	0
 3781 022e 28       		.uleb128 0x28
 3782 022f 2E       		.uleb128 0x2e
 3783 0230 00       		.byte	0
 3784 0231 3F       		.uleb128 0x3f
 3785 0232 19       		.uleb128 0x19
 3786 0233 03       		.uleb128 0x3
 3787 0234 0E       		.uleb128 0xe
 3788 0235 3A       		.uleb128 0x3a
 3789 0236 0B       		.uleb128 0xb
 3790 0237 3B       		.uleb128 0x3b
 3791 0238 0B       		.uleb128 0xb
 3792 0239 27       		.uleb128 0x27
 3793 023a 19       		.uleb128 0x19
 3794 023b 49       		.uleb128 0x49
 3795 023c 13       		.uleb128 0x13
 3796 023d 3C       		.uleb128 0x3c
 3797 023e 19       		.uleb128 0x19
 3798 023f 00       		.byte	0
 3799 0240 00       		.byte	0
 3800 0241 29       		.uleb128 0x29
 3801 0242 2E       		.uleb128 0x2e
 3802 0243 00       		.byte	0
 3803 0244 3F       		.uleb128 0x3f
 3804 0245 19       		.uleb128 0x19
 3805 0246 03       		.uleb128 0x3
 3806 0247 0E       		.uleb128 0xe
 3807 0248 3A       		.uleb128 0x3a
 3808 0249 0B       		.uleb128 0xb
 3809 024a 3B       		.uleb128 0x3b
 3810 024b 0B       		.uleb128 0xb
 3811 024c 27       		.uleb128 0x27
 3812 024d 19       		.uleb128 0x19
 3813 024e 3C       		.uleb128 0x3c
 3814 024f 19       		.uleb128 0x19
 3815 0250 00       		.byte	0
 3816 0251 00       		.byte	0
 3817 0252 2A       		.uleb128 0x2a
 3818 0253 2E       		.uleb128 0x2e
 3819 0254 01       		.byte	0x1
 3820 0255 3F       		.uleb128 0x3f
 3821 0256 19       		.uleb128 0x19
 3822 0257 03       		.uleb128 0x3
 3823 0258 0E       		.uleb128 0xe
 3824 0259 3A       		.uleb128 0x3a
 3825 025a 0B       		.uleb128 0xb
 3826 025b 3B       		.uleb128 0x3b
 3827 025c 0B       		.uleb128 0xb
 3828 025d 27       		.uleb128 0x27
 3829 025e 19       		.uleb128 0x19
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 119


 3830 025f 49       		.uleb128 0x49
 3831 0260 13       		.uleb128 0x13
 3832 0261 3C       		.uleb128 0x3c
 3833 0262 19       		.uleb128 0x19
 3834 0263 01       		.uleb128 0x1
 3835 0264 13       		.uleb128 0x13
 3836 0265 00       		.byte	0
 3837 0266 00       		.byte	0
 3838 0267 2B       		.uleb128 0x2b
 3839 0268 2E       		.uleb128 0x2e
 3840 0269 01       		.byte	0x1
 3841 026a 3F       		.uleb128 0x3f
 3842 026b 19       		.uleb128 0x19
 3843 026c 03       		.uleb128 0x3
 3844 026d 0E       		.uleb128 0xe
 3845 026e 3A       		.uleb128 0x3a
 3846 026f 0B       		.uleb128 0xb
 3847 0270 3B       		.uleb128 0x3b
 3848 0271 0B       		.uleb128 0xb
 3849 0272 27       		.uleb128 0x27
 3850 0273 19       		.uleb128 0x19
 3851 0274 3C       		.uleb128 0x3c
 3852 0275 19       		.uleb128 0x19
 3853 0276 00       		.byte	0
 3854 0277 00       		.byte	0
 3855 0278 00       		.byte	0
 3856              		.section	.debug_loc,"",%progbits
 3857              	.Ldebug_loc0:
 3858              	.LLST0:
 3859 0000 00000000 		.4byte	.LVL0
 3860 0004 12000000 		.4byte	.LVL2
 3861 0008 0100     		.2byte	0x1
 3862 000a 50       		.byte	0x50
 3863 000b 12000000 		.4byte	.LVL2
 3864 000f 3C000000 		.4byte	.LFE36
 3865 0013 0400     		.2byte	0x4
 3866 0015 F3       		.byte	0xf3
 3867 0016 01       		.uleb128 0x1
 3868 0017 50       		.byte	0x50
 3869 0018 9F       		.byte	0x9f
 3870 0019 00000000 		.4byte	0
 3871 001d 00000000 		.4byte	0
 3872              	.LLST1:
 3873 0021 06000000 		.4byte	.LVL1
 3874 0025 1E000000 		.4byte	.LVL3
 3875 0029 0100     		.2byte	0x1
 3876 002b 53       		.byte	0x53
 3877 002c 00000000 		.4byte	0
 3878 0030 00000000 		.4byte	0
 3879              	.LLST2:
 3880 0034 00000000 		.4byte	.LVL4
 3881 0038 07000000 		.4byte	.LVL5-1
 3882 003c 0100     		.2byte	0x1
 3883 003e 50       		.byte	0x50
 3884 003f 07000000 		.4byte	.LVL5-1
 3885 0043 16000000 		.4byte	.LVL8
 3886 0047 0100     		.2byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 120


 3887 0049 54       		.byte	0x54
 3888 004a 16000000 		.4byte	.LVL8
 3889 004e 18000000 		.4byte	.LFE37
 3890 0052 0400     		.2byte	0x4
 3891 0054 F3       		.byte	0xf3
 3892 0055 01       		.uleb128 0x1
 3893 0056 50       		.byte	0x50
 3894 0057 9F       		.byte	0x9f
 3895 0058 00000000 		.4byte	0
 3896 005c 00000000 		.4byte	0
 3897              	.LLST3:
 3898 0060 02000000 		.4byte	.LVL9
 3899 0064 06000000 		.4byte	.LVL10
 3900 0068 0200     		.2byte	0x2
 3901 006a 30       		.byte	0x30
 3902 006b 9F       		.byte	0x9f
 3903 006c 06000000 		.4byte	.LVL10
 3904 0070 12000000 		.4byte	.LVL13
 3905 0074 0100     		.2byte	0x1
 3906 0076 54       		.byte	0x54
 3907 0077 00000000 		.4byte	0
 3908 007b 00000000 		.4byte	0
 3909              	.LLST4:
 3910 007f 12000000 		.4byte	.LVL16
 3911 0083 2A000000 		.4byte	.LVL21
 3912 0087 0100     		.2byte	0x1
 3913 0089 54       		.byte	0x54
 3914 008a 00000000 		.4byte	0
 3915 008e 00000000 		.4byte	0
 3916              	.LLST5:
 3917 0092 1A000000 		.4byte	.LVL17
 3918 0096 20000000 		.4byte	.LVL18
 3919 009a 0100     		.2byte	0x1
 3920 009c 50       		.byte	0x50
 3921 009d 00000000 		.4byte	0
 3922 00a1 00000000 		.4byte	0
 3923              	.LLST6:
 3924 00a5 00000000 		.4byte	.LVL22
 3925 00a9 02000000 		.4byte	.LVL23
 3926 00ad 0100     		.2byte	0x1
 3927 00af 50       		.byte	0x50
 3928 00b0 02000000 		.4byte	.LVL23
 3929 00b4 0C000000 		.4byte	.LFE44
 3930 00b8 0400     		.2byte	0x4
 3931 00ba F3       		.byte	0xf3
 3932 00bb 01       		.uleb128 0x1
 3933 00bc 50       		.byte	0x50
 3934 00bd 9F       		.byte	0x9f
 3935 00be 00000000 		.4byte	0
 3936 00c2 00000000 		.4byte	0
 3937              	.LLST7:
 3938 00c6 00000000 		.4byte	.LVL24
 3939 00ca 02000000 		.4byte	.LVL25
 3940 00ce 0100     		.2byte	0x1
 3941 00d0 50       		.byte	0x50
 3942 00d1 02000000 		.4byte	.LVL25
 3943 00d5 0C000000 		.4byte	.LFE45
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 121


 3944 00d9 0400     		.2byte	0x4
 3945 00db F3       		.byte	0xf3
 3946 00dc 01       		.uleb128 0x1
 3947 00dd 50       		.byte	0x50
 3948 00de 9F       		.byte	0x9f
 3949 00df 00000000 		.4byte	0
 3950 00e3 00000000 		.4byte	0
 3951              	.LLST8:
 3952 00e7 00000000 		.4byte	.LVL26
 3953 00eb 04000000 		.4byte	.LVL27
 3954 00ef 0100     		.2byte	0x1
 3955 00f1 50       		.byte	0x50
 3956 00f2 04000000 		.4byte	.LVL27
 3957 00f6 0C000000 		.4byte	.LFE46
 3958 00fa 0400     		.2byte	0x4
 3959 00fc F3       		.byte	0xf3
 3960 00fd 01       		.uleb128 0x1
 3961 00fe 50       		.byte	0x50
 3962 00ff 9F       		.byte	0x9f
 3963 0100 00000000 		.4byte	0
 3964 0104 00000000 		.4byte	0
 3965              	.LLST9:
 3966 0108 00000000 		.4byte	.LVL28
 3967 010c 04000000 		.4byte	.LVL29
 3968 0110 0100     		.2byte	0x1
 3969 0112 50       		.byte	0x50
 3970 0113 04000000 		.4byte	.LVL29
 3971 0117 0C000000 		.4byte	.LFE47
 3972 011b 0400     		.2byte	0x4
 3973 011d F3       		.byte	0xf3
 3974 011e 01       		.uleb128 0x1
 3975 011f 50       		.byte	0x50
 3976 0120 9F       		.byte	0x9f
 3977 0121 00000000 		.4byte	0
 3978 0125 00000000 		.4byte	0
 3979              	.LLST10:
 3980 0129 00000000 		.4byte	.LVL30
 3981 012d 04000000 		.4byte	.LVL31
 3982 0131 0100     		.2byte	0x1
 3983 0133 50       		.byte	0x50
 3984 0134 04000000 		.4byte	.LVL31
 3985 0138 0C000000 		.4byte	.LFE48
 3986 013c 0400     		.2byte	0x4
 3987 013e F3       		.byte	0xf3
 3988 013f 01       		.uleb128 0x1
 3989 0140 50       		.byte	0x50
 3990 0141 9F       		.byte	0x9f
 3991 0142 00000000 		.4byte	0
 3992 0146 00000000 		.4byte	0
 3993              	.LLST11:
 3994 014a 00000000 		.4byte	.LVL32
 3995 014e 04000000 		.4byte	.LVL33
 3996 0152 0100     		.2byte	0x1
 3997 0154 50       		.byte	0x50
 3998 0155 04000000 		.4byte	.LVL33
 3999 0159 0C000000 		.4byte	.LFE49
 4000 015d 0400     		.2byte	0x4
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 122


 4001 015f F3       		.byte	0xf3
 4002 0160 01       		.uleb128 0x1
 4003 0161 50       		.byte	0x50
 4004 0162 9F       		.byte	0x9f
 4005 0163 00000000 		.4byte	0
 4006 0167 00000000 		.4byte	0
 4007              	.LLST12:
 4008 016b 00000000 		.4byte	.LVL34
 4009 016f 04000000 		.4byte	.LVL35
 4010 0173 0100     		.2byte	0x1
 4011 0175 50       		.byte	0x50
 4012 0176 04000000 		.4byte	.LVL35
 4013 017a 0C000000 		.4byte	.LFE50
 4014 017e 0400     		.2byte	0x4
 4015 0180 F3       		.byte	0xf3
 4016 0181 01       		.uleb128 0x1
 4017 0182 50       		.byte	0x50
 4018 0183 9F       		.byte	0x9f
 4019 0184 00000000 		.4byte	0
 4020 0188 00000000 		.4byte	0
 4021              	.LLST13:
 4022 018c 00000000 		.4byte	.LVL36
 4023 0190 04000000 		.4byte	.LVL37
 4024 0194 0100     		.2byte	0x1
 4025 0196 50       		.byte	0x50
 4026 0197 04000000 		.4byte	.LVL37
 4027 019b 0C000000 		.4byte	.LFE51
 4028 019f 0400     		.2byte	0x4
 4029 01a1 F3       		.byte	0xf3
 4030 01a2 01       		.uleb128 0x1
 4031 01a3 50       		.byte	0x50
 4032 01a4 9F       		.byte	0x9f
 4033 01a5 00000000 		.4byte	0
 4034 01a9 00000000 		.4byte	0
 4035              	.LLST14:
 4036 01ad 00000000 		.4byte	.LVL43
 4037 01b1 04000000 		.4byte	.LVL44
 4038 01b5 0100     		.2byte	0x1
 4039 01b7 50       		.byte	0x50
 4040 01b8 04000000 		.4byte	.LVL44
 4041 01bc 0C000000 		.4byte	.LFE57
 4042 01c0 0400     		.2byte	0x4
 4043 01c2 F3       		.byte	0xf3
 4044 01c3 01       		.uleb128 0x1
 4045 01c4 50       		.byte	0x50
 4046 01c5 9F       		.byte	0x9f
 4047 01c6 00000000 		.4byte	0
 4048 01ca 00000000 		.4byte	0
 4049              	.LLST15:
 4050 01ce 00000000 		.4byte	.LVL45
 4051 01d2 1C000000 		.4byte	.LVL49
 4052 01d6 0100     		.2byte	0x1
 4053 01d8 50       		.byte	0x50
 4054 01d9 1C000000 		.4byte	.LVL49
 4055 01dd 8C000000 		.4byte	.LVL57
 4056 01e1 0100     		.2byte	0x1
 4057 01e3 54       		.byte	0x54
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 123


 4058 01e4 8C000000 		.4byte	.LVL57
 4059 01e8 A8000000 		.4byte	.LFE58
 4060 01ec 0400     		.2byte	0x4
 4061 01ee F3       		.byte	0xf3
 4062 01ef 01       		.uleb128 0x1
 4063 01f0 50       		.byte	0x50
 4064 01f1 9F       		.byte	0x9f
 4065 01f2 00000000 		.4byte	0
 4066 01f6 00000000 		.4byte	0
 4067              	.LLST16:
 4068 01fa 1A000000 		.4byte	.LVL48
 4069 01fe 8C000000 		.4byte	.LVL59
 4070 0202 0100     		.2byte	0x1
 4071 0204 58       		.byte	0x58
 4072 0205 00000000 		.4byte	0
 4073 0209 00000000 		.4byte	0
 4074              	.LLST17:
 4075 020d 10000000 		.4byte	.LVL46
 4076 0211 8C000000 		.4byte	.LVL58
 4077 0215 0100     		.2byte	0x1
 4078 0217 57       		.byte	0x57
 4079 0218 00000000 		.4byte	0
 4080 021c 00000000 		.4byte	0
 4081              	.LLST18:
 4082 0220 14000000 		.4byte	.LVL47
 4083 0224 30000000 		.4byte	.LVL51
 4084 0228 0100     		.2byte	0x1
 4085 022a 56       		.byte	0x56
 4086 022b 4A000000 		.4byte	.LVL53
 4087 022f 52000000 		.4byte	.LVL54
 4088 0233 0100     		.2byte	0x1
 4089 0235 56       		.byte	0x56
 4090 0236 00000000 		.4byte	0
 4091 023a 00000000 		.4byte	0
 4092              	.LLST19:
 4093 023e 00000000 		.4byte	.LVL60
 4094 0242 08000000 		.4byte	.LVL62
 4095 0246 0100     		.2byte	0x1
 4096 0248 50       		.byte	0x50
 4097 0249 08000000 		.4byte	.LVL62
 4098 024d 28000000 		.4byte	.LFE59
 4099 0251 0400     		.2byte	0x4
 4100 0253 F3       		.byte	0xf3
 4101 0254 01       		.uleb128 0x1
 4102 0255 50       		.byte	0x50
 4103 0256 9F       		.byte	0x9f
 4104 0257 00000000 		.4byte	0
 4105 025b 00000000 		.4byte	0
 4106              	.LLST20:
 4107 025f 06000000 		.4byte	.LVL61
 4108 0263 22000000 		.4byte	.LVL68
 4109 0267 0100     		.2byte	0x1
 4110 0269 54       		.byte	0x54
 4111 026a 00000000 		.4byte	0
 4112 026e 00000000 		.4byte	0
 4113              	.LLST21:
 4114 0272 0C000000 		.4byte	.LVL63
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 124


 4115 0276 22000000 		.4byte	.LVL69
 4116 027a 0100     		.2byte	0x1
 4117 027c 55       		.byte	0x55
 4118 027d 22000000 		.4byte	.LVL69
 4119 0281 28000000 		.4byte	.LFE59
 4120 0285 1E00     		.2byte	0x1e
 4121 0287 F3       		.byte	0xf3
 4122 0288 01       		.uleb128 0x1
 4123 0289 50       		.byte	0x50
 4124 028a 03       		.byte	0x3
 4125 028b 04000000 		.4byte	.LANCHOR2+4
 4126 028f 22       		.byte	0x22
 4127 0290 94       		.byte	0x94
 4128 0291 01       		.byte	0x1
 4129 0292 08       		.byte	0x8
 4130 0293 FF       		.byte	0xff
 4131 0294 1A       		.byte	0x1a
 4132 0295 F3       		.byte	0xf3
 4133 0296 01       		.uleb128 0x1
 4134 0297 50       		.byte	0x50
 4135 0298 03       		.byte	0x3
 4136 0299 00000000 		.4byte	.LANCHOR2
 4137 029d 22       		.byte	0x22
 4138 029e 94       		.byte	0x94
 4139 029f 01       		.byte	0x1
 4140 02a0 08       		.byte	0x8
 4141 02a1 FF       		.byte	0xff
 4142 02a2 1A       		.byte	0x1a
 4143 02a3 22       		.byte	0x22
 4144 02a4 9F       		.byte	0x9f
 4145 02a5 00000000 		.4byte	0
 4146 02a9 00000000 		.4byte	0
 4147              	.LLST22:
 4148 02ad 0C000000 		.4byte	.LVL63
 4149 02b1 0E000000 		.4byte	.LVL64
 4150 02b5 0200     		.2byte	0x2
 4151 02b7 30       		.byte	0x30
 4152 02b8 9F       		.byte	0x9f
 4153 02b9 0E000000 		.4byte	.LVL64
 4154 02bd 22000000 		.4byte	.LVL70
 4155 02c1 0100     		.2byte	0x1
 4156 02c3 56       		.byte	0x56
 4157 02c4 22000000 		.4byte	.LVL70
 4158 02c8 28000000 		.4byte	.LFE59
 4159 02cc 0100     		.2byte	0x1
 4160 02ce 50       		.byte	0x50
 4161 02cf 00000000 		.4byte	0
 4162 02d3 00000000 		.4byte	0
 4163              	.LLST23:
 4164 02d7 02000000 		.4byte	.LVL71
 4165 02db 08000000 		.4byte	.LVL72
 4166 02df 0200     		.2byte	0x2
 4167 02e1 30       		.byte	0x30
 4168 02e2 9F       		.byte	0x9f
 4169 02e3 08000000 		.4byte	.LVL72
 4170 02e7 1C000000 		.4byte	.LVL76
 4171 02eb 0100     		.2byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 125


 4172 02ed 54       		.byte	0x54
 4173 02ee 00000000 		.4byte	0
 4174 02f2 00000000 		.4byte	0
 4175              	.LLST24:
 4176 02f6 02000000 		.4byte	.LVL71
 4177 02fa 08000000 		.4byte	.LVL72
 4178 02fe 0200     		.2byte	0x2
 4179 0300 30       		.byte	0x30
 4180 0301 9F       		.byte	0x9f
 4181 0302 08000000 		.4byte	.LVL72
 4182 0306 1C000000 		.4byte	.LVL77
 4183 030a 0100     		.2byte	0x1
 4184 030c 55       		.byte	0x55
 4185 030d 1C000000 		.4byte	.LVL77
 4186 0311 1E000000 		.4byte	.LFE60
 4187 0315 0100     		.2byte	0x1
 4188 0317 50       		.byte	0x50
 4189 0318 00000000 		.4byte	0
 4190 031c 00000000 		.4byte	0
 4191              	.LLST25:
 4192 0320 00000000 		.4byte	.LVL78
 4193 0324 08000000 		.4byte	.LVL80
 4194 0328 0100     		.2byte	0x1
 4195 032a 50       		.byte	0x50
 4196 032b 08000000 		.4byte	.LVL80
 4197 032f 2C000000 		.4byte	.LFE61
 4198 0333 0400     		.2byte	0x4
 4199 0335 F3       		.byte	0xf3
 4200 0336 01       		.uleb128 0x1
 4201 0337 50       		.byte	0x50
 4202 0338 9F       		.byte	0x9f
 4203 0339 00000000 		.4byte	0
 4204 033d 00000000 		.4byte	0
 4205              	.LLST26:
 4206 0341 06000000 		.4byte	.LVL79
 4207 0345 1A000000 		.4byte	.LVL83
 4208 0349 0100     		.2byte	0x1
 4209 034b 54       		.byte	0x54
 4210 034c 1C000000 		.4byte	.LVL84
 4211 0350 20000000 		.4byte	.LVL85
 4212 0354 0100     		.2byte	0x1
 4213 0356 54       		.byte	0x54
 4214 0357 00000000 		.4byte	0
 4215 035b 00000000 		.4byte	0
 4216              	.LLST27:
 4217 035f 0E000000 		.4byte	.LVL81
 4218 0363 20000000 		.4byte	.LVL86
 4219 0367 0100     		.2byte	0x1
 4220 0369 55       		.byte	0x55
 4221 036a 20000000 		.4byte	.LVL86
 4222 036e 2C000000 		.4byte	.LFE61
 4223 0372 1E00     		.2byte	0x1e
 4224 0374 F3       		.byte	0xf3
 4225 0375 01       		.uleb128 0x1
 4226 0376 50       		.byte	0x50
 4227 0377 03       		.byte	0x3
 4228 0378 04000000 		.4byte	.LANCHOR2+4
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 126


 4229 037c 22       		.byte	0x22
 4230 037d 94       		.byte	0x94
 4231 037e 01       		.byte	0x1
 4232 037f 08       		.byte	0x8
 4233 0380 FF       		.byte	0xff
 4234 0381 1A       		.byte	0x1a
 4235 0382 F3       		.byte	0xf3
 4236 0383 01       		.uleb128 0x1
 4237 0384 50       		.byte	0x50
 4238 0385 03       		.byte	0x3
 4239 0386 00000000 		.4byte	.LANCHOR2
 4240 038a 22       		.byte	0x22
 4241 038b 94       		.byte	0x94
 4242 038c 01       		.byte	0x1
 4243 038d 08       		.byte	0x8
 4244 038e FF       		.byte	0xff
 4245 038f 1A       		.byte	0x1a
 4246 0390 22       		.byte	0x22
 4247 0391 9F       		.byte	0x9f
 4248 0392 00000000 		.4byte	0
 4249 0396 00000000 		.4byte	0
 4250              	.LLST28:
 4251 039a 00000000 		.4byte	.LVL87
 4252 039e 08000000 		.4byte	.LVL89
 4253 03a2 0100     		.2byte	0x1
 4254 03a4 50       		.byte	0x50
 4255 03a5 08000000 		.4byte	.LVL89
 4256 03a9 2C000000 		.4byte	.LFE62
 4257 03ad 0400     		.2byte	0x4
 4258 03af F3       		.byte	0xf3
 4259 03b0 01       		.uleb128 0x1
 4260 03b1 50       		.byte	0x50
 4261 03b2 9F       		.byte	0x9f
 4262 03b3 00000000 		.4byte	0
 4263 03b7 00000000 		.4byte	0
 4264              	.LLST29:
 4265 03bb 06000000 		.4byte	.LVL88
 4266 03bf 1A000000 		.4byte	.LVL92
 4267 03c3 0100     		.2byte	0x1
 4268 03c5 54       		.byte	0x54
 4269 03c6 1C000000 		.4byte	.LVL93
 4270 03ca 20000000 		.4byte	.LVL94
 4271 03ce 0100     		.2byte	0x1
 4272 03d0 54       		.byte	0x54
 4273 03d1 00000000 		.4byte	0
 4274 03d5 00000000 		.4byte	0
 4275              	.LLST30:
 4276 03d9 0E000000 		.4byte	.LVL90
 4277 03dd 20000000 		.4byte	.LVL95
 4278 03e1 0100     		.2byte	0x1
 4279 03e3 55       		.byte	0x55
 4280 03e4 20000000 		.4byte	.LVL95
 4281 03e8 2C000000 		.4byte	.LFE62
 4282 03ec 1E00     		.2byte	0x1e
 4283 03ee F3       		.byte	0xf3
 4284 03ef 01       		.uleb128 0x1
 4285 03f0 50       		.byte	0x50
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 127


 4286 03f1 03       		.byte	0x3
 4287 03f2 04000000 		.4byte	.LANCHOR2+4
 4288 03f6 22       		.byte	0x22
 4289 03f7 94       		.byte	0x94
 4290 03f8 01       		.byte	0x1
 4291 03f9 08       		.byte	0x8
 4292 03fa FF       		.byte	0xff
 4293 03fb 1A       		.byte	0x1a
 4294 03fc F3       		.byte	0xf3
 4295 03fd 01       		.uleb128 0x1
 4296 03fe 50       		.byte	0x50
 4297 03ff 03       		.byte	0x3
 4298 0400 00000000 		.4byte	.LANCHOR2
 4299 0404 22       		.byte	0x22
 4300 0405 94       		.byte	0x94
 4301 0406 01       		.byte	0x1
 4302 0407 08       		.byte	0x8
 4303 0408 FF       		.byte	0xff
 4304 0409 1A       		.byte	0x1a
 4305 040a 22       		.byte	0x22
 4306 040b 9F       		.byte	0x9f
 4307 040c 00000000 		.4byte	0
 4308 0410 00000000 		.4byte	0
 4309              	.LLST31:
 4310 0414 00000000 		.4byte	.LVL96
 4311 0418 08000000 		.4byte	.LVL97
 4312 041c 0100     		.2byte	0x1
 4313 041e 50       		.byte	0x50
 4314 041f 08000000 		.4byte	.LVL97
 4315 0423 0A000000 		.4byte	.LVL98
 4316 0427 0400     		.2byte	0x4
 4317 0429 F3       		.byte	0xf3
 4318 042a 01       		.uleb128 0x1
 4319 042b 50       		.byte	0x50
 4320 042c 9F       		.byte	0x9f
 4321 042d 0A000000 		.4byte	.LVL98
 4322 0431 1A000000 		.4byte	.LVL100
 4323 0435 0100     		.2byte	0x1
 4324 0437 50       		.byte	0x50
 4325 0438 00000000 		.4byte	0
 4326 043c 00000000 		.4byte	0
 4327              	.LLST32:
 4328 0440 00000000 		.4byte	.LVL96
 4329 0444 0A000000 		.4byte	.LVL98
 4330 0448 0100     		.2byte	0x1
 4331 044a 51       		.byte	0x51
 4332 044b 0A000000 		.4byte	.LVL98
 4333 044f 1C000000 		.4byte	.LFE63
 4334 0453 0100     		.2byte	0x1
 4335 0455 51       		.byte	0x51
 4336 0456 00000000 		.4byte	0
 4337 045a 00000000 		.4byte	0
 4338              	.LLST33:
 4339 045e 00000000 		.4byte	.LVL101
 4340 0462 06000000 		.4byte	.LVL104
 4341 0466 0100     		.2byte	0x1
 4342 0468 50       		.byte	0x50
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 128


 4343 0469 06000000 		.4byte	.LVL104
 4344 046d 0C000000 		.4byte	.LFE64
 4345 0471 0400     		.2byte	0x4
 4346 0473 F3       		.byte	0xf3
 4347 0474 01       		.uleb128 0x1
 4348 0475 50       		.byte	0x50
 4349 0476 9F       		.byte	0x9f
 4350 0477 00000000 		.4byte	0
 4351 047b 00000000 		.4byte	0
 4352              	.LLST34:
 4353 047f 00000000 		.4byte	.LVL101
 4354 0483 04000000 		.4byte	.LVL103
 4355 0487 0100     		.2byte	0x1
 4356 0489 51       		.byte	0x51
 4357 048a 04000000 		.4byte	.LVL103
 4358 048e 0C000000 		.4byte	.LFE64
 4359 0492 0400     		.2byte	0x4
 4360 0494 F3       		.byte	0xf3
 4361 0495 01       		.uleb128 0x1
 4362 0496 51       		.byte	0x51
 4363 0497 9F       		.byte	0x9f
 4364 0498 00000000 		.4byte	0
 4365 049c 00000000 		.4byte	0
 4366              	.LLST35:
 4367 04a0 02000000 		.4byte	.LVL102
 4368 04a4 06000000 		.4byte	.LVL104
 4369 04a8 0100     		.2byte	0x1
 4370 04aa 53       		.byte	0x53
 4371 04ab 06000000 		.4byte	.LVL104
 4372 04af 0A000000 		.4byte	.LVL106
 4373 04b3 0100     		.2byte	0x1
 4374 04b5 50       		.byte	0x50
 4375 04b6 0A000000 		.4byte	.LVL106
 4376 04ba 0C000000 		.4byte	.LFE64
 4377 04be 0800     		.2byte	0x8
 4378 04c0 71       		.byte	0x71
 4379 04c1 00       		.sleb128 0
 4380 04c2 73       		.byte	0x73
 4381 04c3 00       		.sleb128 0
 4382 04c4 22       		.byte	0x22
 4383 04c5 32       		.byte	0x32
 4384 04c6 25       		.byte	0x25
 4385 04c7 9F       		.byte	0x9f
 4386 04c8 00000000 		.4byte	0
 4387 04cc 00000000 		.4byte	0
 4388              	.LLST36:
 4389 04d0 00000000 		.4byte	.LVL107
 4390 04d4 2A000000 		.4byte	.LVL110
 4391 04d8 0100     		.2byte	0x1
 4392 04da 50       		.byte	0x50
 4393 04db 2A000000 		.4byte	.LVL110
 4394 04df DA000000 		.4byte	.LVL127
 4395 04e3 0100     		.2byte	0x1
 4396 04e5 54       		.byte	0x54
 4397 04e6 DA000000 		.4byte	.LVL127
 4398 04ea E0000000 		.4byte	.LVL128
 4399 04ee 0400     		.2byte	0x4
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 129


 4400 04f0 F3       		.byte	0xf3
 4401 04f1 01       		.uleb128 0x1
 4402 04f2 50       		.byte	0x50
 4403 04f3 9F       		.byte	0x9f
 4404 04f4 E0000000 		.4byte	.LVL128
 4405 04f8 E4000000 		.4byte	.LVL130
 4406 04fc 0100     		.2byte	0x1
 4407 04fe 54       		.byte	0x54
 4408 04ff E4000000 		.4byte	.LVL130
 4409 0503 E8000000 		.4byte	.LVL131
 4410 0507 0400     		.2byte	0x4
 4411 0509 F3       		.byte	0xf3
 4412 050a 01       		.uleb128 0x1
 4413 050b 50       		.byte	0x50
 4414 050c 9F       		.byte	0x9f
 4415 050d E8000000 		.4byte	.LVL131
 4416 0511 EC000000 		.4byte	.LVL132
 4417 0515 0100     		.2byte	0x1
 4418 0517 54       		.byte	0x54
 4419 0518 EC000000 		.4byte	.LVL132
 4420 051c 1C010000 		.4byte	.LFE40
 4421 0520 0400     		.2byte	0x4
 4422 0522 F3       		.byte	0xf3
 4423 0523 01       		.uleb128 0x1
 4424 0524 50       		.byte	0x50
 4425 0525 9F       		.byte	0x9f
 4426 0526 00000000 		.4byte	0
 4427 052a 00000000 		.4byte	0
 4428              	.LLST37:
 4429 052e AA000000 		.4byte	.LVL120
 4430 0532 B4000000 		.4byte	.LVL122
 4431 0536 0100     		.2byte	0x1
 4432 0538 53       		.byte	0x53
 4433 0539 B4000000 		.4byte	.LVL122
 4434 053d C4000000 		.4byte	.LVL124
 4435 0541 0100     		.2byte	0x1
 4436 0543 57       		.byte	0x57
 4437 0544 00000000 		.4byte	0
 4438 0548 00000000 		.4byte	0
 4439              	.LLST38:
 4440 054c 52000000 		.4byte	.LVL115
 4441 0550 58000000 		.4byte	.LVL116
 4442 0554 0200     		.2byte	0x2
 4443 0556 31       		.byte	0x31
 4444 0557 9F       		.byte	0x9f
 4445 0558 5C000000 		.4byte	.LVL117
 4446 055c 60000000 		.4byte	.LVL118
 4447 0560 0200     		.2byte	0x2
 4448 0562 30       		.byte	0x30
 4449 0563 9F       		.byte	0x9f
 4450 0564 60000000 		.4byte	.LVL118
 4451 0568 D2000000 		.4byte	.LVL125
 4452 056c 0100     		.2byte	0x1
 4453 056e 58       		.byte	0x58
 4454 056f D2000000 		.4byte	.LVL125
 4455 0573 D8000000 		.4byte	.LVL126
 4456 0577 0100     		.2byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 130


 4457 0579 53       		.byte	0x53
 4458 057a D8000000 		.4byte	.LVL126
 4459 057e E0000000 		.4byte	.LVL128
 4460 0582 0100     		.2byte	0x1
 4461 0584 58       		.byte	0x58
 4462 0585 E0000000 		.4byte	.LVL128
 4463 0589 E2000000 		.4byte	.LVL129
 4464 058d 0100     		.2byte	0x1
 4465 058f 53       		.byte	0x53
 4466 0590 E2000000 		.4byte	.LVL129
 4467 0594 F2000000 		.4byte	.LVL134
 4468 0598 0100     		.2byte	0x1
 4469 059a 58       		.byte	0x58
 4470 059b 00000000 		.4byte	0
 4471 059f 00000000 		.4byte	0
 4472              	.LLST39:
 4473 05a3 52000000 		.4byte	.LVL115
 4474 05a7 58000000 		.4byte	.LVL116
 4475 05ab 0100     		.2byte	0x1
 4476 05ad 55       		.byte	0x55
 4477 05ae 5C000000 		.4byte	.LVL117
 4478 05b2 F2000000 		.4byte	.LVL133
 4479 05b6 0100     		.2byte	0x1
 4480 05b8 55       		.byte	0x55
 4481 05b9 00000000 		.4byte	0
 4482 05bd 00000000 		.4byte	0
 4483              	.LLST40:
 4484 05c1 1A000000 		.4byte	.LVL109
 4485 05c5 30000000 		.4byte	.LVL112
 4486 05c9 0100     		.2byte	0x1
 4487 05cb 57       		.byte	0x57
 4488 05cc 30000000 		.4byte	.LVL112
 4489 05d0 34000000 		.4byte	.LVL113
 4490 05d4 0100     		.2byte	0x1
 4491 05d6 50       		.byte	0x50
 4492 05d7 34000000 		.4byte	.LVL113
 4493 05db B4000000 		.4byte	.LVL122
 4494 05df 0100     		.2byte	0x1
 4495 05e1 57       		.byte	0x57
 4496 05e2 00000000 		.4byte	0
 4497 05e6 00000000 		.4byte	0
 4498              	.LLST41:
 4499 05ea 00000000 		.4byte	.LVL135
 4500 05ee 07000000 		.4byte	.LVL136-1
 4501 05f2 0100     		.2byte	0x1
 4502 05f4 50       		.byte	0x50
 4503 05f5 07000000 		.4byte	.LVL136-1
 4504 05f9 0E000000 		.4byte	.LVL138
 4505 05fd 0100     		.2byte	0x1
 4506 05ff 54       		.byte	0x54
 4507 0600 0E000000 		.4byte	.LVL138
 4508 0604 10000000 		.4byte	.LFE41
 4509 0608 0400     		.2byte	0x4
 4510 060a F3       		.byte	0xf3
 4511 060b 01       		.uleb128 0x1
 4512 060c 50       		.byte	0x50
 4513 060d 9F       		.byte	0x9f
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 131


 4514 060e 00000000 		.4byte	0
 4515 0612 00000000 		.4byte	0
 4516              	.LLST42:
 4517 0616 02000000 		.4byte	.LVL139
 4518 061a 06000000 		.4byte	.LVL140
 4519 061e 0200     		.2byte	0x2
 4520 0620 30       		.byte	0x30
 4521 0621 9F       		.byte	0x9f
 4522 0622 06000000 		.4byte	.LVL140
 4523 0626 1E000000 		.4byte	.LVL145
 4524 062a 0100     		.2byte	0x1
 4525 062c 54       		.byte	0x54
 4526 062d 00000000 		.4byte	0
 4527 0631 00000000 		.4byte	0
 4528              	.LLST43:
 4529 0635 0E000000 		.4byte	.LVL141
 4530 0639 14000000 		.4byte	.LVL142
 4531 063d 0100     		.2byte	0x1
 4532 063f 50       		.byte	0x50
 4533 0640 00000000 		.4byte	0
 4534 0644 00000000 		.4byte	0
 4535              	.LLST44:
 4536 0648 00000000 		.4byte	.LVL146
 4537 064c 0E000000 		.4byte	.LVL150
 4538 0650 0100     		.2byte	0x1
 4539 0652 50       		.byte	0x50
 4540 0653 0E000000 		.4byte	.LVL150
 4541 0657 30000000 		.4byte	.LFE43
 4542 065b 0400     		.2byte	0x4
 4543 065d F3       		.byte	0xf3
 4544 065e 01       		.uleb128 0x1
 4545 065f 50       		.byte	0x50
 4546 0660 9F       		.byte	0x9f
 4547 0661 00000000 		.4byte	0
 4548 0665 00000000 		.4byte	0
 4549              	.LLST45:
 4550 0669 08000000 		.4byte	.LVL147
 4551 066d 0C000000 		.4byte	.LVL149
 4552 0671 0100     		.2byte	0x1
 4553 0673 55       		.byte	0x55
 4554 0674 0C000000 		.4byte	.LVL149
 4555 0678 0E000000 		.4byte	.LVL150
 4556 067c 0800     		.2byte	0x8
 4557 067e 72       		.byte	0x72
 4558 067f 04       		.sleb128 4
 4559 0680 94       		.byte	0x94
 4560 0681 01       		.byte	0x1
 4561 0682 08       		.byte	0x8
 4562 0683 FF       		.byte	0xff
 4563 0684 1A       		.byte	0x1a
 4564 0685 9F       		.byte	0x9f
 4565 0686 0E000000 		.4byte	.LVL150
 4566 068a 30000000 		.4byte	.LFE43
 4567 068e 0F00     		.2byte	0xf
 4568 0690 F3       		.byte	0xf3
 4569 0691 01       		.uleb128 0x1
 4570 0692 50       		.byte	0x50
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 132


 4571 0693 03       		.byte	0x3
 4572 0694 04000000 		.4byte	.LANCHOR2+4
 4573 0698 22       		.byte	0x22
 4574 0699 94       		.byte	0x94
 4575 069a 01       		.byte	0x1
 4576 069b 08       		.byte	0x8
 4577 069c FF       		.byte	0xff
 4578 069d 1A       		.byte	0x1a
 4579 069e 9F       		.byte	0x9f
 4580 069f 00000000 		.4byte	0
 4581 06a3 00000000 		.4byte	0
 4582              	.LLST46:
 4583 06a7 0A000000 		.4byte	.LVL148
 4584 06ab 0E000000 		.4byte	.LVL150
 4585 06af 0100     		.2byte	0x1
 4586 06b1 54       		.byte	0x54
 4587 06b2 0E000000 		.4byte	.LVL150
 4588 06b6 30000000 		.4byte	.LFE43
 4589 06ba 0F00     		.2byte	0xf
 4590 06bc F3       		.byte	0xf3
 4591 06bd 01       		.uleb128 0x1
 4592 06be 50       		.byte	0x50
 4593 06bf 03       		.byte	0x3
 4594 06c0 00000000 		.4byte	.LANCHOR2
 4595 06c4 22       		.byte	0x22
 4596 06c5 94       		.byte	0x94
 4597 06c6 01       		.byte	0x1
 4598 06c7 08       		.byte	0x8
 4599 06c8 FF       		.byte	0xff
 4600 06c9 1A       		.byte	0x1a
 4601 06ca 9F       		.byte	0x9f
 4602 06cb 00000000 		.4byte	0
 4603 06cf 00000000 		.4byte	0
 4604              	.LLST47:
 4605 06d3 0C000000 		.4byte	.LVL149
 4606 06d7 26000000 		.4byte	.LVL156
 4607 06db 0100     		.2byte	0x1
 4608 06dd 55       		.byte	0x55
 4609 06de 26000000 		.4byte	.LVL156
 4610 06e2 30000000 		.4byte	.LFE43
 4611 06e6 1E00     		.2byte	0x1e
 4612 06e8 F3       		.byte	0xf3
 4613 06e9 01       		.uleb128 0x1
 4614 06ea 50       		.byte	0x50
 4615 06eb 03       		.byte	0x3
 4616 06ec 04000000 		.4byte	.LANCHOR2+4
 4617 06f0 22       		.byte	0x22
 4618 06f1 94       		.byte	0x94
 4619 06f2 01       		.byte	0x1
 4620 06f3 08       		.byte	0x8
 4621 06f4 FF       		.byte	0xff
 4622 06f5 1A       		.byte	0x1a
 4623 06f6 F3       		.byte	0xf3
 4624 06f7 01       		.uleb128 0x1
 4625 06f8 50       		.byte	0x50
 4626 06f9 03       		.byte	0x3
 4627 06fa 00000000 		.4byte	.LANCHOR2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 133


 4628 06fe 22       		.byte	0x22
 4629 06ff 94       		.byte	0x94
 4630 0700 01       		.byte	0x1
 4631 0701 08       		.byte	0x8
 4632 0702 FF       		.byte	0xff
 4633 0703 1A       		.byte	0x1a
 4634 0704 22       		.byte	0x22
 4635 0705 9F       		.byte	0x9f
 4636 0706 00000000 		.4byte	0
 4637 070a 00000000 		.4byte	0
 4638              	.LLST48:
 4639 070e 0C000000 		.4byte	.LVL149
 4640 0712 26000000 		.4byte	.LVL155
 4641 0716 0100     		.2byte	0x1
 4642 0718 54       		.byte	0x54
 4643 0719 00000000 		.4byte	0
 4644 071d 00000000 		.4byte	0
 4645              	.LLST49:
 4646 0721 16000000 		.4byte	.LVL151
 4647 0725 1C000000 		.4byte	.LVL152
 4648 0729 0100     		.2byte	0x1
 4649 072b 50       		.byte	0x50
 4650 072c 00000000 		.4byte	0
 4651 0730 00000000 		.4byte	0
 4652              	.LLST50:
 4653 0734 00000000 		.4byte	.LVL157
 4654 0738 04000000 		.4byte	.LVL158
 4655 073c 0100     		.2byte	0x1
 4656 073e 50       		.byte	0x50
 4657 073f 04000000 		.4byte	.LVL158
 4658 0743 0C000000 		.4byte	.LFE65
 4659 0747 0400     		.2byte	0x4
 4660 0749 F3       		.byte	0xf3
 4661 074a 01       		.uleb128 0x1
 4662 074b 50       		.byte	0x50
 4663 074c 9F       		.byte	0x9f
 4664 074d 00000000 		.4byte	0
 4665 0751 00000000 		.4byte	0
 4666              	.LLST51:
 4667 0755 00000000 		.4byte	.LVL159
 4668 0759 04000000 		.4byte	.LVL160
 4669 075d 0100     		.2byte	0x1
 4670 075f 50       		.byte	0x50
 4671 0760 04000000 		.4byte	.LVL160
 4672 0764 0C000000 		.4byte	.LFE66
 4673 0768 0400     		.2byte	0x4
 4674 076a F3       		.byte	0xf3
 4675 076b 01       		.uleb128 0x1
 4676 076c 50       		.byte	0x50
 4677 076d 9F       		.byte	0x9f
 4678 076e 00000000 		.4byte	0
 4679 0772 00000000 		.4byte	0
 4680              	.LLST52:
 4681 0776 00000000 		.4byte	.LVL161
 4682 077a 04000000 		.4byte	.LVL162
 4683 077e 0100     		.2byte	0x1
 4684 0780 50       		.byte	0x50
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 134


 4685 0781 04000000 		.4byte	.LVL162
 4686 0785 0C000000 		.4byte	.LFE67
 4687 0789 0400     		.2byte	0x4
 4688 078b F3       		.byte	0xf3
 4689 078c 01       		.uleb128 0x1
 4690 078d 50       		.byte	0x50
 4691 078e 9F       		.byte	0x9f
 4692 078f 00000000 		.4byte	0
 4693 0793 00000000 		.4byte	0
 4694              		.section	.debug_aranges,"",%progbits
 4695 0000 24010000 		.4byte	0x124
 4696 0004 0200     		.2byte	0x2
 4697 0006 00000000 		.4byte	.Ldebug_info0
 4698 000a 04       		.byte	0x4
 4699 000b 00       		.byte	0
 4700 000c 0000     		.2byte	0
 4701 000e 0000     		.2byte	0
 4702 0010 00000000 		.4byte	.LFB36
 4703 0014 3C000000 		.4byte	.LFE36-.LFB36
 4704 0018 00000000 		.4byte	.LFB37
 4705 001c 18000000 		.4byte	.LFE37-.LFB37
 4706 0020 00000000 		.4byte	.LFB38
 4707 0024 14000000 		.4byte	.LFE38-.LFB38
 4708 0028 00000000 		.4byte	.LFB39
 4709 002c 30000000 		.4byte	.LFE39-.LFB39
 4710 0030 00000000 		.4byte	.LFB44
 4711 0034 0C000000 		.4byte	.LFE44-.LFB44
 4712 0038 00000000 		.4byte	.LFB45
 4713 003c 0C000000 		.4byte	.LFE45-.LFB45
 4714 0040 00000000 		.4byte	.LFB46
 4715 0044 0C000000 		.4byte	.LFE46-.LFB46
 4716 0048 00000000 		.4byte	.LFB47
 4717 004c 0C000000 		.4byte	.LFE47-.LFB47
 4718 0050 00000000 		.4byte	.LFB48
 4719 0054 0C000000 		.4byte	.LFE48-.LFB48
 4720 0058 00000000 		.4byte	.LFB49
 4721 005c 0C000000 		.4byte	.LFE49-.LFB49
 4722 0060 00000000 		.4byte	.LFB50
 4723 0064 0C000000 		.4byte	.LFE50-.LFB50
 4724 0068 00000000 		.4byte	.LFB51
 4725 006c 0C000000 		.4byte	.LFE51-.LFB51
 4726 0070 00000000 		.4byte	.LFB52
 4727 0074 0C000000 		.4byte	.LFE52-.LFB52
 4728 0078 00000000 		.4byte	.LFB53
 4729 007c 0C000000 		.4byte	.LFE53-.LFB53
 4730 0080 00000000 		.4byte	.LFB54
 4731 0084 0C000000 		.4byte	.LFE54-.LFB54
 4732 0088 00000000 		.4byte	.LFB55
 4733 008c 0C000000 		.4byte	.LFE55-.LFB55
 4734 0090 00000000 		.4byte	.LFB56
 4735 0094 0C000000 		.4byte	.LFE56-.LFB56
 4736 0098 00000000 		.4byte	.LFB57
 4737 009c 0C000000 		.4byte	.LFE57-.LFB57
 4738 00a0 00000000 		.4byte	.LFB58
 4739 00a4 A8000000 		.4byte	.LFE58-.LFB58
 4740 00a8 00000000 		.4byte	.LFB59
 4741 00ac 28000000 		.4byte	.LFE59-.LFB59
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 135


 4742 00b0 00000000 		.4byte	.LFB60
 4743 00b4 1E000000 		.4byte	.LFE60-.LFB60
 4744 00b8 00000000 		.4byte	.LFB61
 4745 00bc 2C000000 		.4byte	.LFE61-.LFB61
 4746 00c0 00000000 		.4byte	.LFB62
 4747 00c4 2C000000 		.4byte	.LFE62-.LFB62
 4748 00c8 00000000 		.4byte	.LFB63
 4749 00cc 1C000000 		.4byte	.LFE63-.LFB63
 4750 00d0 00000000 		.4byte	.LFB64
 4751 00d4 0C000000 		.4byte	.LFE64-.LFB64
 4752 00d8 00000000 		.4byte	.LFB40
 4753 00dc 1C010000 		.4byte	.LFE40-.LFB40
 4754 00e0 00000000 		.4byte	.LFB41
 4755 00e4 10000000 		.4byte	.LFE41-.LFB41
 4756 00e8 00000000 		.4byte	.LFB42
 4757 00ec 24000000 		.4byte	.LFE42-.LFB42
 4758 00f0 00000000 		.4byte	.LFB43
 4759 00f4 30000000 		.4byte	.LFE43-.LFB43
 4760 00f8 00000000 		.4byte	.LFB65
 4761 00fc 0C000000 		.4byte	.LFE65-.LFB65
 4762 0100 00000000 		.4byte	.LFB66
 4763 0104 0C000000 		.4byte	.LFE66-.LFB66
 4764 0108 00000000 		.4byte	.LFB67
 4765 010c 0C000000 		.4byte	.LFE67-.LFB67
 4766 0110 00000000 		.4byte	.LFB68
 4767 0114 0C000000 		.4byte	.LFE68-.LFB68
 4768 0118 00000000 		.4byte	.LFB69
 4769 011c 0C000000 		.4byte	.LFE69-.LFB69
 4770 0120 00000000 		.4byte	0
 4771 0124 00000000 		.4byte	0
 4772              		.section	.debug_ranges,"",%progbits
 4773              	.Ldebug_ranges0:
 4774 0000 00000000 		.4byte	.LFB36
 4775 0004 3C000000 		.4byte	.LFE36
 4776 0008 00000000 		.4byte	.LFB37
 4777 000c 18000000 		.4byte	.LFE37
 4778 0010 00000000 		.4byte	.LFB38
 4779 0014 14000000 		.4byte	.LFE38
 4780 0018 00000000 		.4byte	.LFB39
 4781 001c 30000000 		.4byte	.LFE39
 4782 0020 00000000 		.4byte	.LFB44
 4783 0024 0C000000 		.4byte	.LFE44
 4784 0028 00000000 		.4byte	.LFB45
 4785 002c 0C000000 		.4byte	.LFE45
 4786 0030 00000000 		.4byte	.LFB46
 4787 0034 0C000000 		.4byte	.LFE46
 4788 0038 00000000 		.4byte	.LFB47
 4789 003c 0C000000 		.4byte	.LFE47
 4790 0040 00000000 		.4byte	.LFB48
 4791 0044 0C000000 		.4byte	.LFE48
 4792 0048 00000000 		.4byte	.LFB49
 4793 004c 0C000000 		.4byte	.LFE49
 4794 0050 00000000 		.4byte	.LFB50
 4795 0054 0C000000 		.4byte	.LFE50
 4796 0058 00000000 		.4byte	.LFB51
 4797 005c 0C000000 		.4byte	.LFE51
 4798 0060 00000000 		.4byte	.LFB52
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 136


 4799 0064 0C000000 		.4byte	.LFE52
 4800 0068 00000000 		.4byte	.LFB53
 4801 006c 0C000000 		.4byte	.LFE53
 4802 0070 00000000 		.4byte	.LFB54
 4803 0074 0C000000 		.4byte	.LFE54
 4804 0078 00000000 		.4byte	.LFB55
 4805 007c 0C000000 		.4byte	.LFE55
 4806 0080 00000000 		.4byte	.LFB56
 4807 0084 0C000000 		.4byte	.LFE56
 4808 0088 00000000 		.4byte	.LFB57
 4809 008c 0C000000 		.4byte	.LFE57
 4810 0090 00000000 		.4byte	.LFB58
 4811 0094 A8000000 		.4byte	.LFE58
 4812 0098 00000000 		.4byte	.LFB59
 4813 009c 28000000 		.4byte	.LFE59
 4814 00a0 00000000 		.4byte	.LFB60
 4815 00a4 1E000000 		.4byte	.LFE60
 4816 00a8 00000000 		.4byte	.LFB61
 4817 00ac 2C000000 		.4byte	.LFE61
 4818 00b0 00000000 		.4byte	.LFB62
 4819 00b4 2C000000 		.4byte	.LFE62
 4820 00b8 00000000 		.4byte	.LFB63
 4821 00bc 1C000000 		.4byte	.LFE63
 4822 00c0 00000000 		.4byte	.LFB64
 4823 00c4 0C000000 		.4byte	.LFE64
 4824 00c8 00000000 		.4byte	.LFB40
 4825 00cc 1C010000 		.4byte	.LFE40
 4826 00d0 00000000 		.4byte	.LFB41
 4827 00d4 10000000 		.4byte	.LFE41
 4828 00d8 00000000 		.4byte	.LFB42
 4829 00dc 24000000 		.4byte	.LFE42
 4830 00e0 00000000 		.4byte	.LFB43
 4831 00e4 30000000 		.4byte	.LFE43
 4832 00e8 00000000 		.4byte	.LFB65
 4833 00ec 0C000000 		.4byte	.LFE65
 4834 00f0 00000000 		.4byte	.LFB66
 4835 00f4 0C000000 		.4byte	.LFE66
 4836 00f8 00000000 		.4byte	.LFB67
 4837 00fc 0C000000 		.4byte	.LFE67
 4838 0100 00000000 		.4byte	.LFB68
 4839 0104 0C000000 		.4byte	.LFE68
 4840 0108 00000000 		.4byte	.LFB69
 4841 010c 0C000000 		.4byte	.LFE69
 4842 0110 00000000 		.4byte	0
 4843 0114 00000000 		.4byte	0
 4844              		.section	.debug_line,"",%progbits
 4845              	.Ldebug_line0:
 4846 0000 CF030000 		.section	.debug_str,"MS",%progbits,1
 4846      02006C00 
 4846      00000201 
 4846      FB0E0D00 
 4846      01010101 
 4847              	.LASF106:
 4848 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4848      656E7365 
 4848      5F73656E 
 4848      736F7242 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 137


 4848      6173656C 
 4849              	.LASF83:
 4850 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4850      656E7365 
 4850      5F494952 
 4850      3446696C 
 4850      74657200 
 4851              	.LASF101:
 4852 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 4852      656E7365 
 4852      5F646562 
 4852      6F756E63 
 4852      65436F75 
 4853              	.LASF30:
 4854 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 4854      53706565 
 4854      6454626C 
 4854      00
 4855              	.LASF109:
 4856 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4856      656E7365 
 4856      5F6C6F77 
 4856      42617365 
 4856      6C696E65 
 4857              	.LASF84:
 4858 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4858      656E7365 
 4858      5F557064 
 4858      61746542 
 4858      6173656C 
 4859              	.LASF33:
 4860 0095 6E756D62 		.ascii	"numberOfSensors\000"
 4860      65724F66 
 4860      53656E73 
 4860      6F727300 
 4861              	.LASF37:
 4862 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 4862      65744269 
 4862      7456616C 
 4862      756500
 4863              	.LASF81:
 4864 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 4864      656E7365 
 4864      5F446973 
 4864      61626C65 
 4864      57696467 
 4865              	.LASF91:
 4866 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4866      656E7365 
 4866      5F557064 
 4866      61746545 
 4866      6E61626C 
 4867              	.LASF119:
 4868 00eb 43617053 		.ascii	"CapSense_config\000"
 4868      656E7365 
 4868      5F636F6E 
 4868      66696700 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 138


 4869              	.LASF53:
 4870 00fb 69735365 		.ascii	"isSensorEnabled\000"
 4870      6E736F72 
 4870      456E6162 
 4870      6C656400 
 4871              	.LASF77:
 4872 010b 6E756D4F 		.ascii	"numOfSensors\000"
 4872      6653656E 
 4872      736F7273 
 4872      00
 4873              	.LASF8:
 4874 0118 756E7369 		.ascii	"unsigned int\000"
 4874      676E6564 
 4874      20696E74 
 4874      00
 4875              	.LASF42:
 4876 0125 746F7461 		.ascii	"totalSensorsNum\000"
 4876      6C53656E 
 4876      736F7273 
 4876      4E756D00 
 4877              	.LASF27:
 4878 0135 73616D70 		.ascii	"sampleMaxTbl\000"
 4878      6C654D61 
 4878      7854626C 
 4878      00
 4879              	.LASF52:
 4880 0142 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4880      656E7365 
 4880      5F496E69 
 4880      7469616C 
 4880      697A6545 
 4881              	.LASF25:
 4882 0166 7369676E 		.ascii	"signRegisterTbl\000"
 4882      52656769 
 4882      73746572 
 4882      54626C00 
 4883              	.LASF48:
 4884 0176 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4884      656E7365 
 4884      5F496E69 
 4884      7469616C 
 4884      697A6553 
 4885              	.LASF46:
 4886 0198 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_40\000"
 4886      656E7365 
 4886      5F434F4E 
 4886      4649475F 
 4886      54595045 
 4887              	.LASF127:
 4888 01b6 43617053 		.ascii	"CapSense_IsBusy\000"
 4888      656E7365 
 4888      5F497342 
 4888      75737900 
 4889              	.LASF54:
 4890 01c6 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4890      656E7365 
 4890      5F536574 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 139


 4890      42617365 
 4890      6C696E65 
 4891              	.LASF32:
 4892 01df 72617744 		.ascii	"rawDataIndex\000"
 4892      61746149 
 4892      6E646578 
 4892      00
 4893              	.LASF41:
 4894 01ec 746F7461 		.ascii	"totalWidgetsNum\000"
 4894      6C576964 
 4894      67657473 
 4894      4E756D00 
 4895              	.LASF58:
 4896 01fc 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4896      656E7365 
 4896      5F536574 
 4896      44696666 
 4896      436F756E 
 4897              	.LASF107:
 4898 0216 43617053 		.ascii	"CapSense_sensorSignal\000"
 4898      656E7365 
 4898      5F73656E 
 4898      736F7253 
 4898      69676E61 
 4899              	.LASF116:
 4900 022c 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4900      656E7365 
 4900      5F726177 
 4900      44617461 
 4900      496E6465 
 4901              	.LASF65:
 4902 0242 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4902      656E7365 
 4902      5F536574 
 4902      4E6F6973 
 4902      65546872 
 4903              	.LASF92:
 4904 025d 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4904      656E7365 
 4904      5F557064 
 4904      61746557 
 4904      69646765 
 4905              	.LASF114:
 4906 027b 43617053 		.ascii	"CapSense_hysteresis\000"
 4906      656E7365 
 4906      5F687973 
 4906      74657265 
 4906      73697300 
 4907              	.LASF12:
 4908 028f 666C6F61 		.ascii	"float\000"
 4908      7400
 4909              	.LASF22:
 4910 0295 7265736F 		.ascii	"resolutionsTbl\000"
 4910      6C757469 
 4910      6F6E7354 
 4910      626C00
 4911              	.LASF61:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 140


 4912 02a4 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4912      656E7365 
 4912      5F476574 
 4912      4E6F6973 
 4912      65546872 
 4913              	.LASF24:
 4914 02bf 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4914      696E6744 
 4914      69666665 
 4914      72656E63 
 4914      6554626C 
 4915              	.LASF7:
 4916 02d4 6C6F6E67 		.ascii	"long long unsigned int\000"
 4916      206C6F6E 
 4916      6720756E 
 4916      7369676E 
 4916      65642069 
 4917              	.LASF103:
 4918 02eb 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4918      656E7365 
 4918      5F73656E 
 4918      736F7245 
 4918      6E61626C 
 4919              	.LASF123:
 4920 0305 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_40\000"
 4920      7572654E 
 4920      6F697365 
 4920      456E7665 
 4920      6C6F7065 
 4921              	.LASF51:
 4922 0323 77696467 		.ascii	"widget\000"
 4922      657400
 4923              	.LASF111:
 4924 032a 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4924      656E7365 
 4924      5F66696E 
 4924      67657254 
 4924      68726573 
 4925              	.LASF104:
 4926 0343 43617053 		.ascii	"CapSense_widgetNumber\000"
 4926      656E7365 
 4926      5F776964 
 4926      6765744E 
 4926      756D6265 
 4927              	.LASF64:
 4928 0359 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4928      656E7365 
 4928      5F536574 
 4928      46696E67 
 4928      65725468 
 4929              	.LASF100:
 4930 0375 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4930      656E7365 
 4930      5F446973 
 4930      61626C65 
 4930      52617744 
 4931              	.LASF59:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 141


 4932 0394 76616C75 		.ascii	"value\000"
 4932      6500
 4933              	.LASF62:
 4934 039a 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4934      656E7365 
 4934      5F476574 
 4934      46696E67 
 4934      65724879 
 4935              	.LASF57:
 4936 03b7 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4936      656E7365 
 4936      5F476574 
 4936      44696666 
 4936      436F756E 
 4937              	.LASF86:
 4938 03d1 7369676E 		.ascii	"sign\000"
 4938      00
 4939              	.LASF23:
 4940 03d6 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4940      65456E76 
 4940      656C6F70 
 4940      6554626C 
 4940      00
 4941              	.LASF85:
 4942 03e7 63616C63 		.ascii	"calc\000"
 4942      00
 4943              	.LASF36:
 4944 03ec 70747252 		.ascii	"ptrReadSensorRaw\000"
 4944      65616453 
 4944      656E736F 
 4944      72526177 
 4944      00
 4945              	.LASF74:
 4946 03fd 68797374 		.ascii	"hysteresis\000"
 4946      65726573 
 4946      697300
 4947              	.LASF121:
 4948 0408 43617053 		.ascii	"CapSense_ScanSensor\000"
 4948      656E7365 
 4948      5F536361 
 4948      6E53656E 
 4948      736F7200 
 4949              	.LASF88:
 4950 041c 66696C74 		.ascii	"filteredRawData\000"
 4950      65726564 
 4950      52617744 
 4950      61746100 
 4951              	.LASF93:
 4952 042c 73656E73 		.ascii	"sensorsPerWidget\000"
 4952      6F727350 
 4952      65725769 
 4952      64676574 
 4952      00
 4953              	.LASF79:
 4954 043d 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4954      656E7365 
 4954      5F436865 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 142


 4954      636B4973 
 4954      416E7957 
 4955              	.LASF117:
 4956 045d 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4956      656E7365 
 4956      5F6E756D 
 4956      6265724F 
 4956      6653656E 
 4957              	.LASF113:
 4958 0476 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4958      656E7365 
 4958      5F6E6567 
 4958      61746976 
 4958      654E6F69 
 4959              	.LASF40:
 4960 0496 746F7461 		.ascii	"totalScanslotsNum\000"
 4960      6C536361 
 4960      6E736C6F 
 4960      74734E75 
 4960      6D00
 4961              	.LASF49:
 4962 04a8 73656E73 		.ascii	"sensor\000"
 4962      6F7200
 4963              	.LASF43:
 4964 04af 73656E73 		.ascii	"sensetivitySeed\000"
 4964      65746976 
 4964      69747953 
 4964      65656400 
 4965              	.LASF80:
 4966 04bf 43617053 		.ascii	"CapSense_EnableWidget\000"
 4966      656E7365 
 4966      5F456E61 
 4966      626C6557 
 4966      69646765 
 4967              	.LASF14:
 4968 04d5 63686172 		.ascii	"char\000"
 4968      00
 4969              	.LASF63:
 4970 04da 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4970      656E7365 
 4970      5F476574 
 4970      4E656761 
 4970      74697665 
 4971              	.LASF31:
 4972 04fd 70726573 		.ascii	"prescalerTable\000"
 4972      63616C65 
 4972      72546162 
 4972      6C6500
 4973              	.LASF10:
 4974 050c 75696E74 		.ascii	"uint16\000"
 4974      313600
 4975              	.LASF55:
 4976 0513 64617461 		.ascii	"data\000"
 4976      00
 4977              	.LASF16:
 4978 0518 69646163 		.ascii	"idac1LevelsTbl\000"
 4978      314C6576 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 143


 4978      656C7354 
 4978      626C00
 4979              	.LASF76:
 4980 0527 72617749 		.ascii	"rawIndex\000"
 4980      6E646578 
 4980      00
 4981              	.LASF130:
 4982 0530 43617053 		.ascii	"CapSense_UpdateThresholds\000"
 4982      656E7365 
 4982      5F557064 
 4982      61746554 
 4982      68726573 
 4983              	.LASF128:
 4984 054a 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4984      656E7365 
 4984      5F536361 
 4984      6E456E61 
 4984      626C6564 
 4985              	.LASF125:
 4986 0566 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4986      6E657261 
 4986      7465645F 
 4986      536F7572 
 4986      63655C50 
 4987              	.LASF6:
 4988 058f 6C6F6E67 		.ascii	"long long int\000"
 4988      206C6F6E 
 4988      6720696E 
 4988      7400
 4989              	.LASF96:
 4990 059d 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4990      656E7365 
 4990      5F476574 
 4990      57696467 
 4990      65744E75 
 4991              	.LASF71:
 4992 05b6 6465626F 		.ascii	"debounce\000"
 4992      756E6365 
 4992      00
 4993              	.LASF35:
 4994 05bf 70747250 		.ascii	"ptrPreScan\000"
 4994      72655363 
 4994      616E00
 4995              	.LASF70:
 4996 05ca 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4996      656E7365 
 4996      5F436865 
 4996      636B4973 
 4996      53656E73 
 4997              	.LASF34:
 4998 05e7 70747247 		.ascii	"ptrGetRaw\000"
 4998      65745261 
 4998      7700
 4999              	.LASF90:
 5000 05f1 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5000      656E7365 
 5000      5F557064 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 144


 5000      61746553 
 5000      656E736F 
 5001              	.LASF47:
 5002 060f 43617053 		.ascii	"CapSense_BaseInit\000"
 5002      656E7365 
 5002      5F426173 
 5002      65496E69 
 5002      7400
 5003              	.LASF26:
 5004 0621 73616D70 		.ascii	"sampleMinTbl\000"
 5004      6C654D69 
 5004      6E54626C 
 5004      00
 5005              	.LASF102:
 5006 062e 43617053 		.ascii	"CapSense_sensorRaw\000"
 5006      656E7365 
 5006      5F73656E 
 5006      736F7252 
 5006      617700
 5007              	.LASF97:
 5008 0641 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5008      656E7365 
 5008      5F476574 
 5008      4C6F7742 
 5008      6173656C 
 5009              	.LASF67:
 5010 065e 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5010      656E7365 
 5010      5F536574 
 5010      4E656761 
 5010      74697665 
 5011              	.LASF11:
 5012 0681 75696E74 		.ascii	"uint32\000"
 5012      333200
 5013              	.LASF66:
 5014 0688 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5014      656E7365 
 5014      5F536574 
 5014      46696E67 
 5014      65724879 
 5015              	.LASF60:
 5016 06a5 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5016      656E7365 
 5016      5F476574 
 5016      46696E67 
 5016      65725468 
 5017              	.LASF95:
 5018 06c1 6C617374 		.ascii	"lastSensor\000"
 5018      53656E73 
 5018      6F7200
 5019              	.LASF44:
 5020 06cc 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5020      6B467265 
 5020      715F4D48 
 5020      7A00
 5021              	.LASF21:
 5022 06da 77696467 		.ascii	"widgetNubmersTbl\000"
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 145


 5022      65744E75 
 5022      626D6572 
 5022      7354626C 
 5022      00
 5023              	.LASF17:
 5024 06eb 69646163 		.ascii	"idac2LevelsTbl\000"
 5024      324C6576 
 5024      656C7354 
 5024      626C00
 5025              	.LASF2:
 5026 06fa 73686F72 		.ascii	"short int\000"
 5026      7420696E 
 5026      7400
 5027              	.LASF4:
 5028 0704 6C6F6E67 		.ascii	"long int\000"
 5028      20696E74 
 5028      00
 5029              	.LASF94:
 5030 070d 66697273 		.ascii	"firstSensor\000"
 5030      7453656E 
 5030      736F7200 
 5031              	.LASF126:
 5032 0719 433A5C55 		.ascii	"C:\\Users\\mlgjmoor\\Documents\\PSoC Creator\\Nodus"
 5032      73657273 
 5032      5C6D6C67 
 5032      6A6D6F6F 
 5032      725C446F 
 5033 0747 435C6E6F 		.ascii	"C\\nodusC.cydsn\000"
 5033      64757343 
 5033      2E637964 
 5033      736E00
 5034              	.LASF115:
 5035 0756 43617053 		.ascii	"CapSense_debounce\000"
 5035      656E7365 
 5035      5F646562 
 5035      6F756E63 
 5035      6500
 5036              	.LASF124:
 5037 0768 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5037      4320342E 
 5037      392E3320 
 5037      32303135 
 5037      30333033 
 5038 079b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5038      20726576 
 5038      6973696F 
 5038      6E203232 
 5038      31323230 
 5039 07ce 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5039      66756E63 
 5039      74696F6E 
 5039      2D736563 
 5039      74696F6E 
 5040              	.LASF99:
 5041 07f6 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5041      656E7365 
 5041      5F456E61 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 146


 5041      626C6552 
 5041      61774461 
 5042              	.LASF110:
 5043 0814 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5043      656E7365 
 5043      5F6C6F77 
 5043      42617365 
 5043      6C696E65 
 5044              	.LASF29:
 5045 082e 6B56616C 		.ascii	"kValueTbl\000"
 5045      75655462 
 5045      6C00
 5046              	.LASF105:
 5047 0838 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5047      656E7365 
 5047      5F73656E 
 5047      736F7242 
 5047      6173656C 
 5048              	.LASF15:
 5049 0850 73697A65 		.ascii	"sizetype\000"
 5049      74797065 
 5049      00
 5050              	.LASF5:
 5051 0859 6C6F6E67 		.ascii	"long unsigned int\000"
 5051      20756E73 
 5051      69676E65 
 5051      6420696E 
 5051      7400
 5052              	.LASF45:
 5053 086b 706F696E 		.ascii	"pointers\000"
 5053      74657273 
 5053      00
 5054              	.LASF89:
 5055 0874 6E6F6973 		.ascii	"noiseThreshold\000"
 5055      65546872 
 5055      6573686F 
 5055      6C6400
 5056              	.LASF28:
 5057 0883 70726576 		.ascii	"previousSampleTbl\000"
 5057      696F7573 
 5057      53616D70 
 5057      6C655462 
 5057      6C00
 5058              	.LASF68:
 5059 0895 43617053 		.ascii	"CapSense_SetDebounce\000"
 5059      656E7365 
 5059      5F536574 
 5059      4465626F 
 5059      756E6365 
 5060              	.LASF73:
 5061 08aa 66696E67 		.ascii	"fingerThreshold\000"
 5061      65725468 
 5061      72657368 
 5061      6F6C6400 
 5062              	.LASF19:
 5063 08ba 63686172 		.ascii	"chargeDivTbl\000"
 5063      67654469 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 147


 5063      7654626C 
 5063      00
 5064              	.LASF1:
 5065 08c7 756E7369 		.ascii	"unsigned char\000"
 5065      676E6564 
 5065      20636861 
 5065      7200
 5066              	.LASF112:
 5067 08d5 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5067      656E7365 
 5067      5F6E6F69 
 5067      73655468 
 5067      72657368 
 5068              	.LASF72:
 5069 08ed 6465626F 		.ascii	"debounceIndex\000"
 5069      756E6365 
 5069      496E6465 
 5069      7800
 5070              	.LASF50:
 5071 08fb 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5071      656E7365 
 5071      5F496E69 
 5071      7469616C 
 5071      697A6541 
 5072              	.LASF56:
 5073 091b 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5073      656E7365 
 5073      5F476574 
 5073      42617365 
 5073      6C696E65 
 5074              	.LASF69:
 5075 0934 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5075      656E7365 
 5075      5F536574 
 5075      4C6F7742 
 5075      6173656C 
 5076              	.LASF18:
 5077 0951 73656E73 		.ascii	"sensetivityTbl\000"
 5077      65746976 
 5077      69747954 
 5077      626C00
 5078              	.LASF122:
 5079 0960 43617053 		.ascii	"CapSense_SetBitValue\000"
 5079      656E7365 
 5079      5F536574 
 5079      42697456 
 5079      616C7565 
 5080              	.LASF129:
 5081 0975 43617053 		.ascii	"CapSense_GetBitValue\000"
 5081      656E7365 
 5081      5F476574 
 5081      42697456 
 5081      616C7565 
 5082              	.LASF78:
 5083 098a 73746174 		.ascii	"state\000"
 5083      6500
 5084              	.LASF120:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 148


 5085 0990 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5085      656E7365 
 5085      5F656E61 
 5085      626C6552 
 5085      61774669 
 5086              	.LASF20:
 5087 09aa 6D6F6444 		.ascii	"modDivTbl\000"
 5087      69765462 
 5087      6C00
 5088              	.LASF0:
 5089 09b4 7369676E 		.ascii	"signed char\000"
 5089      65642063 
 5089      68617200 
 5090              	.LASF3:
 5091 09c0 73686F72 		.ascii	"short unsigned int\000"
 5091      7420756E 
 5091      7369676E 
 5091      65642069 
 5091      6E7400
 5092              	.LASF38:
 5093 09d3 70747253 		.ascii	"ptrSetBitValue\000"
 5093      65744269 
 5093      7456616C 
 5093      756500
 5094              	.LASF82:
 5095 09e2 43617053 		.ascii	"CapSense_MedianFilter\000"
 5095      656E7365 
 5095      5F4D6564 
 5095      69616E46 
 5095      696C7465 
 5096              	.LASF87:
 5097 09f8 74656D70 		.ascii	"tempRaw\000"
 5097      52617700 
 5098              	.LASF98:
 5099 0a00 43617053 		.ascii	"CapSense_GetDebounce\000"
 5099      656E7365 
 5099      5F476574 
 5099      4465626F 
 5099      756E6365 
 5100              	.LASF75:
 5101 0a15 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5101      656E7365 
 5101      5F436865 
 5101      636B4973 
 5101      57696467 
 5102              	.LASF9:
 5103 0a32 75696E74 		.ascii	"uint8\000"
 5103      3800
 5104              	.LASF13:
 5105 0a38 646F7562 		.ascii	"double\000"
 5105      6C6500
 5106              	.LASF39:
 5107 0a3f 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_40\000"
 5107      656E7365 
 5107      5F434F4E 
 5107      4649475F 
 5107      54595045 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\cccG5TSt.s 			page 149


 5108              	.LASF118:
 5109 0a66 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5109      656E7365 
 5109      5F726177 
 5109      46696C74 
 5109      65724461 
 5110              	.LASF108:
 5111 0a7e 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5111      656E7365 
 5111      5F73656E 
 5111      736F724F 
 5111      6E4D6173 
 5112              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
