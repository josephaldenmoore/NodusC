ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:.\Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:.\Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:.\Generated_Source\PSoC4/CyLib.c **** *
  11:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:.\Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 2


  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:.\Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** 
  42:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:.\Generated_Source\PSoC4/CyLib.c **** *
  46:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:.\Generated_Source\PSoC4/CyLib.c **** *
  49:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** 
  56:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  57:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:.\Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:.\Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:.\Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:.\Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  80:.\Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:.\Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:.\Generated_Source\PSoC4/CyLib.c **** 
  84:.\Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  88:.\Generated_Source\PSoC4/CyLib.c **** 
  89:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 3


  90:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  91:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:.\Generated_Source\PSoC4/CyLib.c **** *
  94:.\Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:.\Generated_Source\PSoC4/CyLib.c **** *
  96:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:.\Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:.\Generated_Source\PSoC4/CyLib.c **** *
 100:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:.\Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:.\Generated_Source\PSoC4/CyLib.c **** *
 103:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:.\Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 105 0
  27              		.cfi_startproc
 106:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 106 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 107:.\Generated_Source\PSoC4/CyLib.c **** 
 108:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:.\Generated_Source\PSoC4/CyLib.c **** 
 114:.\Generated_Source\PSoC4/CyLib.c **** 
 115:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:.\Generated_Source\PSoC4/CyLib.c **** 
 121:.\Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 121 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 08010B40 		.word	1074462984
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoStop,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoStop
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoStop, %function
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 4


  51              	CySysClkImoStop:
  52              	.LFB3:
 122:.\Generated_Source\PSoC4/CyLib.c **** 
 123:.\Generated_Source\PSoC4/CyLib.c **** 
 124:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:.\Generated_Source\PSoC4/CyLib.c **** *
 128:.\Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:.\Generated_Source\PSoC4/CyLib.c **** *
 130:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 131:.\Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:.\Generated_Source\PSoC4/CyLib.c **** *
 133:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:.\Generated_Source\PSoC4/CyLib.c **** *
 135:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 136:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:.\Generated_Source\PSoC4/CyLib.c **** {
  53              		.loc 1 137 0
  54              		.cfi_startproc
 138:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 140:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:.\Generated_Source\PSoC4/CyLib.c **** 
 142:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:.\Generated_Source\PSoC4/CyLib.c **** 
 146:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  55              		.loc 1 146 0
  56 0000 024A     		ldr	r2, .L5
  57 0002 1368     		ldr	r3, [r2]
  58 0004 5B00     		lsl	r3, r3, #1
  59 0006 5B08     		lsr	r3, r3, #1
  60 0008 1360     		str	r3, [r2]
 147:.\Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 147 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 08010B40 		.word	1074462984
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	CySysClkImoStop, .-CySysClkImoStop
  71              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  72              		.align	2
  73              		.global	CySysClkWriteHfclkDirect
  74              		.code	16
  75              		.thumb_func
  76              		.type	CySysClkWriteHfclkDirect, %function
  77              	CySysClkWriteHfclkDirect:
  78              	.LFB4:
 148:.\Generated_Source\PSoC4/CyLib.c **** 
 149:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 5


 151:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:.\Generated_Source\PSoC4/CyLib.c ****     *
 155:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:.\Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:.\Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:.\Generated_Source\PSoC4/CyLib.c ****     *
 159:.\Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:.\Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:.\Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:.\Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:.\Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:.\Generated_Source\PSoC4/CyLib.c ****     *
 165:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:.\Generated_Source\PSoC4/CyLib.c ****     *
 168:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:.\Generated_Source\PSoC4/CyLib.c ****     *
 171:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:.\Generated_Source\PSoC4/CyLib.c ****     {
 174:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:.\Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 177:.\Generated_Source\PSoC4/CyLib.c **** 
 178:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:.\Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 182:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 185:.\Generated_Source\PSoC4/CyLib.c ****         {
 186:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 187:.\Generated_Source\PSoC4/CyLib.c **** 
 188:.\Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:.\Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:.\Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:.\Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:.\Generated_Source\PSoC4/CyLib.c ****                 {
 200:.\Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:.\Generated_Source\PSoC4/CyLib.c ****                     {
 202:.\Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:.\Generated_Source\PSoC4/CyLib.c ****                         break;
 204:.\Generated_Source\PSoC4/CyLib.c ****                     }
 205:.\Generated_Source\PSoC4/CyLib.c ****                 }
 206:.\Generated_Source\PSoC4/CyLib.c ****             #else
 207:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 6


 208:.\Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 209:.\Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 210:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 211:.\Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 212:.\Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 213:.\Generated_Source\PSoC4/CyLib.c ****                 #else
 214:.\Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 215:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 216:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 217:.\Generated_Source\PSoC4/CyLib.c **** 
 218:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 219:.\Generated_Source\PSoC4/CyLib.c **** 
 220:.\Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 221:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 222:.\Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:.\Generated_Source\PSoC4/CyLib.c ****                 {
 224:.\Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 225:.\Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:.\Generated_Source\PSoC4/CyLib.c ****                 }
 227:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 228:.\Generated_Source\PSoC4/CyLib.c **** 
 229:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 230:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 231:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 232:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 233:.\Generated_Source\PSoC4/CyLib.c **** 
 234:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 235:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 236:.\Generated_Source\PSoC4/CyLib.c **** 
 237:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 238:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 239:.\Generated_Source\PSoC4/CyLib.c **** 
 240:.\Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 241:.\Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 242:.\Generated_Source\PSoC4/CyLib.c ****             {
 243:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 244:.\Generated_Source\PSoC4/CyLib.c ****             }
 245:.\Generated_Source\PSoC4/CyLib.c ****             else
 246:.\Generated_Source\PSoC4/CyLib.c ****             {
 247:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 248:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 249:.\Generated_Source\PSoC4/CyLib.c **** 
 250:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 251:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 252:.\Generated_Source\PSoC4/CyLib.c **** 
 253:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 254:.\Generated_Source\PSoC4/CyLib.c ****             }
 255:.\Generated_Source\PSoC4/CyLib.c **** 
 256:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 257:.\Generated_Source\PSoC4/CyLib.c **** 
 258:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 259:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 260:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 261:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 262:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 263:.\Generated_Source\PSoC4/CyLib.c **** 
 264:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 7


 265:.\Generated_Source\PSoC4/CyLib.c ****         }
 266:.\Generated_Source\PSoC4/CyLib.c ****     }
 267:.\Generated_Source\PSoC4/CyLib.c **** 
 268:.\Generated_Source\PSoC4/CyLib.c **** 
 269:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 270:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 271:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 272:.\Generated_Source\PSoC4/CyLib.c ****     *
 273:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 274:.\Generated_Source\PSoC4/CyLib.c ****     *
 275:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 276:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 277:.\Generated_Source\PSoC4/CyLib.c ****     *
 278:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 279:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 280:.\Generated_Source\PSoC4/CyLib.c ****     *
 281:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 283:.\Generated_Source\PSoC4/CyLib.c ****     {
 284:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 285:.\Generated_Source\PSoC4/CyLib.c ****     }
 286:.\Generated_Source\PSoC4/CyLib.c **** 
 287:.\Generated_Source\PSoC4/CyLib.c **** 
 288:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 289:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 290:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 291:.\Generated_Source\PSoC4/CyLib.c ****     *
 292:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 293:.\Generated_Source\PSoC4/CyLib.c ****     *
 294:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 295:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 296:.\Generated_Source\PSoC4/CyLib.c ****     *
 297:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 298:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 299:.\Generated_Source\PSoC4/CyLib.c ****     *
 300:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 301:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 302:.\Generated_Source\PSoC4/CyLib.c ****     {
 303:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 304:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 305:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 306:.\Generated_Source\PSoC4/CyLib.c ****     }
 307:.\Generated_Source\PSoC4/CyLib.c **** 
 308:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 309:.\Generated_Source\PSoC4/CyLib.c **** 
 310:.\Generated_Source\PSoC4/CyLib.c **** 
 311:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 312:.\Generated_Source\PSoC4/CyLib.c **** 
 313:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 314:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 315:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 316:.\Generated_Source\PSoC4/CyLib.c ****     *
 317:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 318:.\Generated_Source\PSoC4/CyLib.c ****     *
 319:.\Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 320:.\Generated_Source\PSoC4/CyLib.c ****     *
 321:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 8


 322:.\Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 323:.\Generated_Source\PSoC4/CyLib.c ****     *
 324:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 325:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 326:.\Generated_Source\PSoC4/CyLib.c ****     *
 327:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 328:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 329:.\Generated_Source\PSoC4/CyLib.c ****     {
 330:.\Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 331:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 332:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 333:.\Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 334:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 337:.\Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 338:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 339:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 340:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 341:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 342:.\Generated_Source\PSoC4/CyLib.c **** 
 343:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 344:.\Generated_Source\PSoC4/CyLib.c ****     }
 345:.\Generated_Source\PSoC4/CyLib.c **** 
 346:.\Generated_Source\PSoC4/CyLib.c **** 
 347:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 348:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 349:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 350:.\Generated_Source\PSoC4/CyLib.c ****     *
 351:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 352:.\Generated_Source\PSoC4/CyLib.c ****     *
 353:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 354:.\Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 355:.\Generated_Source\PSoC4/CyLib.c ****     *
 356:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 357:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 358:.\Generated_Source\PSoC4/CyLib.c ****     *
 359:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 361:.\Generated_Source\PSoC4/CyLib.c ****     {
 362:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 363:.\Generated_Source\PSoC4/CyLib.c **** 
 364:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 365:.\Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 366:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 367:.\Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 368:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 369:.\Generated_Source\PSoC4/CyLib.c ****     }
 370:.\Generated_Source\PSoC4/CyLib.c **** 
 371:.\Generated_Source\PSoC4/CyLib.c **** 
 372:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 374:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 375:.\Generated_Source\PSoC4/CyLib.c ****     *
 376:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 377:.\Generated_Source\PSoC4/CyLib.c ****     *
 378:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 9


 379:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 380:.\Generated_Source\PSoC4/CyLib.c ****     *
 381:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 382:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 383:.\Generated_Source\PSoC4/CyLib.c ****     *
 384:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 386:.\Generated_Source\PSoC4/CyLib.c ****     {
 387:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 388:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 389:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 390:.\Generated_Source\PSoC4/CyLib.c ****     }
 391:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 392:.\Generated_Source\PSoC4/CyLib.c **** 
 393:.\Generated_Source\PSoC4/CyLib.c **** 
 394:.\Generated_Source\PSoC4/CyLib.c **** 
 395:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 396:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 397:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 398:.\Generated_Source\PSoC4/CyLib.c **** *
 399:.\Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 400:.\Generated_Source\PSoC4/CyLib.c **** *
 401:.\Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 402:.\Generated_Source\PSoC4/CyLib.c **** *
 403:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 404:.\Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 405:.\Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 406:.\Generated_Source\PSoC4/CyLib.c **** *
 407:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 408:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 409:.\Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 410:.\Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 411:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 412:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 413:.\Generated_Source\PSoC4/CyLib.c **** *
 414:.\Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 415:.\Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 416:.\Generated_Source\PSoC4/CyLib.c **** *
 417:.\Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 418:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 419:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 420:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 421:.\Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 422:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 423:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 424:.\Generated_Source\PSoC4/CyLib.c **** *
 425:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 426:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 427:.\Generated_Source\PSoC4/CyLib.c **** {
  79              		.loc 1 427 0
  80              		.cfi_startproc
  81              	.LVL0:
  82 0000 10B5     		push	{r4, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 4, -8
  85              		.cfi_offset 14, -4
  86 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 10


 428:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 429:.\Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 430:.\Generated_Source\PSoC4/CyLib.c **** 
 431:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  87              		.loc 1 431 0
  88 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL1:
 432:.\Generated_Source\PSoC4/CyLib.c **** 
 433:.\Generated_Source\PSoC4/CyLib.c **** 
 434:.\Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  90              		.loc 1 434 0
  91 0008 0449     		ldr	r1, .L8
  92 000a 0A68     		ldr	r2, [r1]
  93 000c 0723     		mov	r3, #7
  94 000e 9A43     		bic	r2, r3
  95              	.LVL2:
 435:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 436:.\Generated_Source\PSoC4/CyLib.c **** 
 437:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 438:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 439:.\Generated_Source\PSoC4/CyLib.c ****     {
 440:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 441:.\Generated_Source\PSoC4/CyLib.c ****     }
 442:.\Generated_Source\PSoC4/CyLib.c ****     else
 443:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 444:.\Generated_Source\PSoC4/CyLib.c ****     {
 445:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
  96              		.loc 1 445 0
  97 0010 2340     		and	r3, r4
  98 0012 1343     		orr	r3, r2
  99              	.LVL3:
 446:.\Generated_Source\PSoC4/CyLib.c ****     }
 447:.\Generated_Source\PSoC4/CyLib.c **** 
 448:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 100              		.loc 1 448 0
 101 0014 0B60     		str	r3, [r1]
 449:.\Generated_Source\PSoC4/CyLib.c **** 
 450:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 102              		.loc 1 450 0
 103 0016 FFF7FEFF 		bl	CyExitCriticalSection
 104              	.LVL4:
 451:.\Generated_Source\PSoC4/CyLib.c **** }
 105              		.loc 1 451 0
 106              		@ sp needed
 107              	.LVL5:
 108 001a 10BD     		pop	{r4, pc}
 109              	.L9:
 110              		.align	2
 111              	.L8:
 112 001c 00010B40 		.word	1074462976
 113              		.cfi_endproc
 114              	.LFE4:
 115              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 116              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 117              		.align	2
 118              		.global	CySysClkGetSysclkSource
 119              		.code	16
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 11


 120              		.thumb_func
 121              		.type	CySysClkGetSysclkSource, %function
 122              	CySysClkGetSysclkSource:
 123              	.LFB5:
 452:.\Generated_Source\PSoC4/CyLib.c **** 
 453:.\Generated_Source\PSoC4/CyLib.c **** 
 454:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 455:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 456:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 457:.\Generated_Source\PSoC4/CyLib.c **** *
 458:.\Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 459:.\Generated_Source\PSoC4/CyLib.c **** *
 460:.\Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 461:.\Generated_Source\PSoC4/CyLib.c **** *
 462:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 463:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 464:.\Generated_Source\PSoC4/CyLib.c **** {
 124              		.loc 1 464 0
 125              		.cfi_startproc
 126 0000 10B5     		push	{r4, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
 465:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 466:.\Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 467:.\Generated_Source\PSoC4/CyLib.c **** 
 468:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 130              		.loc 1 468 0
 131 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 132              	.LVL6:
 469:.\Generated_Source\PSoC4/CyLib.c **** 
 470:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 471:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 472:.\Generated_Source\PSoC4/CyLib.c ****     {
 473:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 474:.\Generated_Source\PSoC4/CyLib.c ****     }
 475:.\Generated_Source\PSoC4/CyLib.c ****     else
 476:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 477:.\Generated_Source\PSoC4/CyLib.c ****     {
 478:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 133              		.loc 1 478 0
 134 0006 044B     		ldr	r3, .L11
 135 0008 1B68     		ldr	r3, [r3]
 136 000a 0724     		mov	r4, #7
 137 000c 1C40     		and	r4, r3
 138              	.LVL7:
 479:.\Generated_Source\PSoC4/CyLib.c ****     }
 480:.\Generated_Source\PSoC4/CyLib.c **** 
 481:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 139              		.loc 1 481 0
 140 000e FFF7FEFF 		bl	CyExitCriticalSection
 141              	.LVL8:
 482:.\Generated_Source\PSoC4/CyLib.c **** 
 483:.\Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 484:.\Generated_Source\PSoC4/CyLib.c **** }
 142              		.loc 1 484 0
 143 0012 201C     		mov	r0, r4
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 12


 144              		@ sp needed
 145              	.LVL9:
 146 0014 10BD     		pop	{r4, pc}
 147              	.L12:
 148 0016 C046     		.align	2
 149              	.L11:
 150 0018 00010B40 		.word	1074462976
 151              		.cfi_endproc
 152              	.LFE5:
 153              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 154              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 155              		.align	2
 156              		.global	CySysClkWriteSysclkDiv
 157              		.code	16
 158              		.thumb_func
 159              		.type	CySysClkWriteSysclkDiv, %function
 160              	CySysClkWriteSysclkDiv:
 161              	.LFB6:
 485:.\Generated_Source\PSoC4/CyLib.c **** 
 486:.\Generated_Source\PSoC4/CyLib.c **** 
 487:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 488:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 489:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 490:.\Generated_Source\PSoC4/CyLib.c **** *
 491:.\Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 492:.\Generated_Source\PSoC4/CyLib.c **** *
 493:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 494:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 495:.\Generated_Source\PSoC4/CyLib.c **** *
 496:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 497:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 498:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 499:.\Generated_Source\PSoC4/CyLib.c **** *
 500:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 501:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 502:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 503:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 504:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 505:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 506:.\Generated_Source\PSoC4/CyLib.c **** *
 507:.\Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 508:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 509:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 510:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 511:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 512:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 513:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 514:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 515:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 516:.\Generated_Source\PSoC4/CyLib.c **** *
 517:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 519:.\Generated_Source\PSoC4/CyLib.c **** {
 162              		.loc 1 519 0
 163              		.cfi_startproc
 164              	.LVL10:
 165 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 13


 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 4, -8
 168              		.cfi_offset 14, -4
 169 0002 041C     		mov	r4, r0
 520:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:.\Generated_Source\PSoC4/CyLib.c **** 
 522:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 170              		.loc 1 522 0
 171 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 172              	.LVL11:
 523:.\Generated_Source\PSoC4/CyLib.c **** 
 524:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 173              		.loc 1 524 0
 174 0008 0723     		mov	r3, #7
 175 000a 1C40     		and	r4, r3
 176              	.LVL12:
 177 000c E404     		lsl	r4, r4, #19
 525:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 526:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 178              		.loc 1 526 0
 179 000e 0449     		ldr	r1, .L14
 180 0010 0B68     		ldr	r3, [r1]
 181 0012 044A     		ldr	r2, .L14+4
 182 0014 1340     		and	r3, r2
 525:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 183              		.loc 1 525 0
 184 0016 2343     		orr	r3, r4
 524:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 185              		.loc 1 524 0
 186 0018 0B60     		str	r3, [r1]
 527:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 528:.\Generated_Source\PSoC4/CyLib.c **** 
 529:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 187              		.loc 1 529 0
 188 001a FFF7FEFF 		bl	CyExitCriticalSection
 189              	.LVL13:
 530:.\Generated_Source\PSoC4/CyLib.c **** }
 190              		.loc 1 530 0
 191              		@ sp needed
 192 001e 10BD     		pop	{r4, pc}
 193              	.L15:
 194              		.align	2
 195              	.L14:
 196 0020 00010B40 		.word	1074462976
 197 0024 FFFFC7FF 		.word	-3670017
 198              		.cfi_endproc
 199              	.LFE6:
 200              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 201              		.section	.text.CySysClkEcoStop,"ax",%progbits
 202              		.align	2
 203              		.global	CySysClkEcoStop
 204              		.code	16
 205              		.thumb_func
 206              		.type	CySysClkEcoStop, %function
 207              	CySysClkEcoStop:
 208              	.LFB9:
 531:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 14


 532:.\Generated_Source\PSoC4/CyLib.c **** 
 533:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 535:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 536:.\Generated_Source\PSoC4/CyLib.c **** *
 537:.\Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 538:.\Generated_Source\PSoC4/CyLib.c **** *
 539:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 540:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 541:.\Generated_Source\PSoC4/CyLib.c **** *
 542:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 543:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 544:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 545:.\Generated_Source\PSoC4/CyLib.c **** *
 546:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 547:.\Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 548:.\Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 549:.\Generated_Source\PSoC4/CyLib.c **** *
 550:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 551:.\Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 552:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 553:.\Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 554:.\Generated_Source\PSoC4/CyLib.c **** *
 555:.\Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 556:.\Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 557:.\Generated_Source\PSoC4/CyLib.c **** *
 558:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 559:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 560:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 561:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 562:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 564:.\Generated_Source\PSoC4/CyLib.c **** *
 565:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 566:.\Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 567:.\Generated_Source\PSoC4/CyLib.c **** * the System clock.
 568:.\Generated_Source\PSoC4/CyLib.c **** *
 569:.\Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 570:.\Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 571:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 572:.\Generated_Source\PSoC4/CyLib.c **** * 4.
 573:.\Generated_Source\PSoC4/CyLib.c **** *
 574:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 575:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 576:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 577:.\Generated_Source\PSoC4/CyLib.c ****     {
 578:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 579:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 580:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 581:.\Generated_Source\PSoC4/CyLib.c ****         #else
 582:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 583:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 584:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 585:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 586:.\Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 587:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 588:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 15


 589:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 590:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 591:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 594:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 595:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 596:.\Generated_Source\PSoC4/CyLib.c **** 
 597:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 598:.\Generated_Source\PSoC4/CyLib.c **** 
 599:.\Generated_Source\PSoC4/CyLib.c **** 
 600:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 601:.\Generated_Source\PSoC4/CyLib.c **** 
 602:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 603:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 604:.\Generated_Source\PSoC4/CyLib.c ****             {
 605:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 606:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 607:.\Generated_Source\PSoC4/CyLib.c ****             }
 608:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 609:.\Generated_Source\PSoC4/CyLib.c **** 
 610:.\Generated_Source\PSoC4/CyLib.c **** 
 611:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 612:.\Generated_Source\PSoC4/CyLib.c **** 
 613:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 614:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 615:.\Generated_Source\PSoC4/CyLib.c ****                 {
 616:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 617:.\Generated_Source\PSoC4/CyLib.c **** 
 618:.\Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 619:.\Generated_Source\PSoC4/CyLib.c ****                 {
 620:.\Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 621:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 622:.\Generated_Source\PSoC4/CyLib.c ****                 }
 623:.\Generated_Source\PSoC4/CyLib.c **** 
 624:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 625:.\Generated_Source\PSoC4/CyLib.c ****                 }
 626:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 627:.\Generated_Source\PSoC4/CyLib.c **** 
 628:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 629:.\Generated_Source\PSoC4/CyLib.c **** 
 630:.\Generated_Source\PSoC4/CyLib.c **** 
 631:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 632:.\Generated_Source\PSoC4/CyLib.c **** 
 633:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 634:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 635:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 636:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 637:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 640:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 641:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 642:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 643:.\Generated_Source\PSoC4/CyLib.c **** 
 644:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 645:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 16


 646:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 647:.\Generated_Source\PSoC4/CyLib.c **** 
 648:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 649:.\Generated_Source\PSoC4/CyLib.c **** 
 650:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 651:.\Generated_Source\PSoC4/CyLib.c ****         {
 652:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 653:.\Generated_Source\PSoC4/CyLib.c ****             {
 654:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 655:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 656:.\Generated_Source\PSoC4/CyLib.c ****             }
 657:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 658:.\Generated_Source\PSoC4/CyLib.c ****             {
 659:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 660:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 661:.\Generated_Source\PSoC4/CyLib.c ****             }
 662:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 663:.\Generated_Source\PSoC4/CyLib.c ****             {
 664:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 665:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 666:.\Generated_Source\PSoC4/CyLib.c ****             }
 667:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 668:.\Generated_Source\PSoC4/CyLib.c ****             {
 669:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 670:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 671:.\Generated_Source\PSoC4/CyLib.c ****             }
 672:.\Generated_Source\PSoC4/CyLib.c ****             else
 673:.\Generated_Source\PSoC4/CyLib.c ****             {
 674:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 675:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 676:.\Generated_Source\PSoC4/CyLib.c ****             }
 677:.\Generated_Source\PSoC4/CyLib.c **** 
 678:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 679:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 680:.\Generated_Source\PSoC4/CyLib.c **** 
 681:.\Generated_Source\PSoC4/CyLib.c **** 
 682:.\Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 683:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 684:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 685:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 686:.\Generated_Source\PSoC4/CyLib.c ****             *
 687:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 688:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 689:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 690:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 691:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 692:.\Generated_Source\PSoC4/CyLib.c ****             {
 693:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 694:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 695:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 696:.\Generated_Source\PSoC4/CyLib.c **** 
 697:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 698:.\Generated_Source\PSoC4/CyLib.c **** 
 699:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 700:.\Generated_Source\PSoC4/CyLib.c ****             }
 701:.\Generated_Source\PSoC4/CyLib.c ****             else
 702:.\Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 17


 703:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 704:.\Generated_Source\PSoC4/CyLib.c ****             }
 705:.\Generated_Source\PSoC4/CyLib.c **** 
 706:.\Generated_Source\PSoC4/CyLib.c **** 
 707:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 708:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 709:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 710:.\Generated_Source\PSoC4/CyLib.c ****             *
 711:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 712:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 713:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 714:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 715:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 716:.\Generated_Source\PSoC4/CyLib.c ****             {
 717:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 718:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 719:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 720:.\Generated_Source\PSoC4/CyLib.c ****             }
 721:.\Generated_Source\PSoC4/CyLib.c **** 
 722:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 723:.\Generated_Source\PSoC4/CyLib.c **** 
 724:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 725:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 726:.\Generated_Source\PSoC4/CyLib.c ****                 {
 727:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 728:.\Generated_Source\PSoC4/CyLib.c ****                 }
 729:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 730:.\Generated_Source\PSoC4/CyLib.c ****                 {
 731:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732:.\Generated_Source\PSoC4/CyLib.c ****                 }
 733:.\Generated_Source\PSoC4/CyLib.c ****                 else
 734:.\Generated_Source\PSoC4/CyLib.c ****                 {
 735:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 736:.\Generated_Source\PSoC4/CyLib.c ****                 }
 737:.\Generated_Source\PSoC4/CyLib.c ****             #else
 738:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 739:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 740:.\Generated_Source\PSoC4/CyLib.c **** 
 741:.\Generated_Source\PSoC4/CyLib.c **** 
 742:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 743:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 744:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 745:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 746:.\Generated_Source\PSoC4/CyLib.c **** 
 747:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 748:.\Generated_Source\PSoC4/CyLib.c ****             {
 749:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 750:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 751:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 752:.\Generated_Source\PSoC4/CyLib.c ****             }
 753:.\Generated_Source\PSoC4/CyLib.c ****         }
 754:.\Generated_Source\PSoC4/CyLib.c ****         else
 755:.\Generated_Source\PSoC4/CyLib.c ****         {
 756:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 757:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 758:.\Generated_Source\PSoC4/CyLib.c ****         }
 759:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 18


 760:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 761:.\Generated_Source\PSoC4/CyLib.c **** 
 762:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 764:.\Generated_Source\PSoC4/CyLib.c ****             {
 765:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 766:.\Generated_Source\PSoC4/CyLib.c ****             }
 767:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 768:.\Generated_Source\PSoC4/CyLib.c **** 
 769:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 770:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 771:.\Generated_Source\PSoC4/CyLib.c ****             {
 772:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 773:.\Generated_Source\PSoC4/CyLib.c ****             }
 774:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 775:.\Generated_Source\PSoC4/CyLib.c **** 
 776:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 777:.\Generated_Source\PSoC4/CyLib.c ****     }
 778:.\Generated_Source\PSoC4/CyLib.c **** 
 779:.\Generated_Source\PSoC4/CyLib.c **** #else
 780:.\Generated_Source\PSoC4/CyLib.c **** 
 781:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 782:.\Generated_Source\PSoC4/CyLib.c ****     {
 783:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 784:.\Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 785:.\Generated_Source\PSoC4/CyLib.c **** 
 786:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 787:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 788:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 789:.\Generated_Source\PSoC4/CyLib.c ****         
 790:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 791:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 792:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 793:.\Generated_Source\PSoC4/CyLib.c **** 
 794:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 795:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 796:.\Generated_Source\PSoC4/CyLib.c ****         #else
 797:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 798:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 799:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 800:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 801:.\Generated_Source\PSoC4/CyLib.c ****         {
 802:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 803:.\Generated_Source\PSoC4/CyLib.c **** 
 804:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 805:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 806:.\Generated_Source\PSoC4/CyLib.c ****                 {
 807:.\Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 808:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 809:.\Generated_Source\PSoC4/CyLib.c ****                 }
 810:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 813:.\Generated_Source\PSoC4/CyLib.c **** 
 814:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 816:.\Generated_Source\PSoC4/CyLib.c ****                     {
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 19


 817:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:.\Generated_Source\PSoC4/CyLib.c **** 
 819:.\Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 820:.\Generated_Source\PSoC4/CyLib.c ****                     {
 821:.\Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 822:.\Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 823:.\Generated_Source\PSoC4/CyLib.c ****                     }
 824:.\Generated_Source\PSoC4/CyLib.c **** 
 825:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 826:.\Generated_Source\PSoC4/CyLib.c ****                     }
 827:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 828:.\Generated_Source\PSoC4/CyLib.c **** 
 829:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 830:.\Generated_Source\PSoC4/CyLib.c **** 
 831:.\Generated_Source\PSoC4/CyLib.c **** 
 832:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 833:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 834:.\Generated_Source\PSoC4/CyLib.c **** 
 835:.\Generated_Source\PSoC4/CyLib.c **** 
 836:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 837:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 839:.\Generated_Source\PSoC4/CyLib.c ****                 {
 840:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 841:.\Generated_Source\PSoC4/CyLib.c ****                 }
 842:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 843:.\Generated_Source\PSoC4/CyLib.c ****                 {
 844:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 845:.\Generated_Source\PSoC4/CyLib.c ****                 }
 846:.\Generated_Source\PSoC4/CyLib.c ****                 else
 847:.\Generated_Source\PSoC4/CyLib.c ****                 {
 848:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 849:.\Generated_Source\PSoC4/CyLib.c ****                 }
 850:.\Generated_Source\PSoC4/CyLib.c ****             #else
 851:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 852:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 853:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 854:.\Generated_Source\PSoC4/CyLib.c **** 
 855:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 856:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 857:.\Generated_Source\PSoC4/CyLib.c **** 
 858:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 859:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 860:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 861:.\Generated_Source\PSoC4/CyLib.c **** 
 862:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 863:.\Generated_Source\PSoC4/CyLib.c **** 
 864:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 865:.\Generated_Source\PSoC4/CyLib.c ****             {
 866:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 868:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 869:.\Generated_Source\PSoC4/CyLib.c **** 
 870:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 871:.\Generated_Source\PSoC4/CyLib.c **** 
 872:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 873:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 20


 874:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 875:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 876:.\Generated_Source\PSoC4/CyLib.c ****             }
 877:.\Generated_Source\PSoC4/CyLib.c **** 
 878:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 879:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 880:.\Generated_Source\PSoC4/CyLib.c ****                 {
 881:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 882:.\Generated_Source\PSoC4/CyLib.c ****                 }
 883:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 884:.\Generated_Source\PSoC4/CyLib.c ****         
 885:.\Generated_Source\PSoC4/CyLib.c ****         
 886:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 888:.\Generated_Source\PSoC4/CyLib.c ****                 {
 889:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 890:.\Generated_Source\PSoC4/CyLib.c ****                 }
 891:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 892:.\Generated_Source\PSoC4/CyLib.c **** 
 893:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 894:.\Generated_Source\PSoC4/CyLib.c ****         }
 895:.\Generated_Source\PSoC4/CyLib.c ****         else
 896:.\Generated_Source\PSoC4/CyLib.c ****         {
 897:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 898:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 899:.\Generated_Source\PSoC4/CyLib.c ****         }
 900:.\Generated_Source\PSoC4/CyLib.c ****     }
 901:.\Generated_Source\PSoC4/CyLib.c **** 
 902:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 903:.\Generated_Source\PSoC4/CyLib.c **** 
 904:.\Generated_Source\PSoC4/CyLib.c **** 
 905:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 906:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 907:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 908:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 909:.\Generated_Source\PSoC4/CyLib.c ****     *
 910:.\Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 911:.\Generated_Source\PSoC4/CyLib.c ****     *
 912:.\Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 913:.\Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 914:.\Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 915:.\Generated_Source\PSoC4/CyLib.c ****     *
 916:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 917:.\Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 918:.\Generated_Source\PSoC4/CyLib.c ****     *
 919:.\Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 920:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 921:.\Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 922:.\Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 923:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 924:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 925:.\Generated_Source\PSoC4/CyLib.c ****     *
 926:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 927:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 928:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 929:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 930:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 21


 931:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 932:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 933:.\Generated_Source\PSoC4/CyLib.c ****     {
 934:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 935:.\Generated_Source\PSoC4/CyLib.c **** 
 936:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 937:.\Generated_Source\PSoC4/CyLib.c **** 
 938:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 939:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 940:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 941:.\Generated_Source\PSoC4/CyLib.c **** 
 942:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 943:.\Generated_Source\PSoC4/CyLib.c ****     }
 944:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 945:.\Generated_Source\PSoC4/CyLib.c **** 
 946:.\Generated_Source\PSoC4/CyLib.c **** 
 947:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 948:.\Generated_Source\PSoC4/CyLib.c **** 
 949:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 950:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 951:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 952:.\Generated_Source\PSoC4/CyLib.c ****     *
 953:.\Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 954:.\Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 955:.\Generated_Source\PSoC4/CyLib.c ****     *
 956:.\Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 957:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 958:.\Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 959:.\Generated_Source\PSoC4/CyLib.c ****     * called.
 960:.\Generated_Source\PSoC4/CyLib.c ****     *
 961:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 962:.\Generated_Source\PSoC4/CyLib.c ****     *
 963:.\Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
 964:.\Generated_Source\PSoC4/CyLib.c ****     *
 965:.\Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 966:.\Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 967:.\Generated_Source\PSoC4/CyLib.c ****     *
 968:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 969:.\Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
 970:.\Generated_Source\PSoC4/CyLib.c ****     *
 971:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 972:.\Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 973:.\Generated_Source\PSoC4/CyLib.c ****     * is returned.
 974:.\Generated_Source\PSoC4/CyLib.c ****     *
 975:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 976:.\Generated_Source\PSoC4/CyLib.c ****     *
 977:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 978:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 979:.\Generated_Source\PSoC4/CyLib.c ****     {
 980:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 981:.\Generated_Source\PSoC4/CyLib.c **** 
 982:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 983:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 984:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 985:.\Generated_Source\PSoC4/CyLib.c **** 
 986:.\Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 987:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 22


 988:.\Generated_Source\PSoC4/CyLib.c **** 
 989:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 990:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 991:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 992:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 993:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 994:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 995:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 996:.\Generated_Source\PSoC4/CyLib.c **** 
 997:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 998:.\Generated_Source\PSoC4/CyLib.c ****         {
 999:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1000:.\Generated_Source\PSoC4/CyLib.c **** 
1001:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1002:.\Generated_Source\PSoC4/CyLib.c ****             {
1003:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1004:.\Generated_Source\PSoC4/CyLib.c **** 
1005:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1006:.\Generated_Source\PSoC4/CyLib.c ****                 {
1007:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1008:.\Generated_Source\PSoC4/CyLib.c ****                     break;
1009:.\Generated_Source\PSoC4/CyLib.c ****                 }
1010:.\Generated_Source\PSoC4/CyLib.c ****             }
1011:.\Generated_Source\PSoC4/CyLib.c **** 
1012:.\Generated_Source\PSoC4/CyLib.c ****         }
1013:.\Generated_Source\PSoC4/CyLib.c **** 
1014:.\Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1015:.\Generated_Source\PSoC4/CyLib.c ****     }
1016:.\Generated_Source\PSoC4/CyLib.c **** 
1017:.\Generated_Source\PSoC4/CyLib.c **** 
1018:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1019:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1020:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1021:.\Generated_Source\PSoC4/CyLib.c ****     *
1022:.\Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1023:.\Generated_Source\PSoC4/CyLib.c ****     *
1024:.\Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1025:.\Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1026:.\Generated_Source\PSoC4/CyLib.c ****     * functioning.
1027:.\Generated_Source\PSoC4/CyLib.c ****     *
1028:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1029:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1030:.\Generated_Source\PSoC4/CyLib.c ****     {
 209              		.loc 1 1030 0
 210              		.cfi_startproc
1031:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1032:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1033:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 211              		.loc 1 1033 0
 212 0000 054A     		ldr	r2, .L17
 213 0002 1368     		ldr	r3, [r2]
 214 0004 0121     		mov	r1, #1
 215 0006 8B43     		bic	r3, r1
 216 0008 1360     		str	r3, [r2]
1034:.\Generated_Source\PSoC4/CyLib.c **** 
1035:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1036:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 23


 217              		.loc 1 1036 0
 218 000a 044A     		ldr	r2, .L17+4
 219 000c 1168     		ldr	r1, [r2]
 220 000e 044B     		ldr	r3, .L17+8
 221 0010 0B40     		and	r3, r1
 222 0012 1360     		str	r3, [r2]
1037:.\Generated_Source\PSoC4/CyLib.c ****         #else
1038:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1039:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1040:.\Generated_Source\PSoC4/CyLib.c ****     }
 223              		.loc 1 1040 0
 224              		@ sp needed
 225 0014 7047     		bx	lr
 226              	.L18:
 227 0016 C046     		.align	2
 228              	.L17:
 229 0018 60F02E40 		.word	1076818016
 230 001c 10002E40 		.word	1076756496
 231 0020 FF7FFFFF 		.word	-32769
 232              		.cfi_endproc
 233              	.LFE9:
 234              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 235              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 236              		.align	2
 237              		.global	CySysClkEcoReadStatus
 238              		.code	16
 239              		.thumb_func
 240              		.type	CySysClkEcoReadStatus, %function
 241              	CySysClkEcoReadStatus:
 242              	.LFB10:
1041:.\Generated_Source\PSoC4/CyLib.c **** 
1042:.\Generated_Source\PSoC4/CyLib.c **** 
1043:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1044:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1045:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1046:.\Generated_Source\PSoC4/CyLib.c ****     *
1047:.\Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1048:.\Generated_Source\PSoC4/CyLib.c ****     *
1049:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1050:.\Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1051:.\Generated_Source\PSoC4/CyLib.c ****     *
1052:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1053:.\Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1054:.\Generated_Source\PSoC4/CyLib.c ****     *
1055:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1056:.\Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1057:.\Generated_Source\PSoC4/CyLib.c ****     *
1058:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1059:.\Generated_Source\PSoC4/CyLib.c ****     *
1060:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1061:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1062:.\Generated_Source\PSoC4/CyLib.c ****     {
 243              		.loc 1 1062 0
 244              		.cfi_startproc
1063:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1064:.\Generated_Source\PSoC4/CyLib.c **** 
1065:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 24


1066:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 245              		.loc 1 1066 0
 246 0000 024B     		ldr	r3, .L20
 247 0002 1B68     		ldr	r3, [r3]
 248 0004 0120     		mov	r0, #1
 249 0006 1840     		and	r0, r3
 250              	.LVL14:
1067:.\Generated_Source\PSoC4/CyLib.c ****         #else
1068:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1069:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1070:.\Generated_Source\PSoC4/CyLib.c **** 
1071:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1072:.\Generated_Source\PSoC4/CyLib.c ****     }
 251              		.loc 1 1072 0
 252              		@ sp needed
 253 0008 7047     		bx	lr
 254              	.L21:
 255 000a C046     		.align	2
 256              	.L20:
 257 000c 0C002E40 		.word	1076756492
 258              		.cfi_endproc
 259              	.LFE10:
 260              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 261              		.section	.text.CySysLvdDisable,"ax",%progbits
 262              		.align	2
 263              		.global	CySysLvdDisable
 264              		.code	16
 265              		.thumb_func
 266              		.type	CySysLvdDisable, %function
 267              	CySysLvdDisable:
 268              	.LFB13:
1073:.\Generated_Source\PSoC4/CyLib.c **** 
1074:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1075:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1076:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1077:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1078:.\Generated_Source\PSoC4/CyLib.c ****         *
1079:.\Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1080:.\Generated_Source\PSoC4/CyLib.c ****         *
1081:.\Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1082:.\Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1083:.\Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1084:.\Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1085:.\Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1086:.\Generated_Source\PSoC4/CyLib.c ****         *
1087:.\Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1088:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1089:.\Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1090:.\Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1091:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1092:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1093:.\Generated_Source\PSoC4/CyLib.c ****         *
1094:.\Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1095:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1096:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1097:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1098:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 25


1099:.\Generated_Source\PSoC4/CyLib.c ****         *
1100:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1101:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1102:.\Generated_Source\PSoC4/CyLib.c ****         {
1103:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1106:.\Generated_Source\PSoC4/CyLib.c ****             {
1107:.\Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1108:.\Generated_Source\PSoC4/CyLib.c **** 
1109:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1110:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1111:.\Generated_Source\PSoC4/CyLib.c **** 
1112:.\Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1113:.\Generated_Source\PSoC4/CyLib.c ****             }
1114:.\Generated_Source\PSoC4/CyLib.c ****             else
1115:.\Generated_Source\PSoC4/CyLib.c ****             {
1116:.\Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1117:.\Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1118:.\Generated_Source\PSoC4/CyLib.c ****             }
1119:.\Generated_Source\PSoC4/CyLib.c ****         }
1120:.\Generated_Source\PSoC4/CyLib.c **** 
1121:.\Generated_Source\PSoC4/CyLib.c ****     #else
1122:.\Generated_Source\PSoC4/CyLib.c **** 
1123:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1124:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1125:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1126:.\Generated_Source\PSoC4/CyLib.c ****         *
1127:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1128:.\Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1129:.\Generated_Source\PSoC4/CyLib.c ****         *
1130:.\Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1131:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1132:.\Generated_Source\PSoC4/CyLib.c ****         *
1133:.\Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1134:.\Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1135:.\Generated_Source\PSoC4/CyLib.c ****         *
1136:.\Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1137:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1138:.\Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1139:.\Generated_Source\PSoC4/CyLib.c ****         *
1140:.\Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1141:.\Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1142:.\Generated_Source\PSoC4/CyLib.c ****         *
1143:.\Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1144:.\Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1145:.\Generated_Source\PSoC4/CyLib.c ****         *
1146:.\Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1147:.\Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1148:.\Generated_Source\PSoC4/CyLib.c ****         *
1149:.\Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1150:.\Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1151:.\Generated_Source\PSoC4/CyLib.c ****         *
1152:.\Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1153:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1154:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1155:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 26


1156:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1157:.\Generated_Source\PSoC4/CyLib.c ****         *
1158:.\Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1159:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1160:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1161:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1162:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1163:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1164:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1165:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1166:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1167:.\Generated_Source\PSoC4/CyLib.c ****         *
1168:.\Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1169:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:.\Generated_Source\PSoC4/CyLib.c ****         *
1174:.\Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1175:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1176:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1177:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1178:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1179:.\Generated_Source\PSoC4/CyLib.c ****         *
1180:.\Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1181:.\Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1182:.\Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1183:.\Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1184:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1185:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1186:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1187:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1188:.\Generated_Source\PSoC4/CyLib.c ****         *
1189:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1190:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1191:.\Generated_Source\PSoC4/CyLib.c ****         {
1192:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1193:.\Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1196:.\Generated_Source\PSoC4/CyLib.c **** 
1197:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1198:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1199:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1200:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1203:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1204:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1205:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1206:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1207:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1208:.\Generated_Source\PSoC4/CyLib.c **** 
1209:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1210:.\Generated_Source\PSoC4/CyLib.c **** 
1211:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1212:.\Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 27


1213:.\Generated_Source\PSoC4/CyLib.c **** 
1214:.\Generated_Source\PSoC4/CyLib.c **** 
1215:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1216:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1217:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1218:.\Generated_Source\PSoC4/CyLib.c ****         *
1219:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1220:.\Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1221:.\Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1222:.\Generated_Source\PSoC4/CyLib.c ****         *
1223:.\Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1224:.\Generated_Source\PSoC4/CyLib.c ****         *
1225:.\Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1226:.\Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1227:.\Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1228:.\Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1229:.\Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1230:.\Generated_Source\PSoC4/CyLib.c ****         *
1231:.\Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1232:.\Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1233:.\Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1234:.\Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1235:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1236:.\Generated_Source\PSoC4/CyLib.c ****         *
1237:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1238:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1239:.\Generated_Source\PSoC4/CyLib.c ****         *
1240:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1241:.\Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1242:.\Generated_Source\PSoC4/CyLib.c ****         {
1243:.\Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1244:.\Generated_Source\PSoC4/CyLib.c **** 
1245:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1246:.\Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1247:.\Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1248:.\Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1249:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1250:.\Generated_Source\PSoC4/CyLib.c **** 
1251:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1252:.\Generated_Source\PSoC4/CyLib.c **** 
1253:.\Generated_Source\PSoC4/CyLib.c **** 
1254:.\Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1255:.\Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1256:.\Generated_Source\PSoC4/CyLib.c ****             {
1257:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1258:.\Generated_Source\PSoC4/CyLib.c ****             }
1259:.\Generated_Source\PSoC4/CyLib.c ****             else
1260:.\Generated_Source\PSoC4/CyLib.c ****             {
1261:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1262:.\Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1263:.\Generated_Source\PSoC4/CyLib.c **** 
1264:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1265:.\Generated_Source\PSoC4/CyLib.c ****                 {
1266:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1267:.\Generated_Source\PSoC4/CyLib.c ****                 }
1268:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1269:.\Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 28


1270:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1271:.\Generated_Source\PSoC4/CyLib.c ****                 }
1272:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1273:.\Generated_Source\PSoC4/CyLib.c ****                 {
1274:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1275:.\Generated_Source\PSoC4/CyLib.c ****                 }
1276:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1277:.\Generated_Source\PSoC4/CyLib.c ****                 {
1278:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1279:.\Generated_Source\PSoC4/CyLib.c ****                 }
1280:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1281:.\Generated_Source\PSoC4/CyLib.c ****                 {
1282:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1283:.\Generated_Source\PSoC4/CyLib.c ****                 }
1284:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1285:.\Generated_Source\PSoC4/CyLib.c ****                 {
1286:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1287:.\Generated_Source\PSoC4/CyLib.c ****                 }
1288:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1289:.\Generated_Source\PSoC4/CyLib.c ****                 {
1290:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1291:.\Generated_Source\PSoC4/CyLib.c ****                 }
1292:.\Generated_Source\PSoC4/CyLib.c ****                 else
1293:.\Generated_Source\PSoC4/CyLib.c ****                 {
1294:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1295:.\Generated_Source\PSoC4/CyLib.c ****                 }
1296:.\Generated_Source\PSoC4/CyLib.c **** 
1297:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1298:.\Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1299:.\Generated_Source\PSoC4/CyLib.c **** 
1300:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1301:.\Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1302:.\Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1303:.\Generated_Source\PSoC4/CyLib.c ****                 {
1304:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1305:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1306:.\Generated_Source\PSoC4/CyLib.c ****                 }
1307:.\Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1308:.\Generated_Source\PSoC4/CyLib.c ****                 {
1309:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1310:.\Generated_Source\PSoC4/CyLib.c ****                 }
1311:.\Generated_Source\PSoC4/CyLib.c ****                 else
1312:.\Generated_Source\PSoC4/CyLib.c ****                 {
1313:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1314:.\Generated_Source\PSoC4/CyLib.c ****                 }
1315:.\Generated_Source\PSoC4/CyLib.c **** 
1316:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1317:.\Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1318:.\Generated_Source\PSoC4/CyLib.c ****                 {
1319:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1320:.\Generated_Source\PSoC4/CyLib.c ****                 }
1321:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1322:.\Generated_Source\PSoC4/CyLib.c ****                 {
1323:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1324:.\Generated_Source\PSoC4/CyLib.c ****                 }
1325:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1326:.\Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 29


1327:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1328:.\Generated_Source\PSoC4/CyLib.c ****                 }
1329:.\Generated_Source\PSoC4/CyLib.c ****                 else
1330:.\Generated_Source\PSoC4/CyLib.c ****                 {
1331:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1332:.\Generated_Source\PSoC4/CyLib.c ****                 }
1333:.\Generated_Source\PSoC4/CyLib.c **** 
1334:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1335:.\Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1336:.\Generated_Source\PSoC4/CyLib.c **** 
1337:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1338:.\Generated_Source\PSoC4/CyLib.c **** 
1339:.\Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1340:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1341:.\Generated_Source\PSoC4/CyLib.c ****                 {
1342:.\Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1343:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:.\Generated_Source\PSoC4/CyLib.c ****                 }
1345:.\Generated_Source\PSoC4/CyLib.c ****                 else
1346:.\Generated_Source\PSoC4/CyLib.c ****                 {
1347:.\Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1348:.\Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1349:.\Generated_Source\PSoC4/CyLib.c ****                     */
1350:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1351:.\Generated_Source\PSoC4/CyLib.c ****                 }
1352:.\Generated_Source\PSoC4/CyLib.c ****             }
1353:.\Generated_Source\PSoC4/CyLib.c **** 
1354:.\Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1355:.\Generated_Source\PSoC4/CyLib.c ****         }
1356:.\Generated_Source\PSoC4/CyLib.c **** 
1357:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1358:.\Generated_Source\PSoC4/CyLib.c **** 
1359:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1360:.\Generated_Source\PSoC4/CyLib.c **** 
1361:.\Generated_Source\PSoC4/CyLib.c **** 
1362:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1363:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1364:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1365:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1366:.\Generated_Source\PSoC4/CyLib.c ****     *
1367:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1368:.\Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1369:.\Generated_Source\PSoC4/CyLib.c ****     *
1370:.\Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1371:.\Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1372:.\Generated_Source\PSoC4/CyLib.c ****     *
1373:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1374:.\Generated_Source\PSoC4/CyLib.c ****     *
1375:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1376:.\Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1377:.\Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1378:.\Generated_Source\PSoC4/CyLib.c ****     *
1379:.\Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1380:.\Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1381:.\Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1382:.\Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1383:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 30


1384:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1385:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1386:.\Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1387:.\Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1388:.\Generated_Source\PSoC4/CyLib.c ****     * still be used.
1389:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1390:.\Generated_Source\PSoC4/CyLib.c ****     *
1391:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1392:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1393:.\Generated_Source\PSoC4/CyLib.c ****     {
1394:.\Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1395:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1396:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1397:.\Generated_Source\PSoC4/CyLib.c **** 
1398:.\Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1399:.\Generated_Source\PSoC4/CyLib.c ****         {
1400:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1401:.\Generated_Source\PSoC4/CyLib.c **** 
1402:.\Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1403:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1404:.\Generated_Source\PSoC4/CyLib.c **** 
1405:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1406:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1407:.\Generated_Source\PSoC4/CyLib.c **** 
1408:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1409:.\Generated_Source\PSoC4/CyLib.c **** 
1410:.\Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1411:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1412:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1413:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1414:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1415:.\Generated_Source\PSoC4/CyLib.c **** 
1416:.\Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1417:.\Generated_Source\PSoC4/CyLib.c ****             {
1418:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1419:.\Generated_Source\PSoC4/CyLib.c **** 
1420:.\Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1421:.\Generated_Source\PSoC4/CyLib.c ****                 {
1422:.\Generated_Source\PSoC4/CyLib.c **** 
1423:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1424:.\Generated_Source\PSoC4/CyLib.c ****                     {
1425:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1426:.\Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1427:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1428:.\Generated_Source\PSoC4/CyLib.c ****                     }
1429:.\Generated_Source\PSoC4/CyLib.c **** 
1430:.\Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1431:.\Generated_Source\PSoC4/CyLib.c ****                     counts--;
1432:.\Generated_Source\PSoC4/CyLib.c ****                 }
1433:.\Generated_Source\PSoC4/CyLib.c ****             }
1434:.\Generated_Source\PSoC4/CyLib.c ****         }
1435:.\Generated_Source\PSoC4/CyLib.c ****         else
1436:.\Generated_Source\PSoC4/CyLib.c ****         {
1437:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1438:.\Generated_Source\PSoC4/CyLib.c ****         }
1439:.\Generated_Source\PSoC4/CyLib.c **** 
1440:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 31


1441:.\Generated_Source\PSoC4/CyLib.c ****     }
1442:.\Generated_Source\PSoC4/CyLib.c **** 
1443:.\Generated_Source\PSoC4/CyLib.c **** 
1444:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1445:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1446:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1447:.\Generated_Source\PSoC4/CyLib.c ****     *
1448:.\Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1449:.\Generated_Source\PSoC4/CyLib.c ****     *
1450:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1451:.\Generated_Source\PSoC4/CyLib.c ****     *
1452:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1453:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1454:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1455:.\Generated_Source\PSoC4/CyLib.c ****     *
1456:.\Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1457:.\Generated_Source\PSoC4/CyLib.c ****     *
1458:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1459:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1460:.\Generated_Source\PSoC4/CyLib.c ****     {
1461:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1462:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1463:.\Generated_Source\PSoC4/CyLib.c **** 
1464:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1465:.\Generated_Source\PSoC4/CyLib.c **** 
1466:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1467:.\Generated_Source\PSoC4/CyLib.c **** 
1468:.\Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1469:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1470:.\Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1471:.\Generated_Source\PSoC4/CyLib.c ****         {
1472:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1473:.\Generated_Source\PSoC4/CyLib.c ****         }
1474:.\Generated_Source\PSoC4/CyLib.c **** 
1475:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1476:.\Generated_Source\PSoC4/CyLib.c **** 
1477:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1478:.\Generated_Source\PSoC4/CyLib.c ****     }
1479:.\Generated_Source\PSoC4/CyLib.c **** 
1480:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1481:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1482:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1483:.\Generated_Source\PSoC4/CyLib.c ****     *
1484:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1485:.\Generated_Source\PSoC4/CyLib.c ****     *
1486:.\Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1487:.\Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1488:.\Generated_Source\PSoC4/CyLib.c ****     *
1489:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1490:.\Generated_Source\PSoC4/CyLib.c ****     *
1491:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1492:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1493:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1494:.\Generated_Source\PSoC4/CyLib.c ****     *
1495:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1496:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1497:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 32


1498:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1499:.\Generated_Source\PSoC4/CyLib.c **** 
1500:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1501:.\Generated_Source\PSoC4/CyLib.c ****         {
1502:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1503:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1504:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1505:.\Generated_Source\PSoC4/CyLib.c ****         }
1506:.\Generated_Source\PSoC4/CyLib.c ****     }
1507:.\Generated_Source\PSoC4/CyLib.c **** 
1508:.\Generated_Source\PSoC4/CyLib.c **** 
1509:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1510:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1511:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1512:.\Generated_Source\PSoC4/CyLib.c ****     *
1513:.\Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1514:.\Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1515:.\Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1516:.\Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1517:.\Generated_Source\PSoC4/CyLib.c ****     *
1518:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1519:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1520:.\Generated_Source\PSoC4/CyLib.c ****     *
1521:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1522:.\Generated_Source\PSoC4/CyLib.c ****     *
1523:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1524:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1525:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1526:.\Generated_Source\PSoC4/CyLib.c ****     *
1527:.\Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1528:.\Generated_Source\PSoC4/CyLib.c ****     * divider.
1529:.\Generated_Source\PSoC4/CyLib.c ****     *
1530:.\Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1531:.\Generated_Source\PSoC4/CyLib.c ****     *
1532:.\Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1533:.\Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1534:.\Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1535:.\Generated_Source\PSoC4/CyLib.c ****     *
1536:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1537:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1538:.\Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1539:.\Generated_Source\PSoC4/CyLib.c ****     *
1540:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1542:.\Generated_Source\PSoC4/CyLib.c ****     {
1543:.\Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1544:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1545:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1546:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1547:.\Generated_Source\PSoC4/CyLib.c **** 
1548:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1549:.\Generated_Source\PSoC4/CyLib.c **** 
1550:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1551:.\Generated_Source\PSoC4/CyLib.c **** 
1552:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1553:.\Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1554:.\Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 33


1555:.\Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1556:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1557:.\Generated_Source\PSoC4/CyLib.c ****         {
1558:.\Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1559:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1560:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1561:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1562:.\Generated_Source\PSoC4/CyLib.c **** 
1563:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1564:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1565:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1566:.\Generated_Source\PSoC4/CyLib.c **** 
1567:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1568:.\Generated_Source\PSoC4/CyLib.c **** 
1569:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1570:.\Generated_Source\PSoC4/CyLib.c ****         }
1571:.\Generated_Source\PSoC4/CyLib.c **** 
1572:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1573:.\Generated_Source\PSoC4/CyLib.c **** 
1574:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1575:.\Generated_Source\PSoC4/CyLib.c ****     }
1576:.\Generated_Source\PSoC4/CyLib.c **** 
1577:.\Generated_Source\PSoC4/CyLib.c **** 
1578:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1579:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1580:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1581:.\Generated_Source\PSoC4/CyLib.c ****     *
1582:.\Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1583:.\Generated_Source\PSoC4/CyLib.c ****     *
1584:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1585:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1586:.\Generated_Source\PSoC4/CyLib.c ****     *
1587:.\Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1588:.\Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1589:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1590:.\Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1591:.\Generated_Source\PSoC4/CyLib.c ****     *
1592:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1593:.\Generated_Source\PSoC4/CyLib.c ****     *
1594:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1595:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1596:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1597:.\Generated_Source\PSoC4/CyLib.c ****     *
1598:.\Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1599:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1600:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1601:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1602:.\Generated_Source\PSoC4/CyLib.c ****     *
1603:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1604:.\Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1605:.\Generated_Source\PSoC4/CyLib.c ****     *
1606:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1607:.\Generated_Source\PSoC4/CyLib.c ****     *
1608:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1610:.\Generated_Source\PSoC4/CyLib.c ****     {
1611:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 34


1612:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1613:.\Generated_Source\PSoC4/CyLib.c **** 
1614:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1615:.\Generated_Source\PSoC4/CyLib.c **** 
1616:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1617:.\Generated_Source\PSoC4/CyLib.c ****         {
1618:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1619:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1620:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1621:.\Generated_Source\PSoC4/CyLib.c ****         }
1622:.\Generated_Source\PSoC4/CyLib.c **** 
1623:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1624:.\Generated_Source\PSoC4/CyLib.c ****     }
1625:.\Generated_Source\PSoC4/CyLib.c **** 
1626:.\Generated_Source\PSoC4/CyLib.c **** 
1627:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1628:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1629:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1630:.\Generated_Source\PSoC4/CyLib.c ****     *
1631:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1632:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1633:.\Generated_Source\PSoC4/CyLib.c ****     *
1634:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1635:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1636:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1637:.\Generated_Source\PSoC4/CyLib.c ****     *
1638:.\Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1639:.\Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1640:.\Generated_Source\PSoC4/CyLib.c ****     *
1641:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1642:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1643:.\Generated_Source\PSoC4/CyLib.c ****     {
1644:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1645:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1646:.\Generated_Source\PSoC4/CyLib.c **** 
1647:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1648:.\Generated_Source\PSoC4/CyLib.c **** 
1649:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1650:.\Generated_Source\PSoC4/CyLib.c **** 
1651:.\Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1652:.\Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1653:.\Generated_Source\PSoC4/CyLib.c **** 
1654:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1655:.\Generated_Source\PSoC4/CyLib.c **** 
1656:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1657:.\Generated_Source\PSoC4/CyLib.c ****     }
1658:.\Generated_Source\PSoC4/CyLib.c **** 
1659:.\Generated_Source\PSoC4/CyLib.c **** 
1660:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1661:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1662:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1663:.\Generated_Source\PSoC4/CyLib.c ****     *
1664:.\Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1665:.\Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1666:.\Generated_Source\PSoC4/CyLib.c ****     *
1667:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1668:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 35


1669:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1670:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1671:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1672:.\Generated_Source\PSoC4/CyLib.c ****     *
1673:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1674:.\Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1675:.\Generated_Source\PSoC4/CyLib.c ****     *
1676:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1677:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1678:.\Generated_Source\PSoC4/CyLib.c ****     {
1679:.\Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1680:.\Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1681:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1682:.\Generated_Source\PSoC4/CyLib.c **** 
1683:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1684:.\Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1685:.\Generated_Source\PSoC4/CyLib.c **** 
1686:.\Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1687:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1688:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1689:.\Generated_Source\PSoC4/CyLib.c ****         {
1690:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1691:.\Generated_Source\PSoC4/CyLib.c ****         }
1692:.\Generated_Source\PSoC4/CyLib.c **** 
1693:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1694:.\Generated_Source\PSoC4/CyLib.c ****     }
1695:.\Generated_Source\PSoC4/CyLib.c **** 
1696:.\Generated_Source\PSoC4/CyLib.c **** 
1697:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1698:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1699:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1700:.\Generated_Source\PSoC4/CyLib.c ****     *
1701:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1702:.\Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1703:.\Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1704:.\Generated_Source\PSoC4/CyLib.c ****     *  this API.
1705:.\Generated_Source\PSoC4/CyLib.c ****     *
1706:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1707:.\Generated_Source\PSoC4/CyLib.c ****     *
1708:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1709:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1710:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1711:.\Generated_Source\PSoC4/CyLib.c ****     *
1712:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1713:.\Generated_Source\PSoC4/CyLib.c ****     *
1714:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1715:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1716:.\Generated_Source\PSoC4/CyLib.c ****     {
1717:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1718:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1719:.\Generated_Source\PSoC4/CyLib.c **** 
1720:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1721:.\Generated_Source\PSoC4/CyLib.c **** 
1722:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1723:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1724:.\Generated_Source\PSoC4/CyLib.c **** 
1725:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 36


1726:.\Generated_Source\PSoC4/CyLib.c **** 
1727:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1728:.\Generated_Source\PSoC4/CyLib.c ****     }
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c **** 
1731:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1732:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1733:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1734:.\Generated_Source\PSoC4/CyLib.c ****     *
1735:.\Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1736:.\Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1737:.\Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1738:.\Generated_Source\PSoC4/CyLib.c ****     *
1739:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1740:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1741:.\Generated_Source\PSoC4/CyLib.c ****     *
1742:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1743:.\Generated_Source\PSoC4/CyLib.c ****     *
1744:.\Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1745:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1746:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1747:.\Generated_Source\PSoC4/CyLib.c ****     *
1748:.\Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1749:.\Generated_Source\PSoC4/CyLib.c ****     *
1750:.\Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1751:.\Generated_Source\PSoC4/CyLib.c ****     *
1752:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1753:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1754:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1755:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1756:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1757:.\Generated_Source\PSoC4/CyLib.c ****     *
1758:.\Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1759:.\Generated_Source\PSoC4/CyLib.c ****     *
1760:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1761:.\Generated_Source\PSoC4/CyLib.c ****     * frequency.
1762:.\Generated_Source\PSoC4/CyLib.c ****     *
1763:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1764:.\Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1765:.\Generated_Source\PSoC4/CyLib.c ****     *
1766:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1767:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1768:.\Generated_Source\PSoC4/CyLib.c ****     {
1769:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1770:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1771:.\Generated_Source\PSoC4/CyLib.c **** 
1772:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1773:.\Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1774:.\Generated_Source\PSoC4/CyLib.c **** 
1775:.\Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1776:.\Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1777:.\Generated_Source\PSoC4/CyLib.c **** 
1778:.\Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1779:.\Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1780:.\Generated_Source\PSoC4/CyLib.c **** 
1781:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1782:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 37


1783:.\Generated_Source\PSoC4/CyLib.c **** 
1784:.\Generated_Source\PSoC4/CyLib.c **** 
1785:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1786:.\Generated_Source\PSoC4/CyLib.c **** 
1787:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1788:.\Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1789:.\Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1790:.\Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1791:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1792:.\Generated_Source\PSoC4/CyLib.c ****         {
1793:.\Generated_Source\PSoC4/CyLib.c **** 
1794:.\Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1795:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1796:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1797:.\Generated_Source\PSoC4/CyLib.c **** 
1798:.\Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1799:.\Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1800:.\Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1801:.\Generated_Source\PSoC4/CyLib.c **** 
1802:.\Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1803:.\Generated_Source\PSoC4/CyLib.c ****             {
1804:.\Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1805:.\Generated_Source\PSoC4/CyLib.c ****                 {
1806:.\Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1807:.\Generated_Source\PSoC4/CyLib.c **** 
1808:.\Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1809:.\Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1810:.\Generated_Source\PSoC4/CyLib.c **** 
1811:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1812:.\Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1813:.\Generated_Source\PSoC4/CyLib.c **** 
1814:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1815:.\Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1816:.\Generated_Source\PSoC4/CyLib.c **** 
1817:.\Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1818:.\Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1819:.\Generated_Source\PSoC4/CyLib.c ****                     {
1820:.\Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1821:.\Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1822:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1823:.\Generated_Source\PSoC4/CyLib.c ****                     }
1824:.\Generated_Source\PSoC4/CyLib.c ****                 }
1825:.\Generated_Source\PSoC4/CyLib.c **** 
1826:.\Generated_Source\PSoC4/CyLib.c **** 
1827:.\Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1828:.\Generated_Source\PSoC4/CyLib.c ****                 {
1829:.\Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1830:.\Generated_Source\PSoC4/CyLib.c ****                     {
1831:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1832:.\Generated_Source\PSoC4/CyLib.c ****                     }
1833:.\Generated_Source\PSoC4/CyLib.c ****                 }
1834:.\Generated_Source\PSoC4/CyLib.c ****             }
1835:.\Generated_Source\PSoC4/CyLib.c **** 
1836:.\Generated_Source\PSoC4/CyLib.c ****         }
1837:.\Generated_Source\PSoC4/CyLib.c **** 
1838:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1839:.\Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 38


1840:.\Generated_Source\PSoC4/CyLib.c **** 
1841:.\Generated_Source\PSoC4/CyLib.c **** 
1842:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1844:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1845:.\Generated_Source\PSoC4/CyLib.c ****     *
1846:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1847:.\Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1848:.\Generated_Source\PSoC4/CyLib.c ****     *
1849:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1850:.\Generated_Source\PSoC4/CyLib.c ****     *
1851:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1852:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1854:.\Generated_Source\PSoC4/CyLib.c ****     *
1855:.\Generated_Source\PSoC4/CyLib.c ****     * \param source:
1856:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1857:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1858:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1859:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1860:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1861:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1862:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1863:.\Generated_Source\PSoC4/CyLib.c ****     *
1864:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1866:.\Generated_Source\PSoC4/CyLib.c ****     {
1867:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:.\Generated_Source\PSoC4/CyLib.c **** 
1870:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1873:.\Generated_Source\PSoC4/CyLib.c ****         {
1874:.\Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1875:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1876:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1877:.\Generated_Source\PSoC4/CyLib.c ****         }
1878:.\Generated_Source\PSoC4/CyLib.c **** 
1879:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1880:.\Generated_Source\PSoC4/CyLib.c ****     }
1881:.\Generated_Source\PSoC4/CyLib.c **** 
1882:.\Generated_Source\PSoC4/CyLib.c **** 
1883:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1885:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1886:.\Generated_Source\PSoC4/CyLib.c ****     *
1887:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1888:.\Generated_Source\PSoC4/CyLib.c ****     *
1889:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1890:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1891:.\Generated_Source\PSoC4/CyLib.c ****     *
1892:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1893:.\Generated_Source\PSoC4/CyLib.c ****     *
1894:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1895:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1896:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 39


1897:.\Generated_Source\PSoC4/CyLib.c ****     *
1898:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider:
1899:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1900:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1901:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1902:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1903:.\Generated_Source\PSoC4/CyLib.c ****     *
1904:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1905:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
1906:.\Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1907:.\Generated_Source\PSoC4/CyLib.c ****     *
1908:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1909:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1910:.\Generated_Source\PSoC4/CyLib.c ****     {
1911:.\Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1912:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1913:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1914:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1915:.\Generated_Source\PSoC4/CyLib.c **** 
1916:.\Generated_Source\PSoC4/CyLib.c **** 
1917:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1918:.\Generated_Source\PSoC4/CyLib.c **** 
1919:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1920:.\Generated_Source\PSoC4/CyLib.c **** 
1921:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1922:.\Generated_Source\PSoC4/CyLib.c ****         {
1923:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1924:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1925:.\Generated_Source\PSoC4/CyLib.c **** 
1926:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1927:.\Generated_Source\PSoC4/CyLib.c **** 
1928:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1929:.\Generated_Source\PSoC4/CyLib.c ****         }
1930:.\Generated_Source\PSoC4/CyLib.c **** 
1931:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1932:.\Generated_Source\PSoC4/CyLib.c **** 
1933:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1934:.\Generated_Source\PSoC4/CyLib.c ****     }
1935:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1936:.\Generated_Source\PSoC4/CyLib.c **** 
1937:.\Generated_Source\PSoC4/CyLib.c **** 
1938:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1939:.\Generated_Source\PSoC4/CyLib.c **** 
1940:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1941:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1942:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1943:.\Generated_Source\PSoC4/CyLib.c ****     *
1944:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1945:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1946:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1947:.\Generated_Source\PSoC4/CyLib.c ****     *
1948:.\Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1949:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1950:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1951:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1952:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1953:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 40


1954:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1955:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
1956:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1957:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1958:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1959:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1960:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1961:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1962:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
1963:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1964:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1965:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1966:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
1967:.\Generated_Source\PSoC4/CyLib.c ****     *
1968:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1969:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1970:.\Generated_Source\PSoC4/CyLib.c ****     {
1971:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
1972:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
1973:.\Generated_Source\PSoC4/CyLib.c **** 
1974:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1975:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
1976:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
1977:.\Generated_Source\PSoC4/CyLib.c **** 
1978:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1979:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
1980:.\Generated_Source\PSoC4/CyLib.c **** 
1981:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1982:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
1983:.\Generated_Source\PSoC4/CyLib.c **** 
1984:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
1985:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
1986:.\Generated_Source\PSoC4/CyLib.c **** 
1987:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
1988:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
1989:.\Generated_Source\PSoC4/CyLib.c ****     }
1990:.\Generated_Source\PSoC4/CyLib.c **** 
1991:.\Generated_Source\PSoC4/CyLib.c **** 
1992:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1994:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1995:.\Generated_Source\PSoC4/CyLib.c ****     *
1996:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1997:.\Generated_Source\PSoC4/CyLib.c ****     *
1998:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1999:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2000:.\Generated_Source\PSoC4/CyLib.c ****     {
 269              		.loc 1 2000 0
 270              		.cfi_startproc
2001:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 271              		.loc 1 2001 0
 272 0000 054A     		ldr	r2, .L23
 273 0002 1368     		ldr	r3, [r2]
 274 0004 0221     		mov	r1, #2
 275 0006 8B43     		bic	r3, r1
 276 0008 1360     		str	r3, [r2]
2002:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 41


 277              		.loc 1 2002 0
 278 000a 044A     		ldr	r2, .L23+4
 279 000c 1368     		ldr	r3, [r2]
 280 000e 0139     		sub	r1, r1, #1
 281 0010 8B43     		bic	r3, r1
 282 0012 1360     		str	r3, [r2]
2003:.\Generated_Source\PSoC4/CyLib.c ****     }
 283              		.loc 1 2003 0
 284              		@ sp needed
 285 0014 7047     		bx	lr
 286              	.L24:
 287 0016 C046     		.align	2
 288              	.L23:
 289 0018 08000B40 		.word	1074462728
 290 001c 18000B40 		.word	1074462744
 291              		.cfi_endproc
 292              	.LFE13:
 293              		.size	CySysLvdDisable, .-CySysLvdDisable
 294              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 295              		.align	2
 296              		.global	CySysLvdGetInterruptSource
 297              		.code	16
 298              		.thumb_func
 299              		.type	CySysLvdGetInterruptSource, %function
 300              	CySysLvdGetInterruptSource:
 301              	.LFB14:
2004:.\Generated_Source\PSoC4/CyLib.c **** 
2005:.\Generated_Source\PSoC4/CyLib.c **** 
2006:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2007:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2008:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2009:.\Generated_Source\PSoC4/CyLib.c ****     *
2010:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2011:.\Generated_Source\PSoC4/CyLib.c ****     *
2012:.\Generated_Source\PSoC4/CyLib.c ****     * \return
2013:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2014:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2015:.\Generated_Source\PSoC4/CyLib.c ****     *
2016:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2018:.\Generated_Source\PSoC4/CyLib.c ****     {
 302              		.loc 1 2018 0
 303              		.cfi_startproc
2019:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 304              		.loc 1 2019 0
 305 0000 024B     		ldr	r3, .L26
 306 0002 1B68     		ldr	r3, [r3]
 307 0004 0220     		mov	r0, #2
 308 0006 1840     		and	r0, r3
2020:.\Generated_Source\PSoC4/CyLib.c ****     }
 309              		.loc 1 2020 0
 310              		@ sp needed
 311 0008 7047     		bx	lr
 312              	.L27:
 313 000a C046     		.align	2
 314              	.L26:
 315 000c 04000B40 		.word	1074462724
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 42


 316              		.cfi_endproc
 317              	.LFE14:
 318              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 319              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 320              		.align	2
 321              		.global	CySysLvdClearInterrupt
 322              		.code	16
 323              		.thumb_func
 324              		.type	CySysLvdClearInterrupt, %function
 325              	CySysLvdClearInterrupt:
 326              	.LFB15:
2021:.\Generated_Source\PSoC4/CyLib.c **** 
2022:.\Generated_Source\PSoC4/CyLib.c **** 
2023:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2024:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2025:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2026:.\Generated_Source\PSoC4/CyLib.c ****     *
2027:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2028:.\Generated_Source\PSoC4/CyLib.c ****     *
2029:.\Generated_Source\PSoC4/CyLib.c ****     * \return
2030:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2031:.\Generated_Source\PSoC4/CyLib.c ****     *
2032:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2033:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2034:.\Generated_Source\PSoC4/CyLib.c ****     {
 327              		.loc 1 2034 0
 328              		.cfi_startproc
2035:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 329              		.loc 1 2035 0
 330 0000 0222     		mov	r2, #2
 331 0002 014B     		ldr	r3, .L29
 332 0004 1A60     		str	r2, [r3]
2036:.\Generated_Source\PSoC4/CyLib.c ****     }
 333              		.loc 1 2036 0
 334              		@ sp needed
 335 0006 7047     		bx	lr
 336              	.L30:
 337              		.align	2
 338              	.L29:
 339 0008 04000B40 		.word	1074462724
 340              		.cfi_endproc
 341              	.LFE15:
 342              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 343              		.section	.text.CySysGetResetReason,"ax",%progbits
 344              		.align	2
 345              		.global	CySysGetResetReason
 346              		.code	16
 347              		.thumb_func
 348              		.type	CySysGetResetReason, %function
 349              	CySysGetResetReason:
 350              	.LFB16:
2037:.\Generated_Source\PSoC4/CyLib.c **** 
2038:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2039:.\Generated_Source\PSoC4/CyLib.c **** 
2040:.\Generated_Source\PSoC4/CyLib.c **** 
2041:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2042:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 43


2043:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2044:.\Generated_Source\PSoC4/CyLib.c **** *
2045:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2046:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2047:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2048:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2049:.\Generated_Source\PSoC4/CyLib.c **** *
2050:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2051:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2052:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2053:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2054:.\Generated_Source\PSoC4/CyLib.c **** *
2055:.\Generated_Source\PSoC4/CyLib.c **** * \return
2056:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2057:.\Generated_Source\PSoC4/CyLib.c **** *
2058:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2059:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2060:.\Generated_Source\PSoC4/CyLib.c **** {
 351              		.loc 1 2060 0
 352              		.cfi_startproc
 353              	.LVL15:
 354 0000 021C     		mov	r2, r0
2061:.\Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2062:.\Generated_Source\PSoC4/CyLib.c **** 
2063:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 355              		.loc 1 2063 0
 356 0002 1920     		mov	r0, #25
 357              	.LVL16:
 358 0004 0240     		and	r2, r0
 359              	.LVL17:
2064:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 360              		.loc 1 2064 0
 361 0006 0249     		ldr	r1, .L32
 362 0008 0B68     		ldr	r3, [r1]
 363 000a 1840     		and	r0, r3
 364              	.LVL18:
2065:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2066:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 365              		.loc 1 2066 0
 366 000c 0A60     		str	r2, [r1]
2067:.\Generated_Source\PSoC4/CyLib.c **** 
2068:.\Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2069:.\Generated_Source\PSoC4/CyLib.c **** }
 367              		.loc 1 2069 0
 368              		@ sp needed
 369 000e 7047     		bx	lr
 370              	.L33:
 371              		.align	2
 372              	.L32:
 373 0010 00030B40 		.word	1074463488
 374              		.cfi_endproc
 375              	.LFE16:
 376              		.size	CySysGetResetReason, .-CySysGetResetReason
 377              		.section	.text.CyDisableInts,"ax",%progbits
 378              		.align	2
 379              		.global	CyDisableInts
 380              		.code	16
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 44


 381              		.thumb_func
 382              		.type	CyDisableInts, %function
 383              	CyDisableInts:
 384              	.LFB17:
2070:.\Generated_Source\PSoC4/CyLib.c **** 
2071:.\Generated_Source\PSoC4/CyLib.c **** 
2072:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2073:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2074:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2075:.\Generated_Source\PSoC4/CyLib.c **** *
2076:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2077:.\Generated_Source\PSoC4/CyLib.c **** *
2078:.\Generated_Source\PSoC4/CyLib.c **** * \return
2079:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2080:.\Generated_Source\PSoC4/CyLib.c **** *
2081:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2082:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2083:.\Generated_Source\PSoC4/CyLib.c **** {
 385              		.loc 1 2083 0
 386              		.cfi_startproc
2084:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2085:.\Generated_Source\PSoC4/CyLib.c **** 
2086:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2087:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 387              		.loc 1 2087 0
 388 0000 024B     		ldr	r3, .L35
 389 0002 1868     		ldr	r0, [r3]
 390              	.LVL19:
2088:.\Generated_Source\PSoC4/CyLib.c **** 
2089:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2090:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 391              		.loc 1 2090 0
 392 0004 0122     		mov	r2, #1
 393 0006 5242     		neg	r2, r2
 394 0008 1A60     		str	r2, [r3]
2091:.\Generated_Source\PSoC4/CyLib.c **** 
2092:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
2093:.\Generated_Source\PSoC4/CyLib.c **** }
 395              		.loc 1 2093 0
 396              		@ sp needed
 397 000a 7047     		bx	lr
 398              	.L36:
 399              		.align	2
 400              	.L35:
 401 000c 80E100E0 		.word	-536813184
 402              		.cfi_endproc
 403              	.LFE17:
 404              		.size	CyDisableInts, .-CyDisableInts
 405              		.section	.text.CyEnableInts,"ax",%progbits
 406              		.align	2
 407              		.global	CyEnableInts
 408              		.code	16
 409              		.thumb_func
 410              		.type	CyEnableInts, %function
 411              	CyEnableInts:
 412              	.LFB18:
2094:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 45


2095:.\Generated_Source\PSoC4/CyLib.c **** 
2096:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2097:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2098:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2099:.\Generated_Source\PSoC4/CyLib.c **** *
2100:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2101:.\Generated_Source\PSoC4/CyLib.c **** *
2102:.\Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2103:.\Generated_Source\PSoC4/CyLib.c **** *
2104:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2105:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2106:.\Generated_Source\PSoC4/CyLib.c **** {
 413              		.loc 1 2106 0
 414              		.cfi_startproc
 415              	.LVL20:
2107:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 416              		.loc 1 2107 0
 417 0000 014B     		ldr	r3, .L38
 418 0002 1860     		str	r0, [r3]
2108:.\Generated_Source\PSoC4/CyLib.c **** }
 419              		.loc 1 2108 0
 420              		@ sp needed
 421 0004 7047     		bx	lr
 422              	.L39:
 423 0006 C046     		.align	2
 424              	.L38:
 425 0008 00E100E0 		.word	-536813312
 426              		.cfi_endproc
 427              	.LFE18:
 428              		.size	CyEnableInts, .-CyEnableInts
 429              		.section	.text.CyIntEnable,"ax",%progbits
 430              		.align	2
 431              		.global	CyIntEnable
 432              		.code	16
 433              		.thumb_func
 434              		.type	CyIntEnable, %function
 435              	CyIntEnable:
 436              	.LFB25:
2109:.\Generated_Source\PSoC4/CyLib.c **** 
2110:.\Generated_Source\PSoC4/CyLib.c **** 
2111:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2112:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2113:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2114:.\Generated_Source\PSoC4/CyLib.c **** *
2115:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2116:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2117:.\Generated_Source\PSoC4/CyLib.c **** *
2118:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2119:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2120:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2121:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2122:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2123:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2124:.\Generated_Source\PSoC4/CyLib.c **** *
2125:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2126:.\Generated_Source\PSoC4/CyLib.c **** *
2127:.\Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 46


2128:.\Generated_Source\PSoC4/CyLib.c **** *
2129:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2130:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2131:.\Generated_Source\PSoC4/CyLib.c **** {
2132:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2133:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2134:.\Generated_Source\PSoC4/CyLib.c **** 
2135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2136:.\Generated_Source\PSoC4/CyLib.c **** 
2137:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2138:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2139:.\Generated_Source\PSoC4/CyLib.c **** 
2140:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2141:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2142:.\Generated_Source\PSoC4/CyLib.c **** 
2143:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2144:.\Generated_Source\PSoC4/CyLib.c **** }
2145:.\Generated_Source\PSoC4/CyLib.c **** 
2146:.\Generated_Source\PSoC4/CyLib.c **** 
2147:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2148:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2149:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2150:.\Generated_Source\PSoC4/CyLib.c **** *
2151:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2152:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2153:.\Generated_Source\PSoC4/CyLib.c **** *
2154:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2155:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2156:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2157:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2158:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2159:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2160:.\Generated_Source\PSoC4/CyLib.c **** *
2161:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2162:.\Generated_Source\PSoC4/CyLib.c **** *
2163:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2164:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2165:.\Generated_Source\PSoC4/CyLib.c **** {
2166:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2167:.\Generated_Source\PSoC4/CyLib.c **** 
2168:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2169:.\Generated_Source\PSoC4/CyLib.c **** 
2170:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2171:.\Generated_Source\PSoC4/CyLib.c **** }
2172:.\Generated_Source\PSoC4/CyLib.c **** 
2173:.\Generated_Source\PSoC4/CyLib.c **** 
2174:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2176:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2177:.\Generated_Source\PSoC4/CyLib.c **** *
2178:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2179:.\Generated_Source\PSoC4/CyLib.c **** *
2180:.\Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2181:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2182:.\Generated_Source\PSoC4/CyLib.c **** *
2183:.\Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2184:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 47


2185:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2186:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2187:.\Generated_Source\PSoC4/CyLib.c **** {
2188:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2189:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2190:.\Generated_Source\PSoC4/CyLib.c **** 
2191:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2192:.\Generated_Source\PSoC4/CyLib.c **** 
2193:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2194:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2195:.\Generated_Source\PSoC4/CyLib.c **** 
2196:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2197:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2198:.\Generated_Source\PSoC4/CyLib.c **** 
2199:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2200:.\Generated_Source\PSoC4/CyLib.c **** }
2201:.\Generated_Source\PSoC4/CyLib.c **** 
2202:.\Generated_Source\PSoC4/CyLib.c **** 
2203:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2204:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2205:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2206:.\Generated_Source\PSoC4/CyLib.c **** *
2207:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2208:.\Generated_Source\PSoC4/CyLib.c **** *
2209:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2210:.\Generated_Source\PSoC4/CyLib.c **** *
2211:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2212:.\Generated_Source\PSoC4/CyLib.c **** *
2213:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2214:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2215:.\Generated_Source\PSoC4/CyLib.c **** {
2216:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2217:.\Generated_Source\PSoC4/CyLib.c **** 
2218:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2219:.\Generated_Source\PSoC4/CyLib.c **** 
2220:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2221:.\Generated_Source\PSoC4/CyLib.c **** }
2222:.\Generated_Source\PSoC4/CyLib.c **** 
2223:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2224:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2225:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2226:.\Generated_Source\PSoC4/CyLib.c **** *
2227:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2228:.\Generated_Source\PSoC4/CyLib.c **** *
2229:.\Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2230:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2231:.\Generated_Source\PSoC4/CyLib.c **** *
2232:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2233:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2234:.\Generated_Source\PSoC4/CyLib.c **** {
2235:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2236:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2237:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2238:.\Generated_Source\PSoC4/CyLib.c **** 
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2240:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2241:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 48


2242:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2243:.\Generated_Source\PSoC4/CyLib.c **** 
2244:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2245:.\Generated_Source\PSoC4/CyLib.c **** 
2246:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2247:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2248:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2249:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2250:.\Generated_Source\PSoC4/CyLib.c **** 
2251:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2252:.\Generated_Source\PSoC4/CyLib.c **** }
2253:.\Generated_Source\PSoC4/CyLib.c **** 
2254:.\Generated_Source\PSoC4/CyLib.c **** 
2255:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2256:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2257:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2258:.\Generated_Source\PSoC4/CyLib.c **** *
2259:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2260:.\Generated_Source\PSoC4/CyLib.c **** *
2261:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2262:.\Generated_Source\PSoC4/CyLib.c **** *
2263:.\Generated_Source\PSoC4/CyLib.c **** * \return
2264:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2265:.\Generated_Source\PSoC4/CyLib.c **** *
2266:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2268:.\Generated_Source\PSoC4/CyLib.c **** {
2269:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2270:.\Generated_Source\PSoC4/CyLib.c **** 
2271:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2272:.\Generated_Source\PSoC4/CyLib.c **** 
2273:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2274:.\Generated_Source\PSoC4/CyLib.c **** 
2275:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2276:.\Generated_Source\PSoC4/CyLib.c **** }
2277:.\Generated_Source\PSoC4/CyLib.c **** 
2278:.\Generated_Source\PSoC4/CyLib.c **** 
2279:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2280:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2281:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2282:.\Generated_Source\PSoC4/CyLib.c **** *
2283:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2284:.\Generated_Source\PSoC4/CyLib.c **** *
2285:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2286:.\Generated_Source\PSoC4/CyLib.c **** *
2287:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2288:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2289:.\Generated_Source\PSoC4/CyLib.c **** {
 437              		.loc 1 2289 0
 438              		.cfi_startproc
 439              	.LVL21:
2290:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 440              		.loc 1 2290 0
 441 0000 1F23     		mov	r3, #31
 442 0002 1840     		and	r0, r3
 443              	.LVL22:
 444 0004 1E3B     		sub	r3, r3, #30
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 49


 445 0006 8340     		lsl	r3, r3, r0
 446 0008 181C     		mov	r0, r3
 447 000a 014B     		ldr	r3, .L41
 448 000c 1860     		str	r0, [r3]
2291:.\Generated_Source\PSoC4/CyLib.c **** }
 449              		.loc 1 2291 0
 450              		@ sp needed
 451 000e 7047     		bx	lr
 452              	.L42:
 453              		.align	2
 454              	.L41:
 455 0010 00E100E0 		.word	-536813312
 456              		.cfi_endproc
 457              	.LFE25:
 458              		.size	CyIntEnable, .-CyIntEnable
 459              		.section	.text.CyIntGetState,"ax",%progbits
 460              		.align	2
 461              		.global	CyIntGetState
 462              		.code	16
 463              		.thumb_func
 464              		.type	CyIntGetState, %function
 465              	CyIntGetState:
 466              	.LFB26:
2292:.\Generated_Source\PSoC4/CyLib.c **** 
2293:.\Generated_Source\PSoC4/CyLib.c **** 
2294:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2295:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2296:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2297:.\Generated_Source\PSoC4/CyLib.c **** *
2298:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2299:.\Generated_Source\PSoC4/CyLib.c **** *
2300:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2301:.\Generated_Source\PSoC4/CyLib.c **** *
2302:.\Generated_Source\PSoC4/CyLib.c **** * \return
2303:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2304:.\Generated_Source\PSoC4/CyLib.c **** *
2305:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2306:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2307:.\Generated_Source\PSoC4/CyLib.c **** {
 467              		.loc 1 2307 0
 468              		.cfi_startproc
 469              	.LVL23:
2308:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2309:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 470              		.loc 1 2309 0
 471 0000 044B     		ldr	r3, .L44
 472 0002 1B68     		ldr	r3, [r3]
 473 0004 1F22     		mov	r2, #31
 474 0006 1040     		and	r0, r2
 475              	.LVL24:
 476 0008 C340     		lsr	r3, r3, r0
 477 000a 181C     		mov	r0, r3
 478 000c 0123     		mov	r3, #1
 479 000e 1840     		and	r0, r3
2310:.\Generated_Source\PSoC4/CyLib.c **** }
 480              		.loc 1 2310 0
 481              		@ sp needed
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 50


 482 0010 7047     		bx	lr
 483              	.L45:
 484 0012 C046     		.align	2
 485              	.L44:
 486 0014 00E100E0 		.word	-536813312
 487              		.cfi_endproc
 488              	.LFE26:
 489              		.size	CyIntGetState, .-CyIntGetState
 490              		.section	.text.CyIntDisable,"ax",%progbits
 491              		.align	2
 492              		.global	CyIntDisable
 493              		.code	16
 494              		.thumb_func
 495              		.type	CyIntDisable, %function
 496              	CyIntDisable:
 497              	.LFB27:
2311:.\Generated_Source\PSoC4/CyLib.c **** 
2312:.\Generated_Source\PSoC4/CyLib.c **** 
2313:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2314:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2315:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2316:.\Generated_Source\PSoC4/CyLib.c **** *
2317:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2318:.\Generated_Source\PSoC4/CyLib.c **** *
2319:.\Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2320:.\Generated_Source\PSoC4/CyLib.c **** *
2321:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2322:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2323:.\Generated_Source\PSoC4/CyLib.c **** {
 498              		.loc 1 2323 0
 499              		.cfi_startproc
 500              	.LVL25:
2324:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 501              		.loc 1 2324 0
 502 0000 1F23     		mov	r3, #31
 503 0002 1840     		and	r0, r3
 504              	.LVL26:
 505 0004 1E3B     		sub	r3, r3, #30
 506 0006 8340     		lsl	r3, r3, r0
 507 0008 181C     		mov	r0, r3
 508 000a 014B     		ldr	r3, .L47
 509 000c 1860     		str	r0, [r3]
2325:.\Generated_Source\PSoC4/CyLib.c **** }
 510              		.loc 1 2325 0
 511              		@ sp needed
 512 000e 7047     		bx	lr
 513              	.L48:
 514              		.align	2
 515              	.L47:
 516 0010 80E100E0 		.word	-536813184
 517              		.cfi_endproc
 518              	.LFE27:
 519              		.size	CyIntDisable, .-CyIntDisable
 520              		.section	.text.CyIntSetPending,"ax",%progbits
 521              		.align	2
 522              		.global	CyIntSetPending
 523              		.code	16
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 51


 524              		.thumb_func
 525              		.type	CyIntSetPending, %function
 526              	CyIntSetPending:
 527              	.LFB28:
2326:.\Generated_Source\PSoC4/CyLib.c **** 
2327:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2328:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2329:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2330:.\Generated_Source\PSoC4/CyLib.c **** *
2331:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2332:.\Generated_Source\PSoC4/CyLib.c **** *
2333:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2334:.\Generated_Source\PSoC4/CyLib.c **** *
2335:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2336:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2337:.\Generated_Source\PSoC4/CyLib.c **** {
 528              		.loc 1 2337 0
 529              		.cfi_startproc
 530              	.LVL27:
2338:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 531              		.loc 1 2338 0
 532 0000 1F23     		mov	r3, #31
 533 0002 1840     		and	r0, r3
 534              	.LVL28:
 535 0004 1E3B     		sub	r3, r3, #30
 536 0006 8340     		lsl	r3, r3, r0
 537 0008 181C     		mov	r0, r3
 538 000a 014B     		ldr	r3, .L50
 539 000c 1860     		str	r0, [r3]
2339:.\Generated_Source\PSoC4/CyLib.c **** }
 540              		.loc 1 2339 0
 541              		@ sp needed
 542 000e 7047     		bx	lr
 543              	.L51:
 544              		.align	2
 545              	.L50:
 546 0010 00E200E0 		.word	-536813056
 547              		.cfi_endproc
 548              	.LFE28:
 549              		.size	CyIntSetPending, .-CyIntSetPending
 550              		.section	.text.CyIntClearPending,"ax",%progbits
 551              		.align	2
 552              		.global	CyIntClearPending
 553              		.code	16
 554              		.thumb_func
 555              		.type	CyIntClearPending, %function
 556              	CyIntClearPending:
 557              	.LFB29:
2340:.\Generated_Source\PSoC4/CyLib.c **** 
2341:.\Generated_Source\PSoC4/CyLib.c **** 
2342:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2343:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2344:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2345:.\Generated_Source\PSoC4/CyLib.c **** *
2346:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2347:.\Generated_Source\PSoC4/CyLib.c **** *
2348:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 52


2349:.\Generated_Source\PSoC4/CyLib.c **** *
2350:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2351:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2352:.\Generated_Source\PSoC4/CyLib.c **** {
 558              		.loc 1 2352 0
 559              		.cfi_startproc
 560              	.LVL29:
2353:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 561              		.loc 1 2353 0
 562 0000 1F23     		mov	r3, #31
 563 0002 1840     		and	r0, r3
 564              	.LVL30:
 565 0004 1E3B     		sub	r3, r3, #30
 566 0006 8340     		lsl	r3, r3, r0
 567 0008 181C     		mov	r0, r3
 568 000a 014B     		ldr	r3, .L53
 569 000c 1860     		str	r0, [r3]
2354:.\Generated_Source\PSoC4/CyLib.c **** }
 570              		.loc 1 2354 0
 571              		@ sp needed
 572 000e 7047     		bx	lr
 573              	.L54:
 574              		.align	2
 575              	.L53:
 576 0010 80E200E0 		.word	-536812928
 577              		.cfi_endproc
 578              	.LFE29:
 579              		.size	CyIntClearPending, .-CyIntClearPending
 580              		.section	.text.CyHalt,"ax",%progbits
 581              		.align	2
 582              		.global	CyHalt
 583              		.code	16
 584              		.thumb_func
 585              		.type	CyHalt, %function
 586              	CyHalt:
 587              	.LFB30:
2355:.\Generated_Source\PSoC4/CyLib.c **** 
2356:.\Generated_Source\PSoC4/CyLib.c **** 
2357:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2358:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2359:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2360:.\Generated_Source\PSoC4/CyLib.c **** *
2361:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2362:.\Generated_Source\PSoC4/CyLib.c **** *
2363:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2364:.\Generated_Source\PSoC4/CyLib.c **** *
2365:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2366:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2367:.\Generated_Source\PSoC4/CyLib.c **** {
 588              		.loc 1 2367 0
 589              		.cfi_startproc
 590              	.LVL31:
2368:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2369:.\Generated_Source\PSoC4/CyLib.c ****     {
2370:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2371:.\Generated_Source\PSoC4/CyLib.c ****     }
2372:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 53


2373:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2374:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2375:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2376:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 591              		.loc 1 2376 0
 592              	@ 2376 ".\Generated_Source\PSoC4\CyLib.c" 1
 593 0000 01BE     		    bkpt    1
 594              	@ 0 "" 2
2377:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2378:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2379:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2380:.\Generated_Source\PSoC4/CyLib.c **** }
 595              		.loc 1 2380 0
 596              		.code	16
 597              		@ sp needed
 598 0002 7047     		bx	lr
 599              		.cfi_endproc
 600              	.LFE30:
 601              		.size	CyHalt, .-CyHalt
 602              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 603              		.align	2
 604              		.global	CySysClkWriteEcoDiv
 605              		.code	16
 606              		.thumb_func
 607              		.type	CySysClkWriteEcoDiv, %function
 608              	CySysClkWriteEcoDiv:
 609              	.LFB11:
1102:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 610              		.loc 1 1102 0
 611              		.cfi_startproc
 612              	.LVL32:
 613 0000 10B5     		push	{r4, lr}
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 4, -8
 616              		.cfi_offset 14, -4
 617 0002 041C     		mov	r4, r0
1105:.\Generated_Source\PSoC4/CyLib.c ****             {
 618              		.loc 1 1105 0
 619 0004 0A4B     		ldr	r3, .L59
 620 0006 1B68     		ldr	r3, [r3]
 621 0008 0722     		mov	r2, #7
 622 000a 1340     		and	r3, r2
 623 000c 022B     		cmp	r3, #2
 624 000e 0BD0     		beq	.L57
1107:.\Generated_Source\PSoC4/CyLib.c **** 
 625              		.loc 1 1107 0
 626 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 627              	.LVL33:
1109:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 628              		.loc 1 1109 0
 629 0014 0321     		mov	r1, #3
 630 0016 0C40     		and	r4, r1
 631              	.LVL34:
1110:.\Generated_Source\PSoC4/CyLib.c **** 
 632              		.loc 1 1110 0
 633 0018 064A     		ldr	r2, .L59+4
 634 001a 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 54


 635 001c 8B43     		bic	r3, r1
1109:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 636              		.loc 1 1109 0
 637 001e 2343     		orr	r3, r4
 638 0020 1360     		str	r3, [r2]
1112:.\Generated_Source\PSoC4/CyLib.c ****             }
 639              		.loc 1 1112 0
 640 0022 FFF7FEFF 		bl	CyExitCriticalSection
 641              	.LVL35:
 642 0026 02E0     		b	.L56
 643              	.LVL36:
 644              	.L57:
1117:.\Generated_Source\PSoC4/CyLib.c ****             }
 645              		.loc 1 1117 0 discriminator 1
 646 0028 0020     		mov	r0, #0
 647              	.LVL37:
 648 002a FFF7FEFF 		bl	CyHalt
 649              	.LVL38:
 650              	.L56:
1119:.\Generated_Source\PSoC4/CyLib.c **** 
 651              		.loc 1 1119 0
 652              		@ sp needed
 653 002e 10BD     		pop	{r4, pc}
 654              	.L60:
 655              		.align	2
 656              	.L59:
 657 0030 00010B40 		.word	1074462976
 658 0034 64F02E40 		.word	1076818020
 659              		.cfi_endproc
 660              	.LFE11:
 661              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 662              		.section	.text.CyIntSetSysVector,"ax",%progbits
 663              		.align	2
 664              		.global	CyIntSetSysVector
 665              		.code	16
 666              		.thumb_func
 667              		.type	CyIntSetSysVector, %function
 668              	CyIntSetSysVector:
 669              	.LFB19:
2131:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 670              		.loc 1 2131 0
 671              		.cfi_startproc
 672              	.LVL39:
 673 0000 38B5     		push	{r3, r4, r5, lr}
 674              		.cfi_def_cfa_offset 16
 675              		.cfi_offset 3, -16
 676              		.cfi_offset 4, -12
 677              		.cfi_offset 5, -8
 678              		.cfi_offset 14, -4
 679 0002 041C     		mov	r4, r0
 680 0004 0D1C     		mov	r5, r1
 681              	.LVL40:
2135:.\Generated_Source\PSoC4/CyLib.c **** 
 682              		.loc 1 2135 0
 683 0006 0F28     		cmp	r0, #15
 684 0008 02D9     		bls	.L62
2135:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 55


 685              		.loc 1 2135 0 is_stmt 0 discriminator 1
 686 000a 0020     		mov	r0, #0
 687              	.LVL41:
 688 000c FFF7FEFF 		bl	CyHalt
 689              	.LVL42:
 690              	.L62:
2138:.\Generated_Source\PSoC4/CyLib.c **** 
 691              		.loc 1 2138 0 is_stmt 1
 692 0010 A400     		lsl	r4, r4, #2
 693 0012 8023     		mov	r3, #128
 694 0014 9B05     		lsl	r3, r3, #22
 695 0016 9C46     		mov	ip, r3
 696 0018 6444     		add	r4, r4, ip
 697 001a 2068     		ldr	r0, [r4]
 698              	.LVL43:
2141:.\Generated_Source\PSoC4/CyLib.c **** 
 699              		.loc 1 2141 0
 700 001c 2560     		str	r5, [r4]
2144:.\Generated_Source\PSoC4/CyLib.c **** 
 701              		.loc 1 2144 0
 702              		@ sp needed
 703              	.LVL44:
 704 001e 38BD     		pop	{r3, r4, r5, pc}
 705              		.cfi_endproc
 706              	.LFE19:
 707              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 708              		.section	.text.CyIntGetSysVector,"ax",%progbits
 709              		.align	2
 710              		.global	CyIntGetSysVector
 711              		.code	16
 712              		.thumb_func
 713              		.type	CyIntGetSysVector, %function
 714              	CyIntGetSysVector:
 715              	.LFB20:
2165:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 716              		.loc 1 2165 0
 717              		.cfi_startproc
 718              	.LVL45:
 719 0000 10B5     		push	{r4, lr}
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 4, -8
 722              		.cfi_offset 14, -4
 723 0002 041E     		sub	r4, r0, #0
 724              	.LVL46:
2168:.\Generated_Source\PSoC4/CyLib.c **** 
 725              		.loc 1 2168 0
 726 0004 0F2C     		cmp	r4, #15
 727 0006 02D9     		bls	.L64
2168:.\Generated_Source\PSoC4/CyLib.c **** 
 728              		.loc 1 2168 0 is_stmt 0 discriminator 1
 729 0008 0020     		mov	r0, #0
 730              	.LVL47:
 731 000a FFF7FEFF 		bl	CyHalt
 732              	.LVL48:
 733              	.L64:
2170:.\Generated_Source\PSoC4/CyLib.c **** }
 734              		.loc 1 2170 0 is_stmt 1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 56


 735 000e A400     		lsl	r4, r4, #2
 736 0010 8023     		mov	r3, #128
 737 0012 9B05     		lsl	r3, r3, #22
 738 0014 9C46     		mov	ip, r3
 739 0016 6444     		add	r4, r4, ip
 740 0018 2068     		ldr	r0, [r4]
2171:.\Generated_Source\PSoC4/CyLib.c **** 
 741              		.loc 1 2171 0
 742              		@ sp needed
 743 001a 10BD     		pop	{r4, pc}
 744              		.cfi_endproc
 745              	.LFE20:
 746              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 747              		.section	.text.CyIntSetVector,"ax",%progbits
 748              		.align	2
 749              		.global	CyIntSetVector
 750              		.code	16
 751              		.thumb_func
 752              		.type	CyIntSetVector, %function
 753              	CyIntSetVector:
 754              	.LFB21:
2187:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 755              		.loc 1 2187 0
 756              		.cfi_startproc
 757              	.LVL49:
 758 0000 38B5     		push	{r3, r4, r5, lr}
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 3, -16
 761              		.cfi_offset 4, -12
 762              		.cfi_offset 5, -8
 763              		.cfi_offset 14, -4
 764 0002 041C     		mov	r4, r0
 765 0004 0D1C     		mov	r5, r1
 766              	.LVL50:
2191:.\Generated_Source\PSoC4/CyLib.c **** 
 767              		.loc 1 2191 0
 768 0006 1F28     		cmp	r0, #31
 769 0008 02D9     		bls	.L66
2191:.\Generated_Source\PSoC4/CyLib.c **** 
 770              		.loc 1 2191 0 is_stmt 0 discriminator 1
 771 000a 0020     		mov	r0, #0
 772              	.LVL51:
 773 000c FFF7FEFF 		bl	CyHalt
 774              	.LVL52:
 775              	.L66:
2194:.\Generated_Source\PSoC4/CyLib.c **** 
 776              		.loc 1 2194 0 is_stmt 1
 777 0010 A400     		lsl	r4, r4, #2
 778 0012 034B     		ldr	r3, .L67
 779 0014 9C46     		mov	ip, r3
 780 0016 6444     		add	r4, r4, ip
 781 0018 2068     		ldr	r0, [r4]
 782              	.LVL53:
2197:.\Generated_Source\PSoC4/CyLib.c **** 
 783              		.loc 1 2197 0
 784 001a 2560     		str	r5, [r4]
2200:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 57


 785              		.loc 1 2200 0
 786              		@ sp needed
 787              	.LVL54:
 788 001c 38BD     		pop	{r3, r4, r5, pc}
 789              	.L68:
 790 001e C046     		.align	2
 791              	.L67:
 792 0020 40000020 		.word	536870976
 793              		.cfi_endproc
 794              	.LFE21:
 795              		.size	CyIntSetVector, .-CyIntSetVector
 796              		.section	.text.CyIntGetVector,"ax",%progbits
 797              		.align	2
 798              		.global	CyIntGetVector
 799              		.code	16
 800              		.thumb_func
 801              		.type	CyIntGetVector, %function
 802              	CyIntGetVector:
 803              	.LFB22:
2215:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 804              		.loc 1 2215 0
 805              		.cfi_startproc
 806              	.LVL55:
 807 0000 10B5     		push	{r4, lr}
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 4, -8
 810              		.cfi_offset 14, -4
 811 0002 041E     		sub	r4, r0, #0
 812              	.LVL56:
2218:.\Generated_Source\PSoC4/CyLib.c **** 
 813              		.loc 1 2218 0
 814 0004 1F2C     		cmp	r4, #31
 815 0006 02D9     		bls	.L70
2218:.\Generated_Source\PSoC4/CyLib.c **** 
 816              		.loc 1 2218 0 is_stmt 0 discriminator 1
 817 0008 0020     		mov	r0, #0
 818              	.LVL57:
 819 000a FFF7FEFF 		bl	CyHalt
 820              	.LVL58:
 821              	.L70:
2220:.\Generated_Source\PSoC4/CyLib.c **** }
 822              		.loc 1 2220 0 is_stmt 1
 823 000e A400     		lsl	r4, r4, #2
 824 0010 024B     		ldr	r3, .L71
 825 0012 9C46     		mov	ip, r3
 826 0014 6444     		add	r4, r4, ip
 827 0016 2068     		ldr	r0, [r4]
2221:.\Generated_Source\PSoC4/CyLib.c **** 
 828              		.loc 1 2221 0
 829              		@ sp needed
 830 0018 10BD     		pop	{r4, pc}
 831              	.L72:
 832 001a C046     		.align	2
 833              	.L71:
 834 001c 40000020 		.word	536870976
 835              		.cfi_endproc
 836              	.LFE22:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 58


 837              		.size	CyIntGetVector, .-CyIntGetVector
 838              		.section	.text.CyIntSetPriority,"ax",%progbits
 839              		.align	2
 840              		.global	CyIntSetPriority
 841              		.code	16
 842              		.thumb_func
 843              		.type	CyIntSetPriority, %function
 844              	CyIntSetPriority:
 845              	.LFB23:
2234:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 846              		.loc 1 2234 0
 847              		.cfi_startproc
 848              	.LVL59:
 849 0000 70B5     		push	{r4, r5, r6, lr}
 850              		.cfi_def_cfa_offset 16
 851              		.cfi_offset 4, -16
 852              		.cfi_offset 5, -12
 853              		.cfi_offset 6, -8
 854              		.cfi_offset 14, -4
 855 0002 041C     		mov	r4, r0
 856 0004 0E1E     		sub	r6, r1, #0
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 857              		.loc 1 2239 0
 858 0006 032E     		cmp	r6, #3
 859 0008 02D9     		bls	.L74
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 860              		.loc 1 2239 0 is_stmt 0 discriminator 1
 861 000a 0020     		mov	r0, #0
 862              	.LVL60:
 863 000c FFF7FEFF 		bl	CyHalt
 864              	.LVL61:
 865              	.L74:
2240:.\Generated_Source\PSoC4/CyLib.c **** 
 866              		.loc 1 2240 0 is_stmt 1
 867 0010 1F2C     		cmp	r4, #31
 868 0012 02D9     		bls	.L75
2240:.\Generated_Source\PSoC4/CyLib.c **** 
 869              		.loc 1 2240 0 is_stmt 0 discriminator 1
 870 0014 0020     		mov	r0, #0
 871 0016 FFF7FEFF 		bl	CyHalt
 872              	.LVL62:
 873              	.L75:
2242:.\Generated_Source\PSoC4/CyLib.c **** 
 874              		.loc 1 2242 0 is_stmt 1
 875 001a 0325     		mov	r5, #3
 876 001c 2540     		and	r5, r4
 877 001e ED00     		lsl	r5, r5, #3
 878 0020 0635     		add	r5, r5, #6
 879              	.LVL63:
2244:.\Generated_Source\PSoC4/CyLib.c **** 
 880              		.loc 1 2244 0
 881 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 882              	.LVL64:
2246:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 883              		.loc 1 2246 0
 884 0026 A408     		lsr	r4, r4, #2
 885 0028 A400     		lsl	r4, r4, #2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 59


 886 002a 074B     		ldr	r3, .L76
 887 002c 9C46     		mov	ip, r3
 888 002e 6444     		add	r4, r4, ip
 889 0030 2368     		ldr	r3, [r4]
 890              	.LVL65:
2247:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 891              		.loc 1 2247 0
 892 0032 0322     		mov	r2, #3
 893 0034 AA40     		lsl	r2, r2, r5
 894 0036 9343     		bic	r3, r2
 895              	.LVL66:
2248:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 896              		.loc 1 2248 0
 897 0038 AE40     		lsl	r6, r6, r5
 898 003a 351C     		mov	r5, r6
 899              	.LVL67:
 900 003c 1D43     		orr	r5, r3
 901              	.LVL68:
2249:.\Generated_Source\PSoC4/CyLib.c **** 
 902              		.loc 1 2249 0
 903 003e 2560     		str	r5, [r4]
2251:.\Generated_Source\PSoC4/CyLib.c **** }
 904              		.loc 1 2251 0
 905 0040 FFF7FEFF 		bl	CyExitCriticalSection
 906              	.LVL69:
2252:.\Generated_Source\PSoC4/CyLib.c **** 
 907              		.loc 1 2252 0
 908              		@ sp needed
 909              	.LVL70:
 910 0044 70BD     		pop	{r4, r5, r6, pc}
 911              	.L77:
 912 0046 C046     		.align	2
 913              	.L76:
 914 0048 00E400E0 		.word	-536812544
 915              		.cfi_endproc
 916              	.LFE23:
 917              		.size	CyIntSetPriority, .-CyIntSetPriority
 918              		.section	.text.CyIntGetPriority,"ax",%progbits
 919              		.align	2
 920              		.global	CyIntGetPriority
 921              		.code	16
 922              		.thumb_func
 923              		.type	CyIntGetPriority, %function
 924              	CyIntGetPriority:
 925              	.LFB24:
2268:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 926              		.loc 1 2268 0
 927              		.cfi_startproc
 928              	.LVL71:
 929 0000 10B5     		push	{r4, lr}
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 4, -8
 932              		.cfi_offset 14, -4
 933 0002 041E     		sub	r4, r0, #0
2271:.\Generated_Source\PSoC4/CyLib.c **** 
 934              		.loc 1 2271 0
 935 0004 1F2C     		cmp	r4, #31
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 60


 936 0006 02D9     		bls	.L79
2271:.\Generated_Source\PSoC4/CyLib.c **** 
 937              		.loc 1 2271 0 is_stmt 0 discriminator 1
 938 0008 0020     		mov	r0, #0
 939              	.LVL72:
 940 000a FFF7FEFF 		bl	CyHalt
 941              	.LVL73:
 942              	.L79:
2273:.\Generated_Source\PSoC4/CyLib.c **** 
 943              		.loc 1 2273 0 is_stmt 1
 944 000e A308     		lsr	r3, r4, #2
 945 0010 9B00     		lsl	r3, r3, #2
 946 0012 054A     		ldr	r2, .L80
 947 0014 9446     		mov	ip, r2
 948 0016 6344     		add	r3, r3, ip
 949 0018 1868     		ldr	r0, [r3]
 950 001a 0323     		mov	r3, #3
 951 001c 1C40     		and	r4, r3
 952 001e E400     		lsl	r4, r4, #3
 953 0020 0634     		add	r4, r4, #6
 954 0022 E040     		lsr	r0, r0, r4
 955              	.LVL74:
2275:.\Generated_Source\PSoC4/CyLib.c **** }
 956              		.loc 1 2275 0
 957 0024 1840     		and	r0, r3
 958              	.LVL75:
2276:.\Generated_Source\PSoC4/CyLib.c **** 
 959              		.loc 1 2276 0
 960              		@ sp needed
 961 0026 10BD     		pop	{r4, pc}
 962              	.L81:
 963              		.align	2
 964              	.L80:
 965 0028 00E400E0 		.word	-536812544
 966              		.cfi_endproc
 967              	.LFE24:
 968              		.size	CyIntGetPriority, .-CyIntGetPriority
 969              		.section	.text.CySoftwareReset,"ax",%progbits
 970              		.align	2
 971              		.global	CySoftwareReset
 972              		.code	16
 973              		.thumb_func
 974              		.type	CySoftwareReset, %function
 975              	CySoftwareReset:
 976              	.LFB31:
2381:.\Generated_Source\PSoC4/CyLib.c **** 
2382:.\Generated_Source\PSoC4/CyLib.c **** 
2383:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2384:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2385:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2386:.\Generated_Source\PSoC4/CyLib.c **** *
2387:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2388:.\Generated_Source\PSoC4/CyLib.c **** *
2389:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2390:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2391:.\Generated_Source\PSoC4/CyLib.c **** {
 977              		.loc 1 2391 0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 61


 978              		.cfi_startproc
2392:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2393:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2394:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2395:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2396:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 979              		.loc 1 2396 0
 980 0000 034A     		ldr	r2, .L83
 981 0002 1368     		ldr	r3, [r2]
 982 0004 1B04     		lsl	r3, r3, #16
 983 0006 1B0C     		lsr	r3, r3, #16
2397:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 984              		.loc 1 2397 0
 985 0008 0249     		ldr	r1, .L83+4
 986 000a 0B43     		orr	r3, r1
2396:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 987              		.loc 1 2396 0
 988 000c 1360     		str	r3, [r2]
2398:.\Generated_Source\PSoC4/CyLib.c **** }
 989              		.loc 1 2398 0
 990              		@ sp needed
 991 000e 7047     		bx	lr
 992              	.L84:
 993              		.align	2
 994              	.L83:
 995 0010 0CED00E0 		.word	-536810228
 996 0014 0400FA05 		.word	100270084
 997              		.cfi_endproc
 998              	.LFE31:
 999              		.size	CySoftwareReset, .-CySoftwareReset
 1000              		.section	.text.CyDelay,"ax",%progbits
 1001              		.align	2
 1002              		.global	CyDelay
 1003              		.code	16
 1004              		.thumb_func
 1005              		.type	CyDelay, %function
 1006              	CyDelay:
 1007              	.LFB32:
2399:.\Generated_Source\PSoC4/CyLib.c **** 
2400:.\Generated_Source\PSoC4/CyLib.c **** 
2401:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2403:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2404:.\Generated_Source\PSoC4/CyLib.c **** *
2405:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2406:.\Generated_Source\PSoC4/CyLib.c **** *
2407:.\Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2408:.\Generated_Source\PSoC4/CyLib.c **** *
2409:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2411:.\Generated_Source\PSoC4/CyLib.c **** {
 1008              		.loc 1 2411 0
 1009              		.cfi_startproc
 1010              	.LVL76:
 1011 0000 10B5     		push	{r4, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 4, -8
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 62


 1014              		.cfi_offset 14, -4
 1015 0002 041C     		mov	r4, r0
2412:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1016              		.loc 1 2412 0
 1017 0004 06E0     		b	.L86
 1018              	.LVL77:
 1019              	.L87:
2413:.\Generated_Source\PSoC4/CyLib.c ****     {
2414:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2415:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2416:.\Generated_Source\PSoC4/CyLib.c ****          */
2417:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1020              		.loc 1 2417 0
 1021 0006 084B     		ldr	r3, .L88
 1022 0008 1868     		ldr	r0, [r3]
 1023 000a FFF7FEFF 		bl	CyDelayCycles
 1024              	.LVL78:
2418:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1025              		.loc 1 2418 0
 1026 000e 074B     		ldr	r3, .L88+4
 1027 0010 9C46     		mov	ip, r3
 1028 0012 6444     		add	r4, r4, ip
 1029              	.LVL79:
 1030              	.L86:
2412:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1031              		.loc 1 2412 0
 1032 0014 8023     		mov	r3, #128
 1033 0016 1B02     		lsl	r3, r3, #8
 1034 0018 9C42     		cmp	r4, r3
 1035 001a F4D8     		bhi	.L87
2419:.\Generated_Source\PSoC4/CyLib.c ****     }
2420:.\Generated_Source\PSoC4/CyLib.c **** 
2421:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1036              		.loc 1 2421 0
 1037 001c 024B     		ldr	r3, .L88
 1038 001e 5868     		ldr	r0, [r3, #4]
 1039 0020 6043     		mul	r0, r4
 1040 0022 FFF7FEFF 		bl	CyDelayCycles
 1041              	.LVL80:
2422:.\Generated_Source\PSoC4/CyLib.c **** }
 1042              		.loc 1 2422 0
 1043              		@ sp needed
 1044              	.LVL81:
 1045 0026 10BD     		pop	{r4, pc}
 1046              	.L89:
 1047              		.align	2
 1048              	.L88:
 1049 0028 00000000 		.word	.LANCHOR0
 1050 002c 0080FFFF 		.word	-32768
 1051              		.cfi_endproc
 1052              	.LFE32:
 1053              		.size	CyDelay, .-CyDelay
 1054              		.section	.text.CyDelayUs,"ax",%progbits
 1055              		.align	2
 1056              		.global	CyDelayUs
 1057              		.code	16
 1058              		.thumb_func
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 63


 1059              		.type	CyDelayUs, %function
 1060              	CyDelayUs:
 1061              	.LFB33:
2423:.\Generated_Source\PSoC4/CyLib.c **** 
2424:.\Generated_Source\PSoC4/CyLib.c **** 
2425:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2426:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2427:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2428:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2429:.\Generated_Source\PSoC4/CyLib.c **** *
2430:.\Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2431:.\Generated_Source\PSoC4/CyLib.c **** *
2432:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2433:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2434:.\Generated_Source\PSoC4/CyLib.c **** {
 1062              		.loc 1 2434 0
 1063              		.cfi_startproc
 1064              	.LVL82:
 1065 0000 08B5     		push	{r3, lr}
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 3, -8
 1068              		.cfi_offset 14, -4
2435:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1069              		.loc 1 2435 0
 1070 0002 034B     		ldr	r3, .L91
 1071 0004 1B7A     		ldrb	r3, [r3, #8]
 1072 0006 5843     		mul	r0, r3
 1073              	.LVL83:
 1074 0008 FFF7FEFF 		bl	CyDelayCycles
 1075              	.LVL84:
2436:.\Generated_Source\PSoC4/CyLib.c **** }
 1076              		.loc 1 2436 0
 1077              		@ sp needed
 1078 000c 08BD     		pop	{r3, pc}
 1079              	.L92:
 1080 000e C046     		.align	2
 1081              	.L91:
 1082 0010 00000000 		.word	.LANCHOR0
 1083              		.cfi_endproc
 1084              	.LFE33:
 1085              		.size	CyDelayUs, .-CyDelayUs
 1086              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1087              		.align	2
 1088              		.global	CySysClkWriteImoFreq
 1089              		.code	16
 1090              		.thumb_func
 1091              		.type	CySysClkWriteImoFreq, %function
 1092              	CySysClkWriteImoFreq:
 1093              	.LFB7:
 577:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1094              		.loc 1 577 0
 1095              		.cfi_startproc
 1096              	.LVL85:
 1097 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1098              		.cfi_def_cfa_offset 20
 1099              		.cfi_offset 4, -20
 1100              		.cfi_offset 5, -16
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 64


 1101              		.cfi_offset 6, -12
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 5746     		mov	r7, r10
 1105 0004 4E46     		mov	r6, r9
 1106 0006 C0B4     		push	{r6, r7}
 1107              		.cfi_def_cfa_offset 28
 1108              		.cfi_offset 9, -28
 1109              		.cfi_offset 10, -24
 1110 0008 83B0     		sub	sp, sp, #12
 1111              		.cfi_def_cfa_offset 40
 1112 000a 041C     		mov	r4, r0
 600:.\Generated_Source\PSoC4/CyLib.c **** 
 1113              		.loc 1 600 0
 1114 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1115              	.LVL86:
 1116 0010 0190     		str	r0, [sp, #4]
 1117              	.LVL87:
 650:.\Generated_Source\PSoC4/CyLib.c ****         {
 1118              		.loc 1 650 0
 1119 0012 E71E     		sub	r7, r4, #3
 1120 0014 2D2F     		cmp	r7, #45
 1121 0016 74D8     		bhi	.L94
 652:.\Generated_Source\PSoC4/CyLib.c ****             {
 1122              		.loc 1 652 0
 1123 0018 3F4B     		ldr	r3, .L104
 1124 001a 1B78     		ldrb	r3, [r3]
 1125 001c DBB2     		uxtb	r3, r3
 1126 001e A342     		cmp	r3, r4
 1127 0020 08D3     		bcc	.L95
 654:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1128              		.loc 1 654 0
 1129 0022 3E4B     		ldr	r3, .L104+4
 1130 0024 1B78     		ldrb	r3, [r3]
 1131 0026 DBB2     		uxtb	r3, r3
 1132 0028 9A46     		mov	r10, r3
 1133              	.LVL88:
 655:.\Generated_Source\PSoC4/CyLib.c ****             }
 1134              		.loc 1 655 0
 1135 002a 3D4B     		ldr	r3, .L104+8
 1136 002c 1B78     		ldrb	r3, [r3]
 1137 002e DBB2     		uxtb	r3, r3
 1138 0030 9946     		mov	r9, r3
 1139              	.LVL89:
 1140 0032 31E0     		b	.L96
 1141              	.LVL90:
 1142              	.L95:
 657:.\Generated_Source\PSoC4/CyLib.c ****             {
 1143              		.loc 1 657 0
 1144 0034 3B4B     		ldr	r3, .L104+12
 1145 0036 1B78     		ldrb	r3, [r3]
 1146 0038 DBB2     		uxtb	r3, r3
 1147 003a A342     		cmp	r3, r4
 1148 003c 08D3     		bcc	.L97
 659:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1149              		.loc 1 659 0
 1150 003e 3A4B     		ldr	r3, .L104+16
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 65


 1151 0040 1B78     		ldrb	r3, [r3]
 1152 0042 DBB2     		uxtb	r3, r3
 1153 0044 9A46     		mov	r10, r3
 1154              	.LVL91:
 660:.\Generated_Source\PSoC4/CyLib.c ****             }
 1155              		.loc 1 660 0
 1156 0046 394B     		ldr	r3, .L104+20
 1157 0048 1B78     		ldrb	r3, [r3]
 1158 004a DBB2     		uxtb	r3, r3
 1159 004c 9946     		mov	r9, r3
 1160              	.LVL92:
 1161 004e 23E0     		b	.L96
 1162              	.LVL93:
 1163              	.L97:
 662:.\Generated_Source\PSoC4/CyLib.c ****             {
 1164              		.loc 1 662 0
 1165 0050 374B     		ldr	r3, .L104+24
 1166 0052 1B78     		ldrb	r3, [r3]
 1167 0054 DBB2     		uxtb	r3, r3
 1168 0056 A342     		cmp	r3, r4
 1169 0058 08D3     		bcc	.L98
 664:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1170              		.loc 1 664 0
 1171 005a 364B     		ldr	r3, .L104+28
 1172 005c 1B78     		ldrb	r3, [r3]
 1173 005e DBB2     		uxtb	r3, r3
 1174 0060 9A46     		mov	r10, r3
 1175              	.LVL94:
 665:.\Generated_Source\PSoC4/CyLib.c ****             }
 1176              		.loc 1 665 0
 1177 0062 354B     		ldr	r3, .L104+32
 1178 0064 1B78     		ldrb	r3, [r3]
 1179 0066 DBB2     		uxtb	r3, r3
 1180 0068 9946     		mov	r9, r3
 1181              	.LVL95:
 1182 006a 15E0     		b	.L96
 1183              	.LVL96:
 1184              	.L98:
 667:.\Generated_Source\PSoC4/CyLib.c ****             {
 1185              		.loc 1 667 0
 1186 006c 334B     		ldr	r3, .L104+36
 1187 006e 1B78     		ldrb	r3, [r3]
 1188 0070 DBB2     		uxtb	r3, r3
 1189 0072 A342     		cmp	r3, r4
 1190 0074 08D3     		bcc	.L99
 669:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1191              		.loc 1 669 0
 1192 0076 324B     		ldr	r3, .L104+40
 1193 0078 1B78     		ldrb	r3, [r3]
 1194 007a DBB2     		uxtb	r3, r3
 1195 007c 9A46     		mov	r10, r3
 1196              	.LVL97:
 670:.\Generated_Source\PSoC4/CyLib.c ****             }
 1197              		.loc 1 670 0
 1198 007e 314B     		ldr	r3, .L104+44
 1199 0080 1B78     		ldrb	r3, [r3]
 1200 0082 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 66


 1201 0084 9946     		mov	r9, r3
 1202              	.LVL98:
 1203 0086 07E0     		b	.L96
 1204              	.LVL99:
 1205              	.L99:
 674:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1206              		.loc 1 674 0
 1207 0088 2F4B     		ldr	r3, .L104+48
 1208 008a 1B78     		ldrb	r3, [r3]
 1209 008c DBB2     		uxtb	r3, r3
 1210 008e 9A46     		mov	r10, r3
 1211              	.LVL100:
 675:.\Generated_Source\PSoC4/CyLib.c ****             }
 1212              		.loc 1 675 0
 1213 0090 2E4B     		ldr	r3, .L104+52
 1214 0092 1B78     		ldrb	r3, [r3]
 1215 0094 DBB2     		uxtb	r3, r3
 1216 0096 9946     		mov	r9, r3
 1217              	.LVL101:
 1218              	.L96:
 679:.\Generated_Source\PSoC4/CyLib.c **** 
 1219              		.loc 1 679 0
 1220 0098 2D4B     		ldr	r3, .L104+56
 1221 009a DE5D     		ldrb	r6, [r3, r7]
 1222              	.LVL102:
 691:.\Generated_Source\PSoC4/CyLib.c ****             {
 1223              		.loc 1 691 0
 1224 009c 2F2E     		cmp	r6, #47
 1225 009e 09D9     		bls	.L100
 691:.\Generated_Source\PSoC4/CyLib.c ****             {
 1226              		.loc 1 691 0 is_stmt 0 discriminator 1
 1227 00a0 2A2C     		cmp	r4, #42
 1228 00a2 07D9     		bls	.L100
 694:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1229              		.loc 1 694 0 is_stmt 1
 1230 00a4 1922     		mov	r2, #25
 1231 00a6 2B4B     		ldr	r3, .L104+60
 1232 00a8 1A60     		str	r2, [r3]
 1233              	.LVL103:
 697:.\Generated_Source\PSoC4/CyLib.c **** 
 1234              		.loc 1 697 0
 1235 00aa 0520     		mov	r0, #5
 1236 00ac FFF7FEFF 		bl	CyDelayCycles
 1237              	.LVL104:
 699:.\Generated_Source\PSoC4/CyLib.c ****             }
 1238              		.loc 1 699 0
 1239 00b0 1925     		mov	r5, #25
 1240 00b2 03E0     		b	.L101
 1241              	.LVL105:
 1242              	.L100:
 703:.\Generated_Source\PSoC4/CyLib.c ****             }
 1243              		.loc 1 703 0
 1244 00b4 274B     		ldr	r3, .L104+60
 1245 00b6 1D68     		ldr	r5, [r3]
 1246 00b8 3F23     		mov	r3, #63
 1247 00ba 1D40     		and	r5, r3
 1248              	.LVL106:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 67


 1249              	.L101:
 715:.\Generated_Source\PSoC4/CyLib.c ****             {
 1250              		.loc 1 715 0
 1251 00bc AE42     		cmp	r6, r5
 1252 00be 06D2     		bcs	.L102
 718:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1253              		.loc 1 718 0
 1254 00c0 234B     		ldr	r3, .L104+56
 1255 00c2 DA5D     		ldrb	r2, [r3, r7]
 1256 00c4 234B     		ldr	r3, .L104+60
 1257 00c6 1A60     		str	r2, [r3]
 719:.\Generated_Source\PSoC4/CyLib.c ****             }
 1258              		.loc 1 719 0
 1259 00c8 0520     		mov	r0, #5
 1260 00ca FFF7FEFF 		bl	CyDelayCycles
 1261              	.LVL107:
 1262              	.L102:
 738:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1263              		.loc 1 738 0
 1264 00ce 1F4B     		ldr	r3, .L104+52
 1265 00d0 9C46     		mov	ip, r3
 1266 00d2 6444     		add	r4, r4, ip
 1267              	.LVL108:
 1268 00d4 2378     		ldrb	r3, [r4]
 1269 00d6 DBB2     		uxtb	r3, r3
 1270              	.LVL109:
 742:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1271              		.loc 1 742 0
 1272 00d8 1F4A     		ldr	r2, .L104+64
 1273 00da 1360     		str	r3, [r2]
 743:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1274              		.loc 1 743 0
 1275 00dc 1F4B     		ldr	r3, .L104+68
 1276              	.LVL110:
 1277 00de 5246     		mov	r2, r10
 1278              	.LVL111:
 1279 00e0 1A60     		str	r2, [r3]
 1280              	.LVL112:
 744:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1281              		.loc 1 744 0
 1282 00e2 1F4B     		ldr	r3, .L104+72
 1283 00e4 4A46     		mov	r2, r9
 1284 00e6 1A60     		str	r2, [r3]
 745:.\Generated_Source\PSoC4/CyLib.c **** 
 1285              		.loc 1 745 0
 1286 00e8 0520     		mov	r0, #5
 1287 00ea FFF7FEFF 		bl	CyDelayUs
 1288              	.LVL113:
 747:.\Generated_Source\PSoC4/CyLib.c ****             {
 1289              		.loc 1 747 0
 1290 00ee AE42     		cmp	r6, r5
 1291 00f0 0AD9     		bls	.L103
 750:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1292              		.loc 1 750 0
 1293 00f2 174B     		ldr	r3, .L104+56
 1294 00f4 DA5D     		ldrb	r2, [r3, r7]
 1295 00f6 174B     		ldr	r3, .L104+60
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 68


 1296 00f8 1A60     		str	r2, [r3]
 751:.\Generated_Source\PSoC4/CyLib.c ****             }
 1297              		.loc 1 751 0
 1298 00fa 0520     		mov	r0, #5
 1299 00fc FFF7FEFF 		bl	CyDelayCycles
 1300              	.LVL114:
 1301 0100 02E0     		b	.L103
 1302              	.LVL115:
 1303              	.L94:
 757:.\Generated_Source\PSoC4/CyLib.c ****         }
 1304              		.loc 1 757 0 discriminator 1
 1305 0102 0020     		mov	r0, #0
 1306 0104 FFF7FEFF 		bl	CyHalt
 1307              	.LVL116:
 1308              	.L103:
 776:.\Generated_Source\PSoC4/CyLib.c ****     }
 1309              		.loc 1 776 0
 1310 0108 0198     		ldr	r0, [sp, #4]
 1311 010a FFF7FEFF 		bl	CyExitCriticalSection
 1312              	.LVL117:
 777:.\Generated_Source\PSoC4/CyLib.c **** 
 1313              		.loc 1 777 0
 1314 010e 03B0     		add	sp, sp, #12
 1315              		@ sp needed
 1316              	.LVL118:
 1317 0110 0CBC     		pop	{r2, r3}
 1318 0112 9146     		mov	r9, r2
 1319 0114 9A46     		mov	r10, r3
 1320 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1321              	.L105:
 1322              		.align	2
 1323              	.L104:
 1324 0118 40F3FF0F 		.word	268432192
 1325 011c 41F3FF0F 		.word	268432193
 1326 0120 42F3FF0F 		.word	268432194
 1327 0124 43F3FF0F 		.word	268432195
 1328 0128 44F3FF0F 		.word	268432196
 1329 012c 45F3FF0F 		.word	268432197
 1330 0130 46F3FF0F 		.word	268432198
 1331 0134 47F3FF0F 		.word	268432199
 1332 0138 48F3FF0F 		.word	268432200
 1333 013c 49F3FF0F 		.word	268432201
 1334 0140 4AF3FF0F 		.word	268432202
 1335 0144 4BF3FF0F 		.word	268432203
 1336 0148 4CF3FF0F 		.word	268432204
 1337 014c 4DF3FF0F 		.word	268432205
 1338 0150 00000000 		.word	.LANCHOR1
 1339 0154 2CFF0B40 		.word	1074528044
 1340 0158 28FF0B40 		.word	1074528040
 1341 015c 1CFF0B40 		.word	1074528028
 1342 0160 20FF0B40 		.word	1074528032
 1343              		.cfi_endproc
 1344              	.LFE7:
 1345              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1346              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1347              		.align	2
 1348              		.global	CySysClkEcoStart
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 69


 1349              		.code	16
 1350              		.thumb_func
 1351              		.type	CySysClkEcoStart, %function
 1352              	CySysClkEcoStart:
 1353              	.LFB8:
 979:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1354              		.loc 1 979 0
 1355              		.cfi_startproc
 1356              	.LVL119:
 1357 0000 10B5     		push	{r4, lr}
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 4, -8
 1360              		.cfi_offset 14, -4
 1361 0002 041C     		mov	r4, r0
 1362              	.LVL120:
 984:.\Generated_Source\PSoC4/CyLib.c **** 
 1363              		.loc 1 984 0
 1364 0004 0F4A     		ldr	r2, .L111
 1365 0006 1168     		ldr	r1, [r2]
 1366 0008 0123     		mov	r3, #1
 1367 000a 0B43     		orr	r3, r1
 1368 000c 1360     		str	r3, [r2]
 987:.\Generated_Source\PSoC4/CyLib.c **** 
 1369              		.loc 1 987 0
 1370 000e 0E4A     		ldr	r2, .L111+4
 1371 0010 0E4B     		ldr	r3, .L111+8
 1372 0012 1A60     		str	r2, [r3]
 990:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 1373              		.loc 1 990 0
 1374 0014 0E4A     		ldr	r2, .L111+12
 1375 0016 1368     		ldr	r3, [r2]
 1376 0018 8021     		mov	r1, #128
 1377 001a 0902     		lsl	r1, r1, #8
 1378 001c 0B43     		orr	r3, r1
 1379 001e 1360     		str	r3, [r2]
 997:.\Generated_Source\PSoC4/CyLib.c ****         {
 1380              		.loc 1 997 0
 1381 0020 0028     		cmp	r0, #0
 1382 0022 09D1     		bne	.L107
 980:.\Generated_Source\PSoC4/CyLib.c **** 
 1383              		.loc 1 980 0
 1384 0024 0020     		mov	r0, #0
 1385              	.LVL121:
 1386 0026 0CE0     		b	.L108
 1387              	.L109:
1003:.\Generated_Source\PSoC4/CyLib.c **** 
 1388              		.loc 1 1003 0
 1389 0028 0120     		mov	r0, #1
 1390 002a FFF7FEFF 		bl	CyDelayUs
 1391              	.LVL122:
1005:.\Generated_Source\PSoC4/CyLib.c ****                 {
 1392              		.loc 1 1005 0
 1393 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1394              	.LVL123:
 1395 0032 0028     		cmp	r0, #0
 1396 0034 04D1     		bne	.L110
1001:.\Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 70


 1397              		.loc 1 1001 0
 1398 0036 013C     		sub	r4, r4, #1
 1399              	.LVL124:
 1400              	.L107:
1001:.\Generated_Source\PSoC4/CyLib.c ****             {
 1401              		.loc 1 1001 0 is_stmt 0 discriminator 1
 1402 0038 002C     		cmp	r4, #0
 1403 003a F5D1     		bne	.L109
 999:.\Generated_Source\PSoC4/CyLib.c **** 
 1404              		.loc 1 999 0 is_stmt 1
 1405 003c 1020     		mov	r0, #16
 1406 003e 00E0     		b	.L108
 1407              	.L110:
1007:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 1408              		.loc 1 1007 0
 1409 0040 0020     		mov	r0, #0
 1410              	.L108:
 1411              	.LVL125:
1015:.\Generated_Source\PSoC4/CyLib.c **** 
 1412              		.loc 1 1015 0
 1413              		@ sp needed
 1414              	.LVL126:
 1415 0042 10BD     		pop	{r4, pc}
 1416              	.L112:
 1417              		.align	2
 1418              	.L111:
 1419 0044 60F02E40 		.word	1076818016
 1420 0048 02200000 		.word	8194
 1421 004c 78002E40 		.word	1076756600
 1422 0050 10002E40 		.word	1076756496
 1423              		.cfi_endproc
 1424              	.LFE8:
 1425              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1426              		.section	.text.CySysLvdEnable,"ax",%progbits
 1427              		.align	2
 1428              		.global	CySysLvdEnable
 1429              		.code	16
 1430              		.thumb_func
 1431              		.type	CySysLvdEnable, %function
 1432              	CySysLvdEnable:
 1433              	.LFB12:
1970:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1434              		.loc 1 1970 0
 1435              		.cfi_startproc
 1436              	.LVL127:
 1437 0000 38B5     		push	{r3, r4, r5, lr}
 1438              		.cfi_def_cfa_offset 16
 1439              		.cfi_offset 3, -16
 1440              		.cfi_offset 4, -12
 1441              		.cfi_offset 5, -8
 1442              		.cfi_offset 14, -4
 1443 0002 031C     		mov	r3, r0
1972:.\Generated_Source\PSoC4/CyLib.c **** 
 1444              		.loc 1 1972 0
 1445 0004 0D4C     		ldr	r4, .L114
 1446 0006 2268     		ldr	r2, [r4]
 1447 0008 0225     		mov	r5, #2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 71


 1448 000a AA43     		bic	r2, r5
 1449 000c 2260     		str	r2, [r4]
1975:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1450              		.loc 1 1975 0
 1451 000e 0C4A     		ldr	r2, .L114+4
 1452 0010 1168     		ldr	r1, [r2]
 1453 0012 1E20     		mov	r0, #30
 1454              	.LVL128:
 1455 0014 8143     		bic	r1, r0
1976:.\Generated_Source\PSoC4/CyLib.c **** 
 1456              		.loc 1 1976 0
 1457 0016 5B00     		lsl	r3, r3, #1
 1458              	.LVL129:
 1459 0018 1840     		and	r0, r3
1975:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1460              		.loc 1 1975 0
 1461 001a 0843     		orr	r0, r1
 1462 001c 1060     		str	r0, [r2]
1979:.\Generated_Source\PSoC4/CyLib.c **** 
 1463              		.loc 1 1979 0
 1464 001e 1168     		ldr	r1, [r2]
 1465 0020 0123     		mov	r3, #1
 1466 0022 0B43     		orr	r3, r1
 1467 0024 1360     		str	r3, [r2]
1982:.\Generated_Source\PSoC4/CyLib.c **** 
 1468              		.loc 1 1982 0
 1469 0026 FA20     		mov	r0, #250
 1470 0028 8000     		lsl	r0, r0, #2
 1471 002a FFF7FEFF 		bl	CyDelayUs
 1472              	.LVL130:
1985:.\Generated_Source\PSoC4/CyLib.c **** 
 1473              		.loc 1 1985 0
 1474 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1475              	.LVL131:
1988:.\Generated_Source\PSoC4/CyLib.c ****     }
 1476              		.loc 1 1988 0
 1477 0032 2368     		ldr	r3, [r4]
 1478 0034 1D43     		orr	r5, r3
 1479 0036 2560     		str	r5, [r4]
1989:.\Generated_Source\PSoC4/CyLib.c **** 
 1480              		.loc 1 1989 0
 1481              		@ sp needed
 1482 0038 38BD     		pop	{r3, r4, r5, pc}
 1483              	.L115:
 1484 003a C046     		.align	2
 1485              	.L114:
 1486 003c 08000B40 		.word	1074462728
 1487 0040 18000B40 		.word	1074462744
 1488              		.cfi_endproc
 1489              	.LFE12:
 1490              		.size	CySysLvdEnable, .-CySysLvdEnable
 1491              		.global	__aeabi_uidiv
 1492              		.section	.text.CyDelayFreq,"ax",%progbits
 1493              		.align	2
 1494              		.global	CyDelayFreq
 1495              		.code	16
 1496              		.thumb_func
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 72


 1497              		.type	CyDelayFreq, %function
 1498              	CyDelayFreq:
 1499              	.LFB34:
2437:.\Generated_Source\PSoC4/CyLib.c **** 
2438:.\Generated_Source\PSoC4/CyLib.c **** 
2439:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2440:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2441:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2442:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2443:.\Generated_Source\PSoC4/CyLib.c **** *
2444:.\Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2445:.\Generated_Source\PSoC4/CyLib.c **** *
2446:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2447:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2448:.\Generated_Source\PSoC4/CyLib.c **** {
 1500              		.loc 1 2448 0
 1501              		.cfi_startproc
 1502              	.LVL132:
 1503 0000 38B5     		push	{r3, r4, r5, lr}
 1504              		.cfi_def_cfa_offset 16
 1505              		.cfi_offset 3, -16
 1506              		.cfi_offset 4, -12
 1507              		.cfi_offset 5, -8
 1508              		.cfi_offset 14, -4
2449:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1509              		.loc 1 2449 0
 1510 0002 0028     		cmp	r0, #0
 1511 0004 02D0     		beq	.L117
2450:.\Generated_Source\PSoC4/CyLib.c ****     {
2451:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1512              		.loc 1 2451 0
 1513 0006 0C4B     		ldr	r3, .L119
 1514 0008 D860     		str	r0, [r3, #12]
 1515 000a 02E0     		b	.L118
 1516              	.L117:
2452:.\Generated_Source\PSoC4/CyLib.c ****     }
2453:.\Generated_Source\PSoC4/CyLib.c ****     else
2454:.\Generated_Source\PSoC4/CyLib.c ****     {
2455:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1517              		.loc 1 2455 0
 1518 000c 0B4A     		ldr	r2, .L119+4
 1519 000e 0A4B     		ldr	r3, .L119
 1520 0010 DA60     		str	r2, [r3, #12]
 1521              	.L118:
2456:.\Generated_Source\PSoC4/CyLib.c ****     }
2457:.\Generated_Source\PSoC4/CyLib.c **** 
2458:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1522              		.loc 1 2458 0
 1523 0012 094C     		ldr	r4, .L119
 1524 0014 E568     		ldr	r5, [r4, #12]
 1525 0016 0A4B     		ldr	r3, .L119+8
 1526 0018 E818     		add	r0, r5, r3
 1527              	.LVL133:
 1528 001a 0A49     		ldr	r1, .L119+12
 1529 001c FFF7FEFF 		bl	__aeabi_uidiv
 1530              	.LVL134:
 1531 0020 2072     		strb	r0, [r4, #8]
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 73


2459:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1532              		.loc 1 2459 0
 1533 0022 094B     		ldr	r3, .L119+16
 1534 0024 E818     		add	r0, r5, r3
 1535 0026 FA21     		mov	r1, #250
 1536 0028 8900     		lsl	r1, r1, #2
 1537 002a FFF7FEFF 		bl	__aeabi_uidiv
 1538              	.LVL135:
 1539 002e 6060     		str	r0, [r4, #4]
2460:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1540              		.loc 1 2460 0
 1541 0030 C003     		lsl	r0, r0, #15
 1542 0032 2060     		str	r0, [r4]
2461:.\Generated_Source\PSoC4/CyLib.c **** }
 1543              		.loc 1 2461 0
 1544              		@ sp needed
 1545 0034 38BD     		pop	{r3, r4, r5, pc}
 1546              	.L120:
 1547 0036 C046     		.align	2
 1548              	.L119:
 1549 0038 00000000 		.word	.LANCHOR0
 1550 003c 006CDC02 		.word	48000000
 1551 0040 3F420F00 		.word	999999
 1552 0044 40420F00 		.word	1000000
 1553 0048 E7030000 		.word	999
 1554              		.cfi_endproc
 1555              	.LFE34:
 1556              		.size	CyDelayFreq, .-CyDelayFreq
 1557              		.section	.text.CySysTickStop,"ax",%progbits
 1558              		.align	2
 1559              		.global	CySysTickStop
 1560              		.code	16
 1561              		.thumb_func
 1562              		.type	CySysTickStop, %function
 1563              	CySysTickStop:
 1564              	.LFB38:
2462:.\Generated_Source\PSoC4/CyLib.c **** 
2463:.\Generated_Source\PSoC4/CyLib.c **** 
2464:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2465:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2466:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2467:.\Generated_Source\PSoC4/CyLib.c **** *
2468:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2469:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2470:.\Generated_Source\PSoC4/CyLib.c **** *
2471:.\Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2472:.\Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2473:.\Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2474:.\Generated_Source\PSoC4/CyLib.c **** *
2475:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2476:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2477:.\Generated_Source\PSoC4/CyLib.c **** *
2478:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2479:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2480:.\Generated_Source\PSoC4/CyLib.c **** {
2481:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2482:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 74


2483:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2484:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2485:.\Generated_Source\PSoC4/CyLib.c ****     }
2486:.\Generated_Source\PSoC4/CyLib.c **** 
2487:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2488:.\Generated_Source\PSoC4/CyLib.c **** }
2489:.\Generated_Source\PSoC4/CyLib.c **** 
2490:.\Generated_Source\PSoC4/CyLib.c **** 
2491:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2493:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:.\Generated_Source\PSoC4/CyLib.c **** *
2495:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2496:.\Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2497:.\Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2498:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2499:.\Generated_Source\PSoC4/CyLib.c **** *
2500:.\Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2501:.\Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2502:.\Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2503:.\Generated_Source\PSoC4/CyLib.c **** *
2504:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2505:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2506:.\Generated_Source\PSoC4/CyLib.c **** *
2507:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2508:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2509:.\Generated_Source\PSoC4/CyLib.c **** {
2510:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2511:.\Generated_Source\PSoC4/CyLib.c **** 
2512:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2513:.\Generated_Source\PSoC4/CyLib.c ****     {
2514:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2515:.\Generated_Source\PSoC4/CyLib.c ****     }
2516:.\Generated_Source\PSoC4/CyLib.c **** 
2517:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2518:.\Generated_Source\PSoC4/CyLib.c **** 
2519:.\Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2520:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2521:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2522:.\Generated_Source\PSoC4/CyLib.c **** 
2523:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2524:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2525:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2526:.\Generated_Source\PSoC4/CyLib.c **** }
2527:.\Generated_Source\PSoC4/CyLib.c **** 
2528:.\Generated_Source\PSoC4/CyLib.c **** 
2529:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2530:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2531:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2532:.\Generated_Source\PSoC4/CyLib.c **** *
2533:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2534:.\Generated_Source\PSoC4/CyLib.c **** *
2535:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2536:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2537:.\Generated_Source\PSoC4/CyLib.c **** *
2538:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 75


2540:.\Generated_Source\PSoC4/CyLib.c **** {
2541:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2542:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2543:.\Generated_Source\PSoC4/CyLib.c **** }
2544:.\Generated_Source\PSoC4/CyLib.c **** 
2545:.\Generated_Source\PSoC4/CyLib.c **** 
2546:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2547:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2548:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2549:.\Generated_Source\PSoC4/CyLib.c **** *
2550:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2551:.\Generated_Source\PSoC4/CyLib.c **** *
2552:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2553:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2554:.\Generated_Source\PSoC4/CyLib.c **** *
2555:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2556:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2557:.\Generated_Source\PSoC4/CyLib.c **** {
 1565              		.loc 1 2557 0
 1566              		.cfi_startproc
2558:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1567              		.loc 1 2558 0
 1568 0000 024A     		ldr	r2, .L122
 1569 0002 1368     		ldr	r3, [r2]
 1570 0004 0121     		mov	r1, #1
 1571 0006 8B43     		bic	r3, r1
 1572 0008 1360     		str	r3, [r2]
2559:.\Generated_Source\PSoC4/CyLib.c **** }
 1573              		.loc 1 2559 0
 1574              		@ sp needed
 1575 000a 7047     		bx	lr
 1576              	.L123:
 1577              		.align	2
 1578              	.L122:
 1579 000c 10E000E0 		.word	-536813552
 1580              		.cfi_endproc
 1581              	.LFE38:
 1582              		.size	CySysTickStop, .-CySysTickStop
 1583              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1584              		.align	2
 1585              		.global	CySysTickEnableInterrupt
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	CySysTickEnableInterrupt, %function
 1589              	CySysTickEnableInterrupt:
 1590              	.LFB39:
2560:.\Generated_Source\PSoC4/CyLib.c **** 
2561:.\Generated_Source\PSoC4/CyLib.c **** 
2562:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2563:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2564:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2565:.\Generated_Source\PSoC4/CyLib.c **** *
2566:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2567:.\Generated_Source\PSoC4/CyLib.c **** *
2568:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2569:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2570:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 76


2571:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2572:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2573:.\Generated_Source\PSoC4/CyLib.c **** {
 1591              		.loc 1 2573 0
 1592              		.cfi_startproc
2574:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1593              		.loc 1 2574 0
 1594 0000 024A     		ldr	r2, .L125
 1595 0002 1168     		ldr	r1, [r2]
 1596 0004 0223     		mov	r3, #2
 1597 0006 0B43     		orr	r3, r1
 1598 0008 1360     		str	r3, [r2]
2575:.\Generated_Source\PSoC4/CyLib.c **** }
 1599              		.loc 1 2575 0
 1600              		@ sp needed
 1601 000a 7047     		bx	lr
 1602              	.L126:
 1603              		.align	2
 1604              	.L125:
 1605 000c 10E000E0 		.word	-536813552
 1606              		.cfi_endproc
 1607              	.LFE39:
 1608              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1609              		.section	.text.CySysTickEnable,"ax",%progbits
 1610              		.align	2
 1611              		.global	CySysTickEnable
 1612              		.code	16
 1613              		.thumb_func
 1614              		.type	CySysTickEnable, %function
 1615              	CySysTickEnable:
 1616              	.LFB37:
2540:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1617              		.loc 1 2540 0
 1618              		.cfi_startproc
 1619 0000 08B5     		push	{r3, lr}
 1620              		.cfi_def_cfa_offset 8
 1621              		.cfi_offset 3, -8
 1622              		.cfi_offset 14, -4
2541:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1623              		.loc 1 2541 0
 1624 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1625              	.LVL136:
2542:.\Generated_Source\PSoC4/CyLib.c **** }
 1626              		.loc 1 2542 0
 1627 0006 034A     		ldr	r2, .L128
 1628 0008 1168     		ldr	r1, [r2]
 1629 000a 0123     		mov	r3, #1
 1630 000c 0B43     		orr	r3, r1
 1631 000e 1360     		str	r3, [r2]
2543:.\Generated_Source\PSoC4/CyLib.c **** 
 1632              		.loc 1 2543 0
 1633              		@ sp needed
 1634 0010 08BD     		pop	{r3, pc}
 1635              	.L129:
 1636 0012 C046     		.align	2
 1637              	.L128:
 1638 0014 10E000E0 		.word	-536813552
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 77


 1639              		.cfi_endproc
 1640              	.LFE37:
 1641              		.size	CySysTickEnable, .-CySysTickEnable
 1642              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1643              		.align	2
 1644              		.global	CySysTickDisableInterrupt
 1645              		.code	16
 1646              		.thumb_func
 1647              		.type	CySysTickDisableInterrupt, %function
 1648              	CySysTickDisableInterrupt:
 1649              	.LFB40:
2576:.\Generated_Source\PSoC4/CyLib.c **** 
2577:.\Generated_Source\PSoC4/CyLib.c **** 
2578:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2579:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2580:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2581:.\Generated_Source\PSoC4/CyLib.c **** *
2582:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2583:.\Generated_Source\PSoC4/CyLib.c **** *
2584:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2585:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2586:.\Generated_Source\PSoC4/CyLib.c **** *
2587:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2588:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2589:.\Generated_Source\PSoC4/CyLib.c **** {
 1650              		.loc 1 2589 0
 1651              		.cfi_startproc
2590:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1652              		.loc 1 2590 0
 1653 0000 024A     		ldr	r2, .L131
 1654 0002 1368     		ldr	r3, [r2]
 1655 0004 0221     		mov	r1, #2
 1656 0006 8B43     		bic	r3, r1
 1657 0008 1360     		str	r3, [r2]
2591:.\Generated_Source\PSoC4/CyLib.c **** }
 1658              		.loc 1 2591 0
 1659              		@ sp needed
 1660 000a 7047     		bx	lr
 1661              	.L132:
 1662              		.align	2
 1663              	.L131:
 1664 000c 10E000E0 		.word	-536813552
 1665              		.cfi_endproc
 1666              	.LFE40:
 1667              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1668              		.section	.text.CySysTickSetReload,"ax",%progbits
 1669              		.align	2
 1670              		.global	CySysTickSetReload
 1671              		.code	16
 1672              		.thumb_func
 1673              		.type	CySysTickSetReload, %function
 1674              	CySysTickSetReload:
 1675              	.LFB41:
2592:.\Generated_Source\PSoC4/CyLib.c **** 
2593:.\Generated_Source\PSoC4/CyLib.c **** 
2594:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2595:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 78


2596:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2597:.\Generated_Source\PSoC4/CyLib.c **** *
2598:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2599:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2600:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2601:.\Generated_Source\PSoC4/CyLib.c **** *
2602:.\Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2603:.\Generated_Source\PSoC4/CyLib.c **** *
2604:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2605:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2606:.\Generated_Source\PSoC4/CyLib.c **** {
 1676              		.loc 1 2606 0
 1677              		.cfi_startproc
 1678              	.LVL137:
2607:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1679              		.loc 1 2607 0
 1680 0000 0002     		lsl	r0, r0, #8
 1681              	.LVL138:
 1682 0002 000A     		lsr	r0, r0, #8
 1683 0004 014B     		ldr	r3, .L134
 1684 0006 1860     		str	r0, [r3]
2608:.\Generated_Source\PSoC4/CyLib.c **** }
 1685              		.loc 1 2608 0
 1686              		@ sp needed
 1687 0008 7047     		bx	lr
 1688              	.L135:
 1689 000a C046     		.align	2
 1690              	.L134:
 1691 000c 14E000E0 		.word	-536813548
 1692              		.cfi_endproc
 1693              	.LFE41:
 1694              		.size	CySysTickSetReload, .-CySysTickSetReload
 1695              		.section	.text.CySysTickGetReload,"ax",%progbits
 1696              		.align	2
 1697              		.global	CySysTickGetReload
 1698              		.code	16
 1699              		.thumb_func
 1700              		.type	CySysTickGetReload, %function
 1701              	CySysTickGetReload:
 1702              	.LFB42:
2609:.\Generated_Source\PSoC4/CyLib.c **** 
2610:.\Generated_Source\PSoC4/CyLib.c **** 
2611:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2612:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2613:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2614:.\Generated_Source\PSoC4/CyLib.c **** *
2615:.\Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2616:.\Generated_Source\PSoC4/CyLib.c **** *
2617:.\Generated_Source\PSoC4/CyLib.c **** * \return
2618:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2619:.\Generated_Source\PSoC4/CyLib.c **** *
2620:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2621:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2622:.\Generated_Source\PSoC4/CyLib.c **** {
 1703              		.loc 1 2622 0
 1704              		.cfi_startproc
2623:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 79


 1705              		.loc 1 2623 0
 1706 0000 024B     		ldr	r3, .L137
 1707 0002 1868     		ldr	r0, [r3]
 1708 0004 0002     		lsl	r0, r0, #8
 1709 0006 000A     		lsr	r0, r0, #8
2624:.\Generated_Source\PSoC4/CyLib.c **** }
 1710              		.loc 1 2624 0
 1711              		@ sp needed
 1712 0008 7047     		bx	lr
 1713              	.L138:
 1714 000a C046     		.align	2
 1715              	.L137:
 1716 000c 14E000E0 		.word	-536813548
 1717              		.cfi_endproc
 1718              	.LFE42:
 1719              		.size	CySysTickGetReload, .-CySysTickGetReload
 1720              		.section	.text.CySysTickGetValue,"ax",%progbits
 1721              		.align	2
 1722              		.global	CySysTickGetValue
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	CySysTickGetValue, %function
 1726              	CySysTickGetValue:
 1727              	.LFB43:
2625:.\Generated_Source\PSoC4/CyLib.c **** 
2626:.\Generated_Source\PSoC4/CyLib.c **** 
2627:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2628:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2629:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2630:.\Generated_Source\PSoC4/CyLib.c **** *
2631:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2632:.\Generated_Source\PSoC4/CyLib.c **** *
2633:.\Generated_Source\PSoC4/CyLib.c **** * \return
2634:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2635:.\Generated_Source\PSoC4/CyLib.c **** *
2636:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2638:.\Generated_Source\PSoC4/CyLib.c **** {
 1728              		.loc 1 2638 0
 1729              		.cfi_startproc
2639:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1730              		.loc 1 2639 0
 1731 0000 024B     		ldr	r3, .L140
 1732 0002 1868     		ldr	r0, [r3]
 1733 0004 0002     		lsl	r0, r0, #8
 1734 0006 000A     		lsr	r0, r0, #8
2640:.\Generated_Source\PSoC4/CyLib.c **** }
 1735              		.loc 1 2640 0
 1736              		@ sp needed
 1737 0008 7047     		bx	lr
 1738              	.L141:
 1739 000a C046     		.align	2
 1740              	.L140:
 1741 000c 18E000E0 		.word	-536813544
 1742              		.cfi_endproc
 1743              	.LFE43:
 1744              		.size	CySysTickGetValue, .-CySysTickGetValue
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 80


 1745              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1746              		.align	2
 1747              		.global	CySysTickSetClockSource
 1748              		.code	16
 1749              		.thumb_func
 1750              		.type	CySysTickSetClockSource, %function
 1751              	CySysTickSetClockSource:
 1752              	.LFB44:
2641:.\Generated_Source\PSoC4/CyLib.c **** 
2642:.\Generated_Source\PSoC4/CyLib.c **** 
2643:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2644:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2645:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2646:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2647:.\Generated_Source\PSoC4/CyLib.c ****     *
2648:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2649:.\Generated_Source\PSoC4/CyLib.c ****     *
2650:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2651:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2652:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2653:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2654:.\Generated_Source\PSoC4/CyLib.c ****     *
2655:.\Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2656:.\Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2657:.\Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2658:.\Generated_Source\PSoC4/CyLib.c ****     *
2659:.\Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2660:.\Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2661:.\Generated_Source\PSoC4/CyLib.c ****     *
2662:.\Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2663:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2664:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2665:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2666:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2667:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2668:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2670:.\Generated_Source\PSoC4/CyLib.c ****     {
 1753              		.loc 1 2670 0
 1754              		.cfi_startproc
 1755              	.LVL139:
2671:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1756              		.loc 1 2671 0
 1757 0000 0128     		cmp	r0, #1
 1758 0002 05D1     		bne	.L143
2672:.\Generated_Source\PSoC4/CyLib.c ****         {
2673:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1759              		.loc 1 2673 0
 1760 0004 054A     		ldr	r2, .L145
 1761 0006 1168     		ldr	r1, [r2]
 1762 0008 0423     		mov	r3, #4
 1763 000a 0B43     		orr	r3, r1
 1764 000c 1360     		str	r3, [r2]
 1765 000e 04E0     		b	.L142
 1766              	.L143:
2674:.\Generated_Source\PSoC4/CyLib.c ****         }
2675:.\Generated_Source\PSoC4/CyLib.c ****         else
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 81


2676:.\Generated_Source\PSoC4/CyLib.c ****         {
2677:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1767              		.loc 1 2677 0
 1768 0010 024A     		ldr	r2, .L145
 1769 0012 1368     		ldr	r3, [r2]
 1770 0014 0421     		mov	r1, #4
 1771 0016 8B43     		bic	r3, r1
 1772 0018 1360     		str	r3, [r2]
 1773              	.L142:
2678:.\Generated_Source\PSoC4/CyLib.c ****         }
2679:.\Generated_Source\PSoC4/CyLib.c ****     }
 1774              		.loc 1 2679 0
 1775              		@ sp needed
 1776 001a 7047     		bx	lr
 1777              	.L146:
 1778              		.align	2
 1779              	.L145:
 1780 001c 10E000E0 		.word	-536813552
 1781              		.cfi_endproc
 1782              	.LFE44:
 1783              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1784              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1785              		.align	2
 1786              		.global	CySysTickGetCountFlag
 1787              		.code	16
 1788              		.thumb_func
 1789              		.type	CySysTickGetCountFlag, %function
 1790              	CySysTickGetCountFlag:
 1791              	.LFB45:
2680:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2681:.\Generated_Source\PSoC4/CyLib.c **** 
2682:.\Generated_Source\PSoC4/CyLib.c **** 
2683:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2684:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2685:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2686:.\Generated_Source\PSoC4/CyLib.c **** *
2687:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2688:.\Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2689:.\Generated_Source\PSoC4/CyLib.c **** *
2690:.\Generated_Source\PSoC4/CyLib.c **** * \return
2691:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2692:.\Generated_Source\PSoC4/CyLib.c **** *
2693:.\Generated_Source\PSoC4/CyLib.c **** *
2694:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2695:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2696:.\Generated_Source\PSoC4/CyLib.c **** *
2697:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2699:.\Generated_Source\PSoC4/CyLib.c **** {
 1792              		.loc 1 2699 0
 1793              		.cfi_startproc
2700:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1794              		.loc 1 2700 0
 1795 0000 024B     		ldr	r3, .L148
 1796 0002 1868     		ldr	r0, [r3]
 1797 0004 C003     		lsl	r0, r0, #15
 1798 0006 C00F     		lsr	r0, r0, #31
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 82


2701:.\Generated_Source\PSoC4/CyLib.c **** }
 1799              		.loc 1 2701 0
 1800              		@ sp needed
 1801 0008 7047     		bx	lr
 1802              	.L149:
 1803 000a C046     		.align	2
 1804              	.L148:
 1805 000c 10E000E0 		.word	-536813552
 1806              		.cfi_endproc
 1807              	.LFE45:
 1808              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1809              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1810              		.align	2
 1811              		.code	16
 1812              		.thumb_func
 1813              		.type	CySysTickServiceCallbacks, %function
 1814              	CySysTickServiceCallbacks:
 1815              	.LFB49:
2702:.\Generated_Source\PSoC4/CyLib.c **** 
2703:.\Generated_Source\PSoC4/CyLib.c **** 
2704:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2705:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2706:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2707:.\Generated_Source\PSoC4/CyLib.c **** *
2708:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2709:.\Generated_Source\PSoC4/CyLib.c **** *
2710:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2712:.\Generated_Source\PSoC4/CyLib.c **** {
2713:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2714:.\Generated_Source\PSoC4/CyLib.c **** }
2715:.\Generated_Source\PSoC4/CyLib.c **** 
2716:.\Generated_Source\PSoC4/CyLib.c **** 
2717:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2718:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2719:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2720:.\Generated_Source\PSoC4/CyLib.c **** *
2721:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2722:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2723:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2724:.\Generated_Source\PSoC4/CyLib.c **** *
2725:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2726:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2727:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2728:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2729:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
2730:.\Generated_Source\PSoC4/CyLib.c **** *
2731:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2732:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2733:.\Generated_Source\PSoC4/CyLib.c **** *
2734:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2735:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2736:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2737:.\Generated_Source\PSoC4/CyLib.c **** *
2738:.\Generated_Source\PSoC4/CyLib.c **** * \return
2739:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2740:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 83


2741:.\Generated_Source\PSoC4/CyLib.c **** *
2742:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2743:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2744:.\Generated_Source\PSoC4/CyLib.c **** *
2745:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2746:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2747:.\Generated_Source\PSoC4/CyLib.c **** {
2748:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2749:.\Generated_Source\PSoC4/CyLib.c **** 
2750:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2751:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2752:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2753:.\Generated_Source\PSoC4/CyLib.c **** }
2754:.\Generated_Source\PSoC4/CyLib.c **** 
2755:.\Generated_Source\PSoC4/CyLib.c **** 
2756:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2757:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2758:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2759:.\Generated_Source\PSoC4/CyLib.c **** *
2760:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2761:.\Generated_Source\PSoC4/CyLib.c **** *
2762:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2763:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2764:.\Generated_Source\PSoC4/CyLib.c **** *
2765:.\Generated_Source\PSoC4/CyLib.c **** * \return
2766:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2767:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2768:.\Generated_Source\PSoC4/CyLib.c **** *
2769:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2771:.\Generated_Source\PSoC4/CyLib.c **** {
2772:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2773:.\Generated_Source\PSoC4/CyLib.c **** }
2774:.\Generated_Source\PSoC4/CyLib.c **** 
2775:.\Generated_Source\PSoC4/CyLib.c **** 
2776:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2778:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:.\Generated_Source\PSoC4/CyLib.c **** *
2780:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2781:.\Generated_Source\PSoC4/CyLib.c **** *
2782:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2783:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2784:.\Generated_Source\PSoC4/CyLib.c **** {
 1816              		.loc 1 2784 0
 1817              		.cfi_startproc
 1818 0000 10B5     		push	{r4, lr}
 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 4, -8
 1821              		.cfi_offset 14, -4
2785:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2786:.\Generated_Source\PSoC4/CyLib.c **** 
2787:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2788:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1822              		.loc 1 2788 0
 1823 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1824              	.LVL140:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 84


 1825 0006 0128     		cmp	r0, #1
 1826 0008 0BD1     		bne	.L150
 1827 000a 07E0     		b	.L155
 1828              	.LVL141:
 1829              	.L154:
2789:.\Generated_Source\PSoC4/CyLib.c ****     {
2790:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2791:.\Generated_Source\PSoC4/CyLib.c ****         {
2792:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1830              		.loc 1 2792 0
 1831 000c A300     		lsl	r3, r4, #2
 1832 000e 054A     		ldr	r2, .L156
 1833 0010 9B58     		ldr	r3, [r3, r2]
 1834 0012 002B     		cmp	r3, #0
 1835 0014 00D0     		beq	.L153
2793:.\Generated_Source\PSoC4/CyLib.c ****             {
2794:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1836              		.loc 1 2794 0
 1837 0016 9847     		blx	r3
 1838              	.LVL142:
 1839              	.L153:
2790:.\Generated_Source\PSoC4/CyLib.c ****         {
 1840              		.loc 1 2790 0 discriminator 2
 1841 0018 0134     		add	r4, r4, #1
 1842              	.LVL143:
 1843 001a 00E0     		b	.L151
 1844              	.LVL144:
 1845              	.L155:
 1846 001c 0024     		mov	r4, #0
 1847              	.L151:
 1848              	.LVL145:
2790:.\Generated_Source\PSoC4/CyLib.c ****         {
 1849              		.loc 1 2790 0 is_stmt 0 discriminator 1
 1850 001e 042C     		cmp	r4, #4
 1851 0020 F4D9     		bls	.L154
 1852              	.LVL146:
 1853              	.L150:
2795:.\Generated_Source\PSoC4/CyLib.c ****             }
2796:.\Generated_Source\PSoC4/CyLib.c ****         }
2797:.\Generated_Source\PSoC4/CyLib.c ****     }
2798:.\Generated_Source\PSoC4/CyLib.c **** }
 1854              		.loc 1 2798 0 is_stmt 1
 1855              		@ sp needed
 1856 0022 10BD     		pop	{r4, pc}
 1857              	.L157:
 1858              		.align	2
 1859              	.L156:
 1860 0024 00000000 		.word	.LANCHOR2
 1861              		.cfi_endproc
 1862              	.LFE49:
 1863              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1864              		.section	.text.CySysTickClear,"ax",%progbits
 1865              		.align	2
 1866              		.global	CySysTickClear
 1867              		.code	16
 1868              		.thumb_func
 1869              		.type	CySysTickClear, %function
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 85


 1870              	CySysTickClear:
 1871              	.LFB46:
2712:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1872              		.loc 1 2712 0
 1873              		.cfi_startproc
2713:.\Generated_Source\PSoC4/CyLib.c **** }
 1874              		.loc 1 2713 0
 1875 0000 0022     		mov	r2, #0
 1876 0002 014B     		ldr	r3, .L159
 1877 0004 1A60     		str	r2, [r3]
2714:.\Generated_Source\PSoC4/CyLib.c **** 
 1878              		.loc 1 2714 0
 1879              		@ sp needed
 1880 0006 7047     		bx	lr
 1881              	.L160:
 1882              		.align	2
 1883              	.L159:
 1884 0008 18E000E0 		.word	-536813544
 1885              		.cfi_endproc
 1886              	.LFE46:
 1887              		.size	CySysTickClear, .-CySysTickClear
 1888              		.section	.text.CySysTickInit,"ax",%progbits
 1889              		.align	2
 1890              		.global	CySysTickInit
 1891              		.code	16
 1892              		.thumb_func
 1893              		.type	CySysTickInit, %function
 1894              	CySysTickInit:
 1895              	.LFB36:
2509:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1896              		.loc 1 2509 0
 1897              		.cfi_startproc
 1898 0000 08B5     		push	{r3, lr}
 1899              		.cfi_def_cfa_offset 8
 1900              		.cfi_offset 3, -8
 1901              		.cfi_offset 14, -4
 1902              	.LVL147:
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1903              		.loc 1 2512 0
 1904 0002 0023     		mov	r3, #0
 1905 0004 04E0     		b	.L162
 1906              	.LVL148:
 1907              	.L163:
2514:.\Generated_Source\PSoC4/CyLib.c ****     }
 1908              		.loc 1 2514 0 discriminator 3
 1909 0006 9900     		lsl	r1, r3, #2
 1910 0008 0020     		mov	r0, #0
 1911 000a 0D4A     		ldr	r2, .L164
 1912 000c 8850     		str	r0, [r1, r2]
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1913              		.loc 1 2512 0 discriminator 3
 1914 000e 0133     		add	r3, r3, #1
 1915              	.LVL149:
 1916              	.L162:
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1917              		.loc 1 2512 0 is_stmt 0 discriminator 1
 1918 0010 042B     		cmp	r3, #4
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 86


 1919 0012 F8D9     		bls	.L163
2517:.\Generated_Source\PSoC4/CyLib.c **** 
 1920              		.loc 1 2517 0 is_stmt 1
 1921 0014 0F20     		mov	r0, #15
 1922 0016 0B49     		ldr	r1, .L164+4
 1923 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1924              	.LVL150:
2520:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1925              		.loc 1 2520 0
 1926 001c 0120     		mov	r0, #1
 1927 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1928              	.LVL151:
2523:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1929              		.loc 1 2523 0
 1930 0022 094B     		ldr	r3, .L164+8
 1931 0024 D868     		ldr	r0, [r3, #12]
 1932 0026 FA21     		mov	r1, #250
 1933 0028 8900     		lsl	r1, r1, #2
 1934 002a FFF7FEFF 		bl	__aeabi_uidiv
 1935              	.LVL152:
 1936 002e FFF7FEFF 		bl	CySysTickSetReload
 1937              	.LVL153:
2524:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1938              		.loc 1 2524 0
 1939 0032 FFF7FEFF 		bl	CySysTickClear
 1940              	.LVL154:
2525:.\Generated_Source\PSoC4/CyLib.c **** }
 1941              		.loc 1 2525 0
 1942 0036 0F20     		mov	r0, #15
 1943 0038 FFF7FEFF 		bl	CyIntEnable
 1944              	.LVL155:
2526:.\Generated_Source\PSoC4/CyLib.c **** 
 1945              		.loc 1 2526 0
 1946              		@ sp needed
 1947 003c 08BD     		pop	{r3, pc}
 1948              	.L165:
 1949 003e C046     		.align	2
 1950              	.L164:
 1951 0040 00000000 		.word	.LANCHOR2
 1952 0044 00000000 		.word	CySysTickServiceCallbacks
 1953 0048 00000000 		.word	.LANCHOR0
 1954              		.cfi_endproc
 1955              	.LFE36:
 1956              		.size	CySysTickInit, .-CySysTickInit
 1957              		.section	.text.CySysTickStart,"ax",%progbits
 1958              		.align	2
 1959              		.global	CySysTickStart
 1960              		.code	16
 1961              		.thumb_func
 1962              		.type	CySysTickStart, %function
 1963              	CySysTickStart:
 1964              	.LFB35:
2480:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1965              		.loc 1 2480 0
 1966              		.cfi_startproc
 1967 0000 08B5     		push	{r3, lr}
 1968              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 87


 1969              		.cfi_offset 3, -8
 1970              		.cfi_offset 14, -4
2481:.\Generated_Source\PSoC4/CyLib.c ****     {
 1971              		.loc 1 2481 0
 1972 0002 064B     		ldr	r3, .L168
 1973 0004 5B69     		ldr	r3, [r3, #20]
 1974 0006 002B     		cmp	r3, #0
 1975 0008 04D1     		bne	.L167
2483:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1976              		.loc 1 2483 0
 1977 000a FFF7FEFF 		bl	CySysTickInit
 1978              	.LVL156:
2484:.\Generated_Source\PSoC4/CyLib.c ****     }
 1979              		.loc 1 2484 0
 1980 000e 0122     		mov	r2, #1
 1981 0010 024B     		ldr	r3, .L168
 1982 0012 5A61     		str	r2, [r3, #20]
 1983              	.L167:
2487:.\Generated_Source\PSoC4/CyLib.c **** }
 1984              		.loc 1 2487 0
 1985 0014 FFF7FEFF 		bl	CySysTickEnable
 1986              	.LVL157:
2488:.\Generated_Source\PSoC4/CyLib.c **** 
 1987              		.loc 1 2488 0
 1988              		@ sp needed
 1989 0018 08BD     		pop	{r3, pc}
 1990              	.L169:
 1991 001a C046     		.align	2
 1992              	.L168:
 1993 001c 00000000 		.word	.LANCHOR2
 1994              		.cfi_endproc
 1995              	.LFE35:
 1996              		.size	CySysTickStart, .-CySysTickStart
 1997              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1998              		.align	2
 1999              		.global	CySysTickSetCallback
 2000              		.code	16
 2001              		.thumb_func
 2002              		.type	CySysTickSetCallback, %function
 2003              	CySysTickSetCallback:
 2004              	.LFB47:
2747:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2005              		.loc 1 2747 0
 2006              		.cfi_startproc
 2007              	.LVL158:
2750:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2008              		.loc 1 2750 0
 2009 0000 024A     		ldr	r2, .L171
 2010 0002 8300     		lsl	r3, r0, #2
 2011 0004 9858     		ldr	r0, [r3, r2]
 2012              	.LVL159:
2751:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2013              		.loc 1 2751 0
 2014 0006 9950     		str	r1, [r3, r2]
2753:.\Generated_Source\PSoC4/CyLib.c **** 
 2015              		.loc 1 2753 0
 2016              		@ sp needed
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 88


 2017 0008 7047     		bx	lr
 2018              	.L172:
 2019 000a C046     		.align	2
 2020              	.L171:
 2021 000c 00000000 		.word	.LANCHOR2
 2022              		.cfi_endproc
 2023              	.LFE47:
 2024              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2025              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2026              		.align	2
 2027              		.global	CySysTickGetCallback
 2028              		.code	16
 2029              		.thumb_func
 2030              		.type	CySysTickGetCallback, %function
 2031              	CySysTickGetCallback:
 2032              	.LFB48:
2771:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2033              		.loc 1 2771 0
 2034              		.cfi_startproc
 2035              	.LVL160:
2772:.\Generated_Source\PSoC4/CyLib.c **** }
 2036              		.loc 1 2772 0
 2037 0000 8000     		lsl	r0, r0, #2
 2038              	.LVL161:
 2039 0002 014B     		ldr	r3, .L174
 2040 0004 C058     		ldr	r0, [r0, r3]
2773:.\Generated_Source\PSoC4/CyLib.c **** 
 2041              		.loc 1 2773 0
 2042              		@ sp needed
 2043 0006 7047     		bx	lr
 2044              	.L175:
 2045              		.align	2
 2046              	.L174:
 2047 0008 00000000 		.word	.LANCHOR2
 2048              		.cfi_endproc
 2049              	.LFE48:
 2050              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2051              		.section	.text.CyGetUniqueId,"ax",%progbits
 2052              		.align	2
 2053              		.global	CyGetUniqueId
 2054              		.code	16
 2055              		.thumb_func
 2056              		.type	CyGetUniqueId, %function
 2057              	CyGetUniqueId:
 2058              	.LFB50:
2799:.\Generated_Source\PSoC4/CyLib.c **** 
2800:.\Generated_Source\PSoC4/CyLib.c **** 
2801:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2802:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2803:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2804:.\Generated_Source\PSoC4/CyLib.c **** *
2805:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2806:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2807:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2808:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2809:.\Generated_Source\PSoC4/CyLib.c **** *
2810:.\Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 89


2811:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2812:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2813:.\Generated_Source\PSoC4/CyLib.c **** *
2814:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2815:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2816:.\Generated_Source\PSoC4/CyLib.c **** {
 2059              		.loc 1 2816 0
 2060              		.cfi_startproc
 2061              	.LVL162:
2817:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2818:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2062              		.loc 1 2818 0
 2063 0000 134B     		ldr	r3, .L177
 2064 0002 1B78     		ldrb	r3, [r3]
 2065 0004 DAB2     		uxtb	r2, r3
 2066 0006 0260     		str	r2, [r0]
2819:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2067              		.loc 1 2819 0
 2068 0008 124B     		ldr	r3, .L177+4
 2069 000a 1B78     		ldrb	r3, [r3]
 2070 000c 1B02     		lsl	r3, r3, #8
 2071 000e 1343     		orr	r3, r2
 2072 0010 0360     		str	r3, [r0]
2820:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2073              		.loc 1 2820 0
 2074 0012 114A     		ldr	r2, .L177+8
 2075 0014 1278     		ldrb	r2, [r2]
 2076 0016 1204     		lsl	r2, r2, #16
 2077 0018 1343     		orr	r3, r2
 2078 001a 0360     		str	r3, [r0]
2821:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2079              		.loc 1 2821 0
 2080 001c 0F4A     		ldr	r2, .L177+12
 2081 001e 1278     		ldrb	r2, [r2]
 2082 0020 1206     		lsl	r2, r2, #24
 2083 0022 1343     		orr	r3, r2
 2084 0024 0360     		str	r3, [r0]
2822:.\Generated_Source\PSoC4/CyLib.c **** 
2823:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2085              		.loc 1 2823 0
 2086 0026 0E4B     		ldr	r3, .L177+16
 2087 0028 1B78     		ldrb	r3, [r3]
 2088 002a DAB2     		uxtb	r2, r3
 2089 002c 4260     		str	r2, [r0, #4]
2824:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2090              		.loc 1 2824 0
 2091 002e 0D4B     		ldr	r3, .L177+20
 2092 0030 1B78     		ldrb	r3, [r3]
 2093 0032 1B02     		lsl	r3, r3, #8
 2094 0034 1343     		orr	r3, r2
 2095 0036 4360     		str	r3, [r0, #4]
2825:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2096              		.loc 1 2825 0
 2097 0038 0B4A     		ldr	r2, .L177+24
 2098 003a 1278     		ldrb	r2, [r2]
 2099 003c 1204     		lsl	r2, r2, #16
 2100 003e 1343     		orr	r3, r2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 90


 2101 0040 4360     		str	r3, [r0, #4]
2826:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2102              		.loc 1 2826 0
 2103 0042 0A4A     		ldr	r2, .L177+28
 2104 0044 1278     		ldrb	r2, [r2]
 2105 0046 1206     		lsl	r2, r2, #24
 2106 0048 1343     		orr	r3, r2
 2107 004a 4360     		str	r3, [r0, #4]
2827:.\Generated_Source\PSoC4/CyLib.c **** #else
2828:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2829:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2830:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2831:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2832:.\Generated_Source\PSoC4/CyLib.c **** 
2833:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2834:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2835:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2836:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2837:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2838:.\Generated_Source\PSoC4/CyLib.c **** }
 2108              		.loc 1 2838 0
 2109              		@ sp needed
 2110 004c 7047     		bx	lr
 2111              	.L178:
 2112 004e C046     		.align	2
 2113              	.L177:
 2114 0050 78F2FF0F 		.word	268431992
 2115 0054 79F2FF0F 		.word	268431993
 2116 0058 7AF2FF0F 		.word	268431994
 2117 005c 7BF2FF0F 		.word	268431995
 2118 0060 7CF2FF0F 		.word	268431996
 2119 0064 7DF2FF0F 		.word	268431997
 2120 0068 7EF2FF0F 		.word	268431998
 2121 006c 7FF2FF0F 		.word	268431999
 2122              		.cfi_endproc
 2123              	.LFE50:
 2124              		.size	CyGetUniqueId, .-CyGetUniqueId
 2125              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2126              		.align	2
 2127              		.global	CySysSetRamAccessArbPriority
 2128              		.code	16
 2129              		.thumb_func
 2130              		.type	CySysSetRamAccessArbPriority, %function
 2131              	CySysSetRamAccessArbPriority:
 2132              	.LFB51:
2839:.\Generated_Source\PSoC4/CyLib.c **** 
2840:.\Generated_Source\PSoC4/CyLib.c **** 
2841:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
2842:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2843:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
2844:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2845:.\Generated_Source\PSoC4/CyLib.c ****     *
2846:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
2847:.\Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
2848:.\Generated_Source\PSoC4/CyLib.c ****     *  details.
2849:.\Generated_Source\PSoC4/CyLib.c ****     *
2850:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 91


2851:.\Generated_Source\PSoC4/CyLib.c ****     *
2852:.\Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2853:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2854:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2855:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2856:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2857:.\Generated_Source\PSoC4/CyLib.c ****     *
2858:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2859:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
2860:.\Generated_Source\PSoC4/CyLib.c ****     {
 2133              		.loc 1 2860 0
 2134              		.cfi_startproc
 2135              	.LVL163:
2861:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2862:.\Generated_Source\PSoC4/CyLib.c **** 
2863:.\Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2136              		.loc 1 2863 0
 2137 0000 0549     		ldr	r1, .L180
 2138 0002 0A68     		ldr	r2, [r1]
 2139 0004 054B     		ldr	r3, .L180+4
 2140 0006 1340     		and	r3, r2
 2141              	.LVL164:
2864:.\Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2142              		.loc 1 2864 0
 2143 0008 4004     		lsl	r0, r0, #17
 2144              	.LVL165:
 2145 000a C022     		mov	r2, #192
 2146 000c D202     		lsl	r2, r2, #11
 2147 000e 1040     		and	r0, r2
 2148 0010 1843     		orr	r0, r3
 2149              	.LVL166:
2865:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2150              		.loc 1 2865 0
 2151 0012 0860     		str	r0, [r1]
2866:.\Generated_Source\PSoC4/CyLib.c ****     }
 2152              		.loc 1 2866 0
 2153              		@ sp needed
 2154 0014 7047     		bx	lr
 2155              	.L181:
 2156 0016 C046     		.align	2
 2157              	.L180:
 2158 0018 38001040 		.word	1074790456
 2159 001c FFFFF9FF 		.word	-393217
 2160              		.cfi_endproc
 2161              	.LFE51:
 2162              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2163              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2164              		.align	2
 2165              		.global	CySysSetFlashAccessArbPriority
 2166              		.code	16
 2167              		.thumb_func
 2168              		.type	CySysSetFlashAccessArbPriority, %function
 2169              	CySysSetFlashAccessArbPriority:
 2170              	.LFB52:
2867:.\Generated_Source\PSoC4/CyLib.c **** 
2868:.\Generated_Source\PSoC4/CyLib.c **** 
2869:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 92


2870:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
2871:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2872:.\Generated_Source\PSoC4/CyLib.c ****     *
2873:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
2874:.\Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
2875:.\Generated_Source\PSoC4/CyLib.c ****     *  details.
2876:.\Generated_Source\PSoC4/CyLib.c ****     *
2877:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2878:.\Generated_Source\PSoC4/CyLib.c ****     *
2879:.\Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2880:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2881:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2882:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2883:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2884:.\Generated_Source\PSoC4/CyLib.c ****     *
2885:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2886:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
2887:.\Generated_Source\PSoC4/CyLib.c ****     {
 2171              		.loc 1 2887 0
 2172              		.cfi_startproc
 2173              	.LVL167:
2888:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2889:.\Generated_Source\PSoC4/CyLib.c **** 
2890:.\Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2174              		.loc 1 2890 0
 2175 0000 0549     		ldr	r1, .L183
 2176 0002 0A68     		ldr	r2, [r1]
 2177 0004 054B     		ldr	r3, .L183+4
 2178 0006 1340     		and	r3, r2
 2179              	.LVL168:
2891:.\Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2180              		.loc 1 2891 0
 2181 0008 4004     		lsl	r0, r0, #17
 2182              	.LVL169:
 2183 000a C022     		mov	r2, #192
 2184 000c D202     		lsl	r2, r2, #11
 2185 000e 1040     		and	r0, r2
 2186 0010 1843     		orr	r0, r3
 2187              	.LVL170:
2892:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2188              		.loc 1 2892 0
 2189 0012 0860     		str	r0, [r1]
2893:.\Generated_Source\PSoC4/CyLib.c ****     }
 2190              		.loc 1 2893 0
 2191              		@ sp needed
 2192 0014 7047     		bx	lr
 2193              	.L184:
 2194 0016 C046     		.align	2
 2195              	.L183:
 2196 0018 30001040 		.word	1074790448
 2197 001c FFFFF9FF 		.word	-393217
 2198              		.cfi_endproc
 2199              	.LFE52:
 2200              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2201              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2202              		.align	2
 2203              		.global	CySysSetDmacAccessArbPriority
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 93


 2204              		.code	16
 2205              		.thumb_func
 2206              		.type	CySysSetDmacAccessArbPriority, %function
 2207              	CySysSetDmacAccessArbPriority:
 2208              	.LFB53:
2894:.\Generated_Source\PSoC4/CyLib.c **** 
2895:.\Generated_Source\PSoC4/CyLib.c **** 
2896:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2897:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
2898:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2899:.\Generated_Source\PSoC4/CyLib.c ****     *
2900:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
2901:.\Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
2902:.\Generated_Source\PSoC4/CyLib.c ****     *  for more details.
2903:.\Generated_Source\PSoC4/CyLib.c ****     *
2904:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2905:.\Generated_Source\PSoC4/CyLib.c ****     *
2906:.\Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2907:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2908:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2909:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2910:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2911:.\Generated_Source\PSoC4/CyLib.c ****     *
2912:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2913:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
2914:.\Generated_Source\PSoC4/CyLib.c ****     {
 2209              		.loc 1 2914 0
 2210              		.cfi_startproc
 2211              	.LVL171:
2915:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2916:.\Generated_Source\PSoC4/CyLib.c **** 
2917:.\Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2212              		.loc 1 2917 0
 2213 0000 0549     		ldr	r1, .L186
 2214 0002 0A68     		ldr	r2, [r1]
 2215 0004 054B     		ldr	r3, .L186+4
 2216 0006 1340     		and	r3, r2
 2217              	.LVL172:
2918:.\Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2218              		.loc 1 2918 0
 2219 0008 4004     		lsl	r0, r0, #17
 2220              	.LVL173:
 2221 000a C022     		mov	r2, #192
 2222 000c D202     		lsl	r2, r2, #11
 2223 000e 1040     		and	r0, r2
 2224 0010 1843     		orr	r0, r3
 2225              	.LVL174:
2919:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2226              		.loc 1 2919 0
 2227 0012 0860     		str	r0, [r1]
2920:.\Generated_Source\PSoC4/CyLib.c ****     }
 2228              		.loc 1 2920 0
 2229              		@ sp needed
 2230 0014 7047     		bx	lr
 2231              	.L187:
 2232 0016 C046     		.align	2
 2233              	.L186:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 94


 2234 0018 3C001040 		.word	1074790460
 2235 001c FFFFF9FF 		.word	-393217
 2236              		.cfi_endproc
 2237              	.LFE53:
 2238              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2239              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2240              		.align	2
 2241              		.global	CySysSetPeripheralAccessArbPriority
 2242              		.code	16
 2243              		.thumb_func
 2244              		.type	CySysSetPeripheralAccessArbPriority, %function
 2245              	CySysSetPeripheralAccessArbPriority:
 2246              	.LFB54:
2921:.\Generated_Source\PSoC4/CyLib.c **** 
2922:.\Generated_Source\PSoC4/CyLib.c **** 
2923:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2924:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
2925:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2926:.\Generated_Source\PSoC4/CyLib.c ****     *
2927:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
2928:.\Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
2929:.\Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
2930:.\Generated_Source\PSoC4/CyLib.c ****     *
2931:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2932:.\Generated_Source\PSoC4/CyLib.c ****     *
2933:.\Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
2934:.\Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
2935:.\Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2936:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2937:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2938:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2939:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2940:.\Generated_Source\PSoC4/CyLib.c ****     *
2941:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2942:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
2943:.\Generated_Source\PSoC4/CyLib.c ****     {
 2247              		.loc 1 2943 0
 2248              		.cfi_startproc
 2249              	.LVL175:
 2250 0000 08B5     		push	{r3, lr}
 2251              		.cfi_def_cfa_offset 8
 2252              		.cfi_offset 3, -8
 2253              		.cfi_offset 14, -4
2944:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2945:.\Generated_Source\PSoC4/CyLib.c **** 
2946:.\Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2254              		.loc 1 2946 0
 2255 0002 0028     		cmp	r0, #0
 2256 0004 0AD1     		bne	.L189
2947:.\Generated_Source\PSoC4/CyLib.c ****         {
2948:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2257              		.loc 1 2948 0
 2258 0006 1448     		ldr	r0, .L193
 2259              	.LVL176:
 2260 0008 0268     		ldr	r2, [r0]
 2261 000a 144B     		ldr	r3, .L193+4
 2262 000c 1340     		and	r3, r2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 95


 2263              	.LVL177:
2949:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2264              		.loc 1 2949 0
 2265 000e 4904     		lsl	r1, r1, #17
 2266              	.LVL178:
 2267 0010 C022     		mov	r2, #192
 2268 0012 D202     		lsl	r2, r2, #11
 2269 0014 1140     		and	r1, r2
 2270 0016 1943     		orr	r1, r3
 2271              	.LVL179:
2950:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2272              		.loc 1 2950 0
 2273 0018 0160     		str	r1, [r0]
 2274 001a 1CE0     		b	.L188
 2275              	.LVL180:
 2276              	.L189:
2951:.\Generated_Source\PSoC4/CyLib.c ****         } else
2952:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
2953:.\Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2277              		.loc 1 2953 0
 2278 001c 0128     		cmp	r0, #1
 2279 001e 0AD1     		bne	.L191
2954:.\Generated_Source\PSoC4/CyLib.c ****         {
2955:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2280              		.loc 1 2955 0
 2281 0020 0F48     		ldr	r0, .L193+8
 2282              	.LVL181:
 2283 0022 0268     		ldr	r2, [r0]
 2284 0024 0D4B     		ldr	r3, .L193+4
 2285 0026 1340     		and	r3, r2
 2286              	.LVL182:
2956:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2287              		.loc 1 2956 0
 2288 0028 4904     		lsl	r1, r1, #17
 2289              	.LVL183:
 2290 002a C022     		mov	r2, #192
 2291 002c D202     		lsl	r2, r2, #11
 2292 002e 1140     		and	r1, r2
 2293 0030 1943     		orr	r1, r3
 2294              	.LVL184:
2957:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2295              		.loc 1 2957 0
 2296 0032 0160     		str	r1, [r0]
 2297 0034 0FE0     		b	.L188
 2298              	.LVL185:
 2299              	.L191:
2958:.\Generated_Source\PSoC4/CyLib.c ****         } else
2959:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
2960:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
2961:.\Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2300              		.loc 1 2961 0
 2301 0036 0228     		cmp	r0, #2
 2302 0038 0AD1     		bne	.L192
2962:.\Generated_Source\PSoC4/CyLib.c ****         {
2963:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2303              		.loc 1 2963 0
 2304 003a 0A48     		ldr	r0, .L193+12
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 96


 2305              	.LVL186:
 2306 003c 0268     		ldr	r2, [r0]
 2307 003e 074B     		ldr	r3, .L193+4
 2308 0040 1340     		and	r3, r2
 2309              	.LVL187:
2964:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2310              		.loc 1 2964 0
 2311 0042 4904     		lsl	r1, r1, #17
 2312              	.LVL188:
 2313 0044 C022     		mov	r2, #192
 2314 0046 D202     		lsl	r2, r2, #11
 2315 0048 1140     		and	r1, r2
 2316 004a 1943     		orr	r1, r3
 2317              	.LVL189:
2965:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2318              		.loc 1 2965 0
 2319 004c 0160     		str	r1, [r0]
 2320 004e 02E0     		b	.L188
 2321              	.LVL190:
 2322              	.L192:
2966:.\Generated_Source\PSoC4/CyLib.c ****         } else
2967:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
2968:.\Generated_Source\PSoC4/CyLib.c ****         {
2969:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
2970:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2323              		.loc 1 2970 0 discriminator 1
 2324 0050 0020     		mov	r0, #0
 2325              	.LVL191:
 2326 0052 FFF7FEFF 		bl	CyHalt
 2327              	.LVL192:
 2328              	.L188:
2971:.\Generated_Source\PSoC4/CyLib.c ****         }
2972:.\Generated_Source\PSoC4/CyLib.c ****     }
 2329              		.loc 1 2972 0
 2330              		@ sp needed
 2331 0056 08BD     		pop	{r3, pc}
 2332              	.L194:
 2333              		.align	2
 2334              	.L193:
 2335 0058 00011040 		.word	1074790656
 2336 005c FFFFF9FF 		.word	-393217
 2337 0060 04011040 		.word	1074790660
 2338 0064 08011040 		.word	1074790664
 2339              		.cfi_endproc
 2340              	.LFE54:
 2341              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2342              		.global	cyImoFreqMhz2Reg
 2343              		.global	CySysTickInitVar
 2344              		.global	cydelay32kMs
 2345              		.global	cydelayFreqMhz
 2346              		.global	cydelayFreqKhz
 2347              		.global	cydelayFreqHz
 2348              		.section	.rodata
 2349              		.align	2
 2350              		.set	.LANCHOR1,. + 0
 2351              		.type	cyImoFreqMhz2Reg, %object
 2352              		.size	cyImoFreqMhz2Reg, 46
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 97


 2353              	cyImoFreqMhz2Reg:
 2354 0000 03       		.byte	3
 2355 0001 04       		.byte	4
 2356 0002 05       		.byte	5
 2357 0003 06       		.byte	6
 2358 0004 07       		.byte	7
 2359 0005 08       		.byte	8
 2360 0006 09       		.byte	9
 2361 0007 0A       		.byte	10
 2362 0008 0B       		.byte	11
 2363 0009 0C       		.byte	12
 2364 000a 0E       		.byte	14
 2365 000b 0F       		.byte	15
 2366 000c 10       		.byte	16
 2367 000d 11       		.byte	17
 2368 000e 12       		.byte	18
 2369 000f 13       		.byte	19
 2370 0010 14       		.byte	20
 2371 0011 15       		.byte	21
 2372 0012 16       		.byte	22
 2373 0013 17       		.byte	23
 2374 0014 18       		.byte	24
 2375 0015 19       		.byte	25
 2376 0016 1B       		.byte	27
 2377 0017 1C       		.byte	28
 2378 0018 1D       		.byte	29
 2379 0019 1E       		.byte	30
 2380 001a 1F       		.byte	31
 2381 001b 20       		.byte	32
 2382 001c 21       		.byte	33
 2383 001d 22       		.byte	34
 2384 001e 23       		.byte	35
 2385 001f 25       		.byte	37
 2386 0020 26       		.byte	38
 2387 0021 27       		.byte	39
 2388 0022 28       		.byte	40
 2389 0023 29       		.byte	41
 2390 0024 2A       		.byte	42
 2391 0025 2B       		.byte	43
 2392 0026 2E       		.byte	46
 2393 0027 2F       		.byte	47
 2394 0028 30       		.byte	48
 2395 0029 31       		.byte	49
 2396 002a 32       		.byte	50
 2397 002b 33       		.byte	51
 2398 002c 34       		.byte	52
 2399 002d 35       		.byte	53
 2400 002e 0000     		.data
 2401              		.align	2
 2402              		.set	.LANCHOR0,. + 0
 2403              		.type	cydelay32kMs, %object
 2404              		.size	cydelay32kMs, 4
 2405              	cydelay32kMs:
 2406 0000 0000C05D 		.word	1572864000
 2407              		.type	cydelayFreqKhz, %object
 2408              		.size	cydelayFreqKhz, 4
 2409              	cydelayFreqKhz:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 98


 2410 0004 80BB0000 		.word	48000
 2411              		.type	cydelayFreqMhz, %object
 2412              		.size	cydelayFreqMhz, 1
 2413              	cydelayFreqMhz:
 2414 0008 30       		.byte	48
 2415 0009 000000   		.space	3
 2416              		.type	cydelayFreqHz, %object
 2417              		.size	cydelayFreqHz, 4
 2418              	cydelayFreqHz:
 2419 000c 006CDC02 		.word	48000000
 2420              		.bss
 2421              		.align	2
 2422              		.set	.LANCHOR2,. + 0
 2423              		.type	CySysTickCallbacks, %object
 2424              		.size	CySysTickCallbacks, 20
 2425              	CySysTickCallbacks:
 2426 0000 00000000 		.space	20
 2426      00000000 
 2426      00000000 
 2426      00000000 
 2426      00000000 
 2427              		.type	CySysTickInitVar, %object
 2428              		.size	CySysTickInitVar, 4
 2429              	CySysTickInitVar:
 2430 0014 00000000 		.space	4
 2431              		.text
 2432              	.Letext0:
 2433              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2434              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2435              		.section	.debug_info,"",%progbits
 2436              	.Ldebug_info0:
 2437 0000 F60C0000 		.4byte	0xcf6
 2438 0004 0400     		.2byte	0x4
 2439 0006 00000000 		.4byte	.Ldebug_abbrev0
 2440 000a 04       		.byte	0x4
 2441 000b 01       		.uleb128 0x1
 2442 000c 4A040000 		.4byte	.LASF114
 2443 0010 01       		.byte	0x1
 2444 0011 29030000 		.4byte	.LASF115
 2445 0015 04070000 		.4byte	.LASF116
 2446 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2447 001d 00000000 		.4byte	0
 2448 0021 00000000 		.4byte	.Ldebug_line0
 2449 0025 02       		.uleb128 0x2
 2450 0026 01       		.byte	0x1
 2451 0027 06       		.byte	0x6
 2452 0028 04010000 		.4byte	.LASF0
 2453 002c 02       		.uleb128 0x2
 2454 002d 01       		.byte	0x1
 2455 002e 08       		.byte	0x8
 2456 002f 91050000 		.4byte	.LASF1
 2457 0033 02       		.uleb128 0x2
 2458 0034 02       		.byte	0x2
 2459 0035 05       		.byte	0x5
 2460 0036 9F050000 		.4byte	.LASF2
 2461 003a 02       		.uleb128 0x2
 2462 003b 02       		.byte	0x2
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 99


 2463 003c 07       		.byte	0x7
 2464 003d E8020000 		.4byte	.LASF3
 2465 0041 02       		.uleb128 0x2
 2466 0042 04       		.byte	0x4
 2467 0043 05       		.byte	0x5
 2468 0044 43010000 		.4byte	.LASF4
 2469 0048 02       		.uleb128 0x2
 2470 0049 04       		.byte	0x4
 2471 004a 07       		.byte	0x7
 2472 004b 70020000 		.4byte	.LASF5
 2473 004f 02       		.uleb128 0x2
 2474 0050 08       		.byte	0x8
 2475 0051 05       		.byte	0x5
 2476 0052 F6000000 		.4byte	.LASF6
 2477 0056 02       		.uleb128 0x2
 2478 0057 08       		.byte	0x8
 2479 0058 07       		.byte	0x7
 2480 0059 7A000000 		.4byte	.LASF7
 2481 005d 03       		.uleb128 0x3
 2482 005e 04       		.byte	0x4
 2483 005f 05       		.byte	0x5
 2484 0060 696E7400 		.ascii	"int\000"
 2485 0064 02       		.uleb128 0x2
 2486 0065 04       		.byte	0x4
 2487 0066 07       		.byte	0x7
 2488 0067 54020000 		.4byte	.LASF8
 2489 006b 04       		.uleb128 0x4
 2490 006c 6E010000 		.4byte	.LASF9
 2491 0070 02       		.byte	0x2
 2492 0071 9801     		.2byte	0x198
 2493 0073 2C000000 		.4byte	0x2c
 2494 0077 04       		.uleb128 0x4
 2495 0078 17000000 		.4byte	.LASF10
 2496 007c 02       		.byte	0x2
 2497 007d 9901     		.2byte	0x199
 2498 007f 3A000000 		.4byte	0x3a
 2499 0083 04       		.uleb128 0x4
 2500 0084 B1010000 		.4byte	.LASF11
 2501 0088 02       		.byte	0x2
 2502 0089 9A01     		.2byte	0x19a
 2503 008b 48000000 		.4byte	0x48
 2504 008f 02       		.uleb128 0x2
 2505 0090 04       		.byte	0x4
 2506 0091 04       		.byte	0x4
 2507 0092 F7040000 		.4byte	.LASF12
 2508 0096 02       		.uleb128 0x2
 2509 0097 08       		.byte	0x8
 2510 0098 04       		.byte	0x4
 2511 0099 8D010000 		.4byte	.LASF13
 2512 009d 02       		.uleb128 0x2
 2513 009e 01       		.byte	0x1
 2514 009f 08       		.byte	0x8
 2515 00a0 E9050000 		.4byte	.LASF14
 2516 00a4 04       		.uleb128 0x4
 2517 00a5 40000000 		.4byte	.LASF15
 2518 00a9 02       		.byte	0x2
 2519 00aa 3A02     		.2byte	0x23a
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 100


 2520 00ac 48000000 		.4byte	0x48
 2521 00b0 04       		.uleb128 0x4
 2522 00b1 5E050000 		.4byte	.LASF16
 2523 00b5 02       		.byte	0x2
 2524 00b6 4202     		.2byte	0x242
 2525 00b8 BC000000 		.4byte	0xbc
 2526 00bc 05       		.uleb128 0x5
 2527 00bd 6B000000 		.4byte	0x6b
 2528 00c1 04       		.uleb128 0x4
 2529 00c2 99030000 		.4byte	.LASF17
 2530 00c6 02       		.byte	0x2
 2531 00c7 4402     		.2byte	0x244
 2532 00c9 CD000000 		.4byte	0xcd
 2533 00cd 05       		.uleb128 0x5
 2534 00ce 83000000 		.4byte	0x83
 2535 00d2 04       		.uleb128 0x4
 2536 00d3 EE050000 		.4byte	.LASF18
 2537 00d7 02       		.byte	0x2
 2538 00d8 5402     		.2byte	0x254
 2539 00da DE000000 		.4byte	0xde
 2540 00de 06       		.uleb128 0x6
 2541 00df 04       		.byte	0x4
 2542 00e0 E4000000 		.4byte	0xe4
 2543 00e4 07       		.uleb128 0x7
 2544 00e5 02       		.uleb128 0x2
 2545 00e6 04       		.byte	0x4
 2546 00e7 07       		.byte	0x7
 2547 00e8 C2030000 		.4byte	.LASF19
 2548 00ec 08       		.uleb128 0x8
 2549 00ed 22050000 		.4byte	.LASF20
 2550 00f1 03       		.byte	0x3
 2551 00f2 F3       		.byte	0xf3
 2552 00f3 DE000000 		.4byte	0xde
 2553 00f7 09       		.uleb128 0x9
 2554 00f8 41070000 		.4byte	.LASF21
 2555 00fc 01       		.byte	0x1
 2556 00fd 68       		.byte	0x68
 2557 00fe 00000000 		.4byte	.LFB2
 2558 0102 14000000 		.4byte	.LFE2-.LFB2
 2559 0106 01       		.uleb128 0x1
 2560 0107 9C       		.byte	0x9c
 2561 0108 09       		.uleb128 0x9
 2562 0109 9D020000 		.4byte	.LASF22
 2563 010d 01       		.byte	0x1
 2564 010e 88       		.byte	0x88
 2565 010f 00000000 		.4byte	.LFB3
 2566 0113 10000000 		.4byte	.LFE3-.LFB3
 2567 0117 01       		.uleb128 0x1
 2568 0118 9C       		.byte	0x9c
 2569 0119 0A       		.uleb128 0xa
 2570 011a 27000000 		.4byte	.LASF26
 2571 011e 01       		.byte	0x1
 2572 011f AA01     		.2byte	0x1aa
 2573 0121 00000000 		.4byte	.LFB4
 2574 0125 20000000 		.4byte	.LFE4-.LFB4
 2575 0129 01       		.uleb128 0x1
 2576 012a 9C       		.byte	0x9c
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 101


 2577 012b 72010000 		.4byte	0x172
 2578 012f 0B       		.uleb128 0xb
 2579 0130 C7050000 		.4byte	.LASF28
 2580 0134 01       		.byte	0x1
 2581 0135 AA01     		.2byte	0x1aa
 2582 0137 83000000 		.4byte	0x83
 2583 013b 00000000 		.4byte	.LLST0
 2584 013f 0C       		.uleb128 0xc
 2585 0140 21010000 		.4byte	.LASF23
 2586 0144 01       		.byte	0x1
 2587 0145 AC01     		.2byte	0x1ac
 2588 0147 6B000000 		.4byte	0x6b
 2589 014b 2C000000 		.4byte	.LLST1
 2590 014f 0C       		.uleb128 0xc
 2591 0150 70070000 		.4byte	.LASF24
 2592 0154 01       		.byte	0x1
 2593 0155 AD01     		.2byte	0x1ad
 2594 0157 83000000 		.4byte	0x83
 2595 015b 3F000000 		.4byte	.LLST2
 2596 015f 0D       		.uleb128 0xd
 2597 0160 08000000 		.4byte	.LVL1
 2598 0164 D00C0000 		.4byte	0xcd0
 2599 0168 0D       		.uleb128 0xd
 2600 0169 1A000000 		.4byte	.LVL4
 2601 016d DB0C0000 		.4byte	0xcdb
 2602 0171 00       		.byte	0
 2603 0172 0E       		.uleb128 0xe
 2604 0173 DA010000 		.4byte	.LASF31
 2605 0177 01       		.byte	0x1
 2606 0178 CF01     		.2byte	0x1cf
 2607 017a 83000000 		.4byte	0x83
 2608 017e 00000000 		.4byte	.LFB5
 2609 0182 1C000000 		.4byte	.LFE5-.LFB5
 2610 0186 01       		.uleb128 0x1
 2611 0187 9C       		.byte	0x9c
 2612 0188 BF010000 		.4byte	0x1bf
 2613 018c 0C       		.uleb128 0xc
 2614 018d 21010000 		.4byte	.LASF23
 2615 0191 01       		.byte	0x1
 2616 0192 D101     		.2byte	0x1d1
 2617 0194 6B000000 		.4byte	0x6b
 2618 0198 5D000000 		.4byte	.LLST3
 2619 019c 0C       		.uleb128 0xc
 2620 019d 11040000 		.4byte	.LASF25
 2621 01a1 01       		.byte	0x1
 2622 01a2 D201     		.2byte	0x1d2
 2623 01a4 83000000 		.4byte	0x83
 2624 01a8 70000000 		.4byte	.LLST4
 2625 01ac 0D       		.uleb128 0xd
 2626 01ad 06000000 		.4byte	.LVL6
 2627 01b1 D00C0000 		.4byte	0xcd0
 2628 01b5 0D       		.uleb128 0xd
 2629 01b6 12000000 		.4byte	.LVL8
 2630 01ba DB0C0000 		.4byte	0xcdb
 2631 01be 00       		.byte	0
 2632 01bf 0A       		.uleb128 0xa
 2633 01c0 0B060000 		.4byte	.LASF27
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 102


 2634 01c4 01       		.byte	0x1
 2635 01c5 0602     		.2byte	0x206
 2636 01c7 00000000 		.4byte	.LFB6
 2637 01cb 28000000 		.4byte	.LFE6-.LFB6
 2638 01cf 01       		.uleb128 0x1
 2639 01d0 9C       		.byte	0x9c
 2640 01d1 08020000 		.4byte	0x208
 2641 01d5 0B       		.uleb128 0xb
 2642 01d6 E8060000 		.4byte	.LASF29
 2643 01da 01       		.byte	0x1
 2644 01db 0602     		.2byte	0x206
 2645 01dd 83000000 		.4byte	0x83
 2646 01e1 8E000000 		.4byte	.LLST5
 2647 01e5 0C       		.uleb128 0xc
 2648 01e6 21010000 		.4byte	.LASF23
 2649 01ea 01       		.byte	0x1
 2650 01eb 0802     		.2byte	0x208
 2651 01ed 6B000000 		.4byte	0x6b
 2652 01f1 BA000000 		.4byte	.LLST6
 2653 01f5 0D       		.uleb128 0xd
 2654 01f6 08000000 		.4byte	.LVL11
 2655 01fa D00C0000 		.4byte	0xcd0
 2656 01fe 0D       		.uleb128 0xd
 2657 01ff 1E000000 		.4byte	.LVL13
 2658 0203 DB0C0000 		.4byte	0xcdb
 2659 0207 00       		.byte	0
 2660 0208 0F       		.uleb128 0xf
 2661 0209 A2060000 		.4byte	.LASF30
 2662 020d 01       		.byte	0x1
 2663 020e 0504     		.2byte	0x405
 2664 0210 00000000 		.4byte	.LFB9
 2665 0214 24000000 		.4byte	.LFE9-.LFB9
 2666 0218 01       		.uleb128 0x1
 2667 0219 9C       		.byte	0x9c
 2668 021a 0E       		.uleb128 0xe
 2669 021b B8010000 		.4byte	.LASF32
 2670 021f 01       		.byte	0x1
 2671 0220 2504     		.2byte	0x425
 2672 0222 83000000 		.4byte	0x83
 2673 0226 00000000 		.4byte	.LFB10
 2674 022a 10000000 		.4byte	.LFE10-.LFB10
 2675 022e 01       		.uleb128 0x1
 2676 022f 9C       		.byte	0x9c
 2677 0230 43020000 		.4byte	0x243
 2678 0234 10       		.uleb128 0x10
 2679 0235 A4070000 		.4byte	.LASF33
 2680 0239 01       		.byte	0x1
 2681 023a 2704     		.2byte	0x427
 2682 023c 83000000 		.4byte	0x83
 2683 0240 01       		.uleb128 0x1
 2684 0241 50       		.byte	0x50
 2685 0242 00       		.byte	0
 2686 0243 0F       		.uleb128 0xf
 2687 0244 83060000 		.4byte	.LASF34
 2688 0248 01       		.byte	0x1
 2689 0249 CF07     		.2byte	0x7cf
 2690 024b 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 103


 2691 024f 20000000 		.4byte	.LFE13-.LFB13
 2692 0253 01       		.uleb128 0x1
 2693 0254 9C       		.byte	0x9c
 2694 0255 11       		.uleb128 0x11
 2695 0256 82020000 		.4byte	.LASF85
 2696 025a 01       		.byte	0x1
 2697 025b E107     		.2byte	0x7e1
 2698 025d 83000000 		.4byte	0x83
 2699 0261 00000000 		.4byte	.LFB14
 2700 0265 10000000 		.4byte	.LFE14-.LFB14
 2701 0269 01       		.uleb128 0x1
 2702 026a 9C       		.byte	0x9c
 2703 026b 0F       		.uleb128 0xf
 2704 026c 9A010000 		.4byte	.LASF35
 2705 0270 01       		.byte	0x1
 2706 0271 F107     		.2byte	0x7f1
 2707 0273 00000000 		.4byte	.LFB15
 2708 0277 0C000000 		.4byte	.LFE15-.LFB15
 2709 027b 01       		.uleb128 0x1
 2710 027c 9C       		.byte	0x9c
 2711 027d 0E       		.uleb128 0xe
 2712 027e D4020000 		.4byte	.LASF36
 2713 0282 01       		.byte	0x1
 2714 0283 0B08     		.2byte	0x80b
 2715 0285 83000000 		.4byte	0x83
 2716 0289 00000000 		.4byte	.LFB16
 2717 028d 14000000 		.4byte	.LFE16-.LFB16
 2718 0291 01       		.uleb128 0x1
 2719 0292 9C       		.byte	0x9c
 2720 0293 B6020000 		.4byte	0x2b6
 2721 0297 0B       		.uleb128 0xb
 2722 0298 E2050000 		.4byte	.LASF37
 2723 029c 01       		.byte	0x1
 2724 029d 0B08     		.2byte	0x80b
 2725 029f 83000000 		.4byte	0x83
 2726 02a3 CD000000 		.4byte	.LLST7
 2727 02a7 10       		.uleb128 0x10
 2728 02a8 AE030000 		.4byte	.LASF38
 2729 02ac 01       		.byte	0x1
 2730 02ad 0D08     		.2byte	0x80d
 2731 02af 83000000 		.4byte	0x83
 2732 02b3 01       		.uleb128 0x1
 2733 02b4 50       		.byte	0x50
 2734 02b5 00       		.byte	0
 2735 02b6 0E       		.uleb128 0xe
 2736 02b7 57000000 		.4byte	.LASF39
 2737 02bb 01       		.byte	0x1
 2738 02bc 2208     		.2byte	0x822
 2739 02be 83000000 		.4byte	0x83
 2740 02c2 00000000 		.4byte	.LFB17
 2741 02c6 10000000 		.4byte	.LFE17-.LFB17
 2742 02ca 01       		.uleb128 0x1
 2743 02cb 9C       		.byte	0x9c
 2744 02cc DF020000 		.4byte	0x2df
 2745 02d0 10       		.uleb128 0x10
 2746 02d1 1E000000 		.4byte	.LASF40
 2747 02d5 01       		.byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 104


 2748 02d6 2408     		.2byte	0x824
 2749 02d8 83000000 		.4byte	0x83
 2750 02dc 01       		.uleb128 0x1
 2751 02dd 50       		.byte	0x50
 2752 02de 00       		.byte	0
 2753 02df 0A       		.uleb128 0xa
 2754 02e0 A2000000 		.4byte	.LASF41
 2755 02e4 01       		.byte	0x1
 2756 02e5 3908     		.2byte	0x839
 2757 02e7 00000000 		.4byte	.LFB18
 2758 02eb 0C000000 		.4byte	.LFE18-.LFB18
 2759 02ef 01       		.uleb128 0x1
 2760 02f0 9C       		.byte	0x9c
 2761 02f1 04030000 		.4byte	0x304
 2762 02f5 12       		.uleb128 0x12
 2763 02f6 D5010000 		.4byte	.LASF42
 2764 02fa 01       		.byte	0x1
 2765 02fb 3908     		.2byte	0x839
 2766 02fd 83000000 		.4byte	0x83
 2767 0301 01       		.uleb128 0x1
 2768 0302 50       		.byte	0x50
 2769 0303 00       		.byte	0
 2770 0304 0A       		.uleb128 0xa
 2771 0305 A9050000 		.4byte	.LASF43
 2772 0309 01       		.byte	0x1
 2773 030a F008     		.2byte	0x8f0
 2774 030c 00000000 		.4byte	.LFB25
 2775 0310 14000000 		.4byte	.LFE25-.LFB25
 2776 0314 01       		.uleb128 0x1
 2777 0315 9C       		.byte	0x9c
 2778 0316 2B030000 		.4byte	0x32b
 2779 031a 0B       		.uleb128 0xb
 2780 031b CE010000 		.4byte	.LASF44
 2781 031f 01       		.byte	0x1
 2782 0320 F008     		.2byte	0x8f0
 2783 0322 6B000000 		.4byte	0x6b
 2784 0326 EB000000 		.4byte	.LLST8
 2785 032a 00       		.byte	0
 2786 032b 0E       		.uleb128 0xe
 2787 032c E8000000 		.4byte	.LASF45
 2788 0330 01       		.byte	0x1
 2789 0331 0209     		.2byte	0x902
 2790 0333 6B000000 		.4byte	0x6b
 2791 0337 00000000 		.4byte	.LFB26
 2792 033b 18000000 		.4byte	.LFE26-.LFB26
 2793 033f 01       		.uleb128 0x1
 2794 0340 9C       		.byte	0x9c
 2795 0341 56030000 		.4byte	0x356
 2796 0345 0B       		.uleb128 0xb
 2797 0346 CE010000 		.4byte	.LASF44
 2798 034a 01       		.byte	0x1
 2799 034b 0209     		.2byte	0x902
 2800 034d 6B000000 		.4byte	0x6b
 2801 0351 0C010000 		.4byte	.LLST9
 2802 0355 00       		.byte	0
 2803 0356 0A       		.uleb128 0xa
 2804 0357 4C010000 		.4byte	.LASF46
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 105


 2805 035b 01       		.byte	0x1
 2806 035c 1209     		.2byte	0x912
 2807 035e 00000000 		.4byte	.LFB27
 2808 0362 14000000 		.4byte	.LFE27-.LFB27
 2809 0366 01       		.uleb128 0x1
 2810 0367 9C       		.byte	0x9c
 2811 0368 7D030000 		.4byte	0x37d
 2812 036c 0B       		.uleb128 0xb
 2813 036d CE010000 		.4byte	.LASF44
 2814 0371 01       		.byte	0x1
 2815 0372 1209     		.2byte	0x912
 2816 0374 6B000000 		.4byte	0x6b
 2817 0378 2D010000 		.4byte	.LLST10
 2818 037c 00       		.byte	0
 2819 037d 0A       		.uleb128 0xa
 2820 037e C4020000 		.4byte	.LASF47
 2821 0382 01       		.byte	0x1
 2822 0383 2009     		.2byte	0x920
 2823 0385 00000000 		.4byte	.LFB28
 2824 0389 14000000 		.4byte	.LFE28-.LFB28
 2825 038d 01       		.uleb128 0x1
 2826 038e 9C       		.byte	0x9c
 2827 038f A4030000 		.4byte	0x3a4
 2828 0393 0B       		.uleb128 0xb
 2829 0394 CE010000 		.4byte	.LASF44
 2830 0398 01       		.byte	0x1
 2831 0399 2009     		.2byte	0x920
 2832 039b 6B000000 		.4byte	0x6b
 2833 039f 4E010000 		.4byte	.LLST11
 2834 03a3 00       		.byte	0
 2835 03a4 0A       		.uleb128 0xa
 2836 03a5 EF030000 		.4byte	.LASF48
 2837 03a9 01       		.byte	0x1
 2838 03aa 2F09     		.2byte	0x92f
 2839 03ac 00000000 		.4byte	.LFB29
 2840 03b0 14000000 		.4byte	.LFE29-.LFB29
 2841 03b4 01       		.uleb128 0x1
 2842 03b5 9C       		.byte	0x9c
 2843 03b6 CB030000 		.4byte	0x3cb
 2844 03ba 0B       		.uleb128 0xb
 2845 03bb CE010000 		.4byte	.LASF44
 2846 03bf 01       		.byte	0x1
 2847 03c0 2F09     		.2byte	0x92f
 2848 03c2 6B000000 		.4byte	0x6b
 2849 03c6 6F010000 		.4byte	.LLST12
 2850 03ca 00       		.byte	0
 2851 03cb 0A       		.uleb128 0xa
 2852 03cc 6D050000 		.4byte	.LASF49
 2853 03d0 01       		.byte	0x1
 2854 03d1 3E09     		.2byte	0x93e
 2855 03d3 00000000 		.4byte	.LFB30
 2856 03d7 04000000 		.4byte	.LFE30-.LFB30
 2857 03db 01       		.uleb128 0x1
 2858 03dc 9C       		.byte	0x9c
 2859 03dd F0030000 		.4byte	0x3f0
 2860 03e1 12       		.uleb128 0x12
 2861 03e2 E2050000 		.4byte	.LASF37
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 106


 2862 03e6 01       		.byte	0x1
 2863 03e7 3E09     		.2byte	0x93e
 2864 03e9 6B000000 		.4byte	0x6b
 2865 03ed 01       		.uleb128 0x1
 2866 03ee 50       		.byte	0x50
 2867 03ef 00       		.byte	0
 2868 03f0 0A       		.uleb128 0xa
 2869 03f1 F0060000 		.4byte	.LASF50
 2870 03f5 01       		.byte	0x1
 2871 03f6 4D04     		.2byte	0x44d
 2872 03f8 00000000 		.4byte	.LFB11
 2873 03fc 38000000 		.4byte	.LFE11-.LFB11
 2874 0400 01       		.uleb128 0x1
 2875 0401 9C       		.byte	0x9c
 2876 0402 48040000 		.4byte	0x448
 2877 0406 0B       		.uleb128 0xb
 2878 0407 E8060000 		.4byte	.LASF29
 2879 040b 01       		.byte	0x1
 2880 040c 4D04     		.2byte	0x44d
 2881 040e 83000000 		.4byte	0x83
 2882 0412 90010000 		.4byte	.LLST13
 2883 0416 0C       		.uleb128 0xc
 2884 0417 21010000 		.4byte	.LASF23
 2885 041b 01       		.byte	0x1
 2886 041c 4F04     		.2byte	0x44f
 2887 041e 6B000000 		.4byte	0x6b
 2888 0422 E0010000 		.4byte	.LLST14
 2889 0426 0D       		.uleb128 0xd
 2890 0427 14000000 		.4byte	.LVL33
 2891 042b D00C0000 		.4byte	0xcd0
 2892 042f 0D       		.uleb128 0xd
 2893 0430 26000000 		.4byte	.LVL35
 2894 0434 DB0C0000 		.4byte	0xcdb
 2895 0438 13       		.uleb128 0x13
 2896 0439 2E000000 		.4byte	.LVL38
 2897 043d CB030000 		.4byte	0x3cb
 2898 0441 14       		.uleb128 0x14
 2899 0442 01       		.uleb128 0x1
 2900 0443 50       		.byte	0x50
 2901 0444 01       		.uleb128 0x1
 2902 0445 30       		.byte	0x30
 2903 0446 00       		.byte	0
 2904 0447 00       		.byte	0
 2905 0448 0E       		.uleb128 0xe
 2906 0449 87030000 		.4byte	.LASF51
 2907 044d 01       		.byte	0x1
 2908 044e 5208     		.2byte	0x852
 2909 0450 D2000000 		.4byte	0xd2
 2910 0454 00000000 		.4byte	.LFB19
 2911 0458 20000000 		.4byte	.LFE19-.LFB19
 2912 045c 01       		.uleb128 0x1
 2913 045d 9C       		.byte	0x9c
 2914 045e B0040000 		.4byte	0x4b0
 2915 0462 0B       		.uleb128 0xb
 2916 0463 CE010000 		.4byte	.LASF44
 2917 0467 01       		.byte	0x1
 2918 0468 5208     		.2byte	0x852
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 107


 2919 046a 6B000000 		.4byte	0x6b
 2920 046e F3010000 		.4byte	.LLST15
 2921 0472 0B       		.uleb128 0xb
 2922 0473 01040000 		.4byte	.LASF52
 2923 0477 01       		.byte	0x1
 2924 0478 5208     		.2byte	0x852
 2925 047a D2000000 		.4byte	0xd2
 2926 047e 14020000 		.4byte	.LLST16
 2927 0482 10       		.uleb128 0x10
 2928 0483 49000000 		.4byte	.LASF53
 2929 0487 01       		.byte	0x1
 2930 0488 5408     		.2byte	0x854
 2931 048a D2000000 		.4byte	0xd2
 2932 048e 01       		.uleb128 0x1
 2933 048f 50       		.byte	0x50
 2934 0490 15       		.uleb128 0x15
 2935 0491 00000000 		.4byte	.LASF54
 2936 0495 01       		.byte	0x1
 2937 0496 5508     		.2byte	0x855
 2938 0498 B0040000 		.4byte	0x4b0
 2939 049c 00000020 		.4byte	0x20000000
 2940 04a0 13       		.uleb128 0x13
 2941 04a1 10000000 		.4byte	.LVL42
 2942 04a5 CB030000 		.4byte	0x3cb
 2943 04a9 14       		.uleb128 0x14
 2944 04aa 01       		.uleb128 0x1
 2945 04ab 50       		.byte	0x50
 2946 04ac 01       		.uleb128 0x1
 2947 04ad 30       		.byte	0x30
 2948 04ae 00       		.byte	0
 2949 04af 00       		.byte	0
 2950 04b0 06       		.uleb128 0x6
 2951 04b1 04       		.byte	0x4
 2952 04b2 D2000000 		.4byte	0xd2
 2953 04b6 0E       		.uleb128 0xe
 2954 04b7 B5050000 		.4byte	.LASF55
 2955 04bb 01       		.byte	0x1
 2956 04bc 7408     		.2byte	0x874
 2957 04be D2000000 		.4byte	0xd2
 2958 04c2 00000000 		.4byte	.LFB20
 2959 04c6 1C000000 		.4byte	.LFE20-.LFB20
 2960 04ca 01       		.uleb128 0x1
 2961 04cb 9C       		.byte	0x9c
 2962 04cc 00050000 		.4byte	0x500
 2963 04d0 0B       		.uleb128 0xb
 2964 04d1 CE010000 		.4byte	.LASF44
 2965 04d5 01       		.byte	0x1
 2966 04d6 7408     		.2byte	0x874
 2967 04d8 6B000000 		.4byte	0x6b
 2968 04dc 40020000 		.4byte	.LLST17
 2969 04e0 15       		.uleb128 0x15
 2970 04e1 00000000 		.4byte	.LASF54
 2971 04e5 01       		.byte	0x1
 2972 04e6 7608     		.2byte	0x876
 2973 04e8 B0040000 		.4byte	0x4b0
 2974 04ec 00000020 		.4byte	0x20000000
 2975 04f0 13       		.uleb128 0x13
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 108


 2976 04f1 0E000000 		.4byte	.LVL48
 2977 04f5 CB030000 		.4byte	0x3cb
 2978 04f9 14       		.uleb128 0x14
 2979 04fa 01       		.uleb128 0x1
 2980 04fb 50       		.byte	0x50
 2981 04fc 01       		.uleb128 0x1
 2982 04fd 30       		.byte	0x30
 2983 04fe 00       		.byte	0
 2984 04ff 00       		.byte	0
 2985 0500 0E       		.uleb128 0xe
 2986 0501 1A030000 		.4byte	.LASF56
 2987 0505 01       		.byte	0x1
 2988 0506 8A08     		.2byte	0x88a
 2989 0508 D2000000 		.4byte	0xd2
 2990 050c 00000000 		.4byte	.LFB21
 2991 0510 24000000 		.4byte	.LFE21-.LFB21
 2992 0514 01       		.uleb128 0x1
 2993 0515 9C       		.byte	0x9c
 2994 0516 68050000 		.4byte	0x568
 2995 051a 0B       		.uleb128 0xb
 2996 051b CE010000 		.4byte	.LASF44
 2997 051f 01       		.byte	0x1
 2998 0520 8A08     		.2byte	0x88a
 2999 0522 6B000000 		.4byte	0x6b
 3000 0526 61020000 		.4byte	.LLST18
 3001 052a 0B       		.uleb128 0xb
 3002 052b 01040000 		.4byte	.LASF52
 3003 052f 01       		.byte	0x1
 3004 0530 8A08     		.2byte	0x88a
 3005 0532 D2000000 		.4byte	0xd2
 3006 0536 82020000 		.4byte	.LLST19
 3007 053a 10       		.uleb128 0x10
 3008 053b 49000000 		.4byte	.LASF53
 3009 053f 01       		.byte	0x1
 3010 0540 8C08     		.2byte	0x88c
 3011 0542 D2000000 		.4byte	0xd2
 3012 0546 01       		.uleb128 0x1
 3013 0547 50       		.byte	0x50
 3014 0548 15       		.uleb128 0x15
 3015 0549 00000000 		.4byte	.LASF54
 3016 054d 01       		.byte	0x1
 3017 054e 8D08     		.2byte	0x88d
 3018 0550 B0040000 		.4byte	0x4b0
 3019 0554 00000020 		.4byte	0x20000000
 3020 0558 13       		.uleb128 0x13
 3021 0559 10000000 		.4byte	.LVL52
 3022 055d CB030000 		.4byte	0x3cb
 3023 0561 14       		.uleb128 0x14
 3024 0562 01       		.uleb128 0x1
 3025 0563 50       		.byte	0x50
 3026 0564 01       		.uleb128 0x1
 3027 0565 30       		.byte	0x30
 3028 0566 00       		.byte	0
 3029 0567 00       		.byte	0
 3030 0568 0E       		.uleb128 0xe
 3031 0569 34050000 		.4byte	.LASF57
 3032 056d 01       		.byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 109


 3033 056e A608     		.2byte	0x8a6
 3034 0570 D2000000 		.4byte	0xd2
 3035 0574 00000000 		.4byte	.LFB22
 3036 0578 20000000 		.4byte	.LFE22-.LFB22
 3037 057c 01       		.uleb128 0x1
 3038 057d 9C       		.byte	0x9c
 3039 057e B2050000 		.4byte	0x5b2
 3040 0582 0B       		.uleb128 0xb
 3041 0583 CE010000 		.4byte	.LASF44
 3042 0587 01       		.byte	0x1
 3043 0588 A608     		.2byte	0x8a6
 3044 058a 6B000000 		.4byte	0x6b
 3045 058e AE020000 		.4byte	.LLST20
 3046 0592 15       		.uleb128 0x15
 3047 0593 00000000 		.4byte	.LASF54
 3048 0597 01       		.byte	0x1
 3049 0598 A808     		.2byte	0x8a8
 3050 059a B0040000 		.4byte	0x4b0
 3051 059e 00000020 		.4byte	0x20000000
 3052 05a2 13       		.uleb128 0x13
 3053 05a3 0E000000 		.4byte	.LVL58
 3054 05a7 CB030000 		.4byte	0x3cb
 3055 05ab 14       		.uleb128 0x14
 3056 05ac 01       		.uleb128 0x1
 3057 05ad 50       		.byte	0x50
 3058 05ae 01       		.uleb128 0x1
 3059 05af 30       		.byte	0x30
 3060 05b0 00       		.byte	0
 3061 05b1 00       		.byte	0
 3062 05b2 0A       		.uleb128 0xa
 3063 05b3 E6040000 		.4byte	.LASF58
 3064 05b7 01       		.byte	0x1
 3065 05b8 B908     		.2byte	0x8b9
 3066 05ba 00000000 		.4byte	.LFB23
 3067 05be 4C000000 		.4byte	.LFE23-.LFB23
 3068 05c2 01       		.uleb128 0x1
 3069 05c3 9C       		.byte	0x9c
 3070 05c4 51060000 		.4byte	0x651
 3071 05c8 0B       		.uleb128 0xb
 3072 05c9 CE010000 		.4byte	.LASF44
 3073 05cd 01       		.byte	0x1
 3074 05ce B908     		.2byte	0x8b9
 3075 05d0 6B000000 		.4byte	0x6b
 3076 05d4 CF020000 		.4byte	.LLST21
 3077 05d8 0B       		.uleb128 0xb
 3078 05d9 4A030000 		.4byte	.LASF59
 3079 05dd 01       		.byte	0x1
 3080 05de B908     		.2byte	0x8b9
 3081 05e0 6B000000 		.4byte	0x6b
 3082 05e4 F0020000 		.4byte	.LLST22
 3083 05e8 0C       		.uleb128 0xc
 3084 05e9 21010000 		.4byte	.LASF23
 3085 05ed 01       		.byte	0x1
 3086 05ee BB08     		.2byte	0x8bb
 3087 05f0 6B000000 		.4byte	0x6b
 3088 05f4 11030000 		.4byte	.LLST23
 3089 05f8 0C       		.uleb128 0xc
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 110


 3090 05f9 94010000 		.4byte	.LASF60
 3091 05fd 01       		.byte	0x1
 3092 05fe BC08     		.2byte	0x8bc
 3093 0600 83000000 		.4byte	0x83
 3094 0604 24030000 		.4byte	.LLST24
 3095 0608 0C       		.uleb128 0xc
 3096 0609 1E020000 		.4byte	.LASF61
 3097 060d 01       		.byte	0x1
 3098 060e BD08     		.2byte	0x8bd
 3099 0610 83000000 		.4byte	0x83
 3100 0614 37030000 		.4byte	.LLST25
 3101 0618 16       		.uleb128 0x16
 3102 0619 10000000 		.4byte	.LVL61
 3103 061d CB030000 		.4byte	0x3cb
 3104 0621 2B060000 		.4byte	0x62b
 3105 0625 14       		.uleb128 0x14
 3106 0626 01       		.uleb128 0x1
 3107 0627 50       		.byte	0x50
 3108 0628 01       		.uleb128 0x1
 3109 0629 30       		.byte	0x30
 3110 062a 00       		.byte	0
 3111 062b 16       		.uleb128 0x16
 3112 062c 1A000000 		.4byte	.LVL62
 3113 0630 CB030000 		.4byte	0x3cb
 3114 0634 3E060000 		.4byte	0x63e
 3115 0638 14       		.uleb128 0x14
 3116 0639 01       		.uleb128 0x1
 3117 063a 50       		.byte	0x50
 3118 063b 01       		.uleb128 0x1
 3119 063c 30       		.byte	0x30
 3120 063d 00       		.byte	0
 3121 063e 0D       		.uleb128 0xd
 3122 063f 26000000 		.4byte	.LVL64
 3123 0643 D00C0000 		.4byte	0xcd0
 3124 0647 0D       		.uleb128 0xd
 3125 0648 44000000 		.4byte	.LVL69
 3126 064c DB0C0000 		.4byte	0xcdb
 3127 0650 00       		.byte	0
 3128 0651 0E       		.uleb128 0xe
 3129 0652 F2010000 		.4byte	.LASF62
 3130 0656 01       		.byte	0x1
 3131 0657 DB08     		.2byte	0x8db
 3132 0659 6B000000 		.4byte	0x6b
 3133 065d 00000000 		.4byte	.LFB24
 3134 0661 2C000000 		.4byte	.LFE24-.LFB24
 3135 0665 01       		.uleb128 0x1
 3136 0666 9C       		.byte	0x9c
 3137 0667 9B060000 		.4byte	0x69b
 3138 066b 0B       		.uleb128 0xb
 3139 066c CE010000 		.4byte	.LASF44
 3140 0670 01       		.byte	0x1
 3141 0671 DB08     		.2byte	0x8db
 3142 0673 6B000000 		.4byte	0x6b
 3143 0677 55030000 		.4byte	.LLST26
 3144 067b 0C       		.uleb128 0xc
 3145 067c 4A030000 		.4byte	.LASF59
 3146 0680 01       		.byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 111


 3147 0681 DD08     		.2byte	0x8dd
 3148 0683 6B000000 		.4byte	0x6b
 3149 0687 76030000 		.4byte	.LLST27
 3150 068b 13       		.uleb128 0x13
 3151 068c 0E000000 		.4byte	.LVL73
 3152 0690 CB030000 		.4byte	0x3cb
 3153 0694 14       		.uleb128 0x14
 3154 0695 01       		.uleb128 0x1
 3155 0696 50       		.byte	0x50
 3156 0697 01       		.uleb128 0x1
 3157 0698 30       		.byte	0x30
 3158 0699 00       		.byte	0
 3159 069a 00       		.byte	0
 3160 069b 0F       		.uleb128 0xf
 3161 069c BF000000 		.4byte	.LASF63
 3162 06a0 01       		.byte	0x1
 3163 06a1 5609     		.2byte	0x956
 3164 06a3 00000000 		.4byte	.LFB31
 3165 06a7 18000000 		.4byte	.LFE31-.LFB31
 3166 06ab 01       		.uleb128 0x1
 3167 06ac 9C       		.byte	0x9c
 3168 06ad 0A       		.uleb128 0xa
 3169 06ae 61060000 		.4byte	.LASF64
 3170 06b2 01       		.byte	0x1
 3171 06b3 6A09     		.2byte	0x96a
 3172 06b5 00000000 		.4byte	.LFB32
 3173 06b9 30000000 		.4byte	.LFE32-.LFB32
 3174 06bd 01       		.uleb128 0x1
 3175 06be 9C       		.byte	0x9c
 3176 06bf E6060000 		.4byte	0x6e6
 3177 06c3 0B       		.uleb128 0xb
 3178 06c4 43050000 		.4byte	.LASF65
 3179 06c8 01       		.byte	0x1
 3180 06c9 6A09     		.2byte	0x96a
 3181 06cb 83000000 		.4byte	0x83
 3182 06cf 89030000 		.4byte	.LLST28
 3183 06d3 0D       		.uleb128 0xd
 3184 06d4 0E000000 		.4byte	.LVL78
 3185 06d8 EC0C0000 		.4byte	0xcec
 3186 06dc 0D       		.uleb128 0xd
 3187 06dd 26000000 		.4byte	.LVL80
 3188 06e1 EC0C0000 		.4byte	0xcec
 3189 06e5 00       		.byte	0
 3190 06e6 0A       		.uleb128 0xa
 3191 06e7 83010000 		.4byte	.LASF66
 3192 06eb 01       		.byte	0x1
 3193 06ec 8109     		.2byte	0x981
 3194 06ee 00000000 		.4byte	.LFB33
 3195 06f2 14000000 		.4byte	.LFE33-.LFB33
 3196 06f6 01       		.uleb128 0x1
 3197 06f7 9C       		.byte	0x9c
 3198 06f8 16070000 		.4byte	0x716
 3199 06fc 0B       		.uleb128 0xb
 3200 06fd 63070000 		.4byte	.LASF67
 3201 0701 01       		.byte	0x1
 3202 0702 8109     		.2byte	0x981
 3203 0704 77000000 		.4byte	0x77
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 112


 3204 0708 A7030000 		.4byte	.LLST29
 3205 070c 0D       		.uleb128 0xd
 3206 070d 0C000000 		.4byte	.LVL84
 3207 0711 EC0C0000 		.4byte	0xcec
 3208 0715 00       		.byte	0
 3209 0716 0A       		.uleb128 0xa
 3210 0717 53030000 		.4byte	.LASF68
 3211 071b 01       		.byte	0x1
 3212 071c 4002     		.2byte	0x240
 3213 071e 00000000 		.4byte	.LFB7
 3214 0722 64010000 		.4byte	.LFE7-.LFB7
 3215 0726 01       		.uleb128 0x1
 3216 0727 9C       		.byte	0x9c
 3217 0728 17080000 		.4byte	0x817
 3218 072c 0B       		.uleb128 0xb
 3219 072d 10010000 		.4byte	.LASF69
 3220 0731 01       		.byte	0x1
 3221 0732 4002     		.2byte	0x240
 3222 0734 83000000 		.4byte	0x83
 3223 0738 C8030000 		.4byte	.LLST30
 3224 073c 0C       		.uleb128 0xc
 3225 073d 0F000000 		.4byte	.LASF70
 3226 0741 01       		.byte	0x1
 3227 0742 4602     		.2byte	0x246
 3228 0744 6B000000 		.4byte	0x6b
 3229 0748 1D040000 		.4byte	.LLST31
 3230 074c 0C       		.uleb128 0xc
 3231 074d 09040000 		.4byte	.LASF71
 3232 0751 01       		.byte	0x1
 3233 0752 4702     		.2byte	0x247
 3234 0754 6B000000 		.4byte	0x6b
 3235 0758 5C040000 		.4byte	.LLST32
 3236 075c 0C       		.uleb128 0xc
 3237 075d 52070000 		.4byte	.LASF72
 3238 0761 01       		.byte	0x1
 3239 0762 4802     		.2byte	0x248
 3240 0764 6B000000 		.4byte	0x6b
 3241 0768 9B040000 		.4byte	.LLST33
 3242 076c 0C       		.uleb128 0xc
 3243 076d 65000000 		.4byte	.LASF73
 3244 0771 01       		.byte	0x1
 3245 0772 4902     		.2byte	0x249
 3246 0774 6B000000 		.4byte	0x6b
 3247 0778 AE040000 		.4byte	.LLST34
 3248 077c 0C       		.uleb128 0xc
 3249 077d 4A060000 		.4byte	.LASF74
 3250 0781 01       		.byte	0x1
 3251 0782 4A02     		.2byte	0x24a
 3252 0784 6B000000 		.4byte	0x6b
 3253 0788 CD040000 		.4byte	.LLST35
 3254 078c 0C       		.uleb128 0xc
 3255 078d 21010000 		.4byte	.LASF23
 3256 0791 01       		.byte	0x1
 3257 0792 5502     		.2byte	0x255
 3258 0794 6B000000 		.4byte	0x6b
 3259 0798 FF040000 		.4byte	.LLST36
 3260 079c 0D       		.uleb128 0xd
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 113


 3261 079d 10000000 		.4byte	.LVL86
 3262 07a1 D00C0000 		.4byte	0xcd0
 3263 07a5 16       		.uleb128 0x16
 3264 07a6 B0000000 		.4byte	.LVL104
 3265 07aa EC0C0000 		.4byte	0xcec
 3266 07ae B8070000 		.4byte	0x7b8
 3267 07b2 14       		.uleb128 0x14
 3268 07b3 01       		.uleb128 0x1
 3269 07b4 50       		.byte	0x50
 3270 07b5 01       		.uleb128 0x1
 3271 07b6 35       		.byte	0x35
 3272 07b7 00       		.byte	0
 3273 07b8 16       		.uleb128 0x16
 3274 07b9 CE000000 		.4byte	.LVL107
 3275 07bd EC0C0000 		.4byte	0xcec
 3276 07c1 CB070000 		.4byte	0x7cb
 3277 07c5 14       		.uleb128 0x14
 3278 07c6 01       		.uleb128 0x1
 3279 07c7 50       		.byte	0x50
 3280 07c8 01       		.uleb128 0x1
 3281 07c9 35       		.byte	0x35
 3282 07ca 00       		.byte	0
 3283 07cb 16       		.uleb128 0x16
 3284 07cc EE000000 		.4byte	.LVL113
 3285 07d0 E6060000 		.4byte	0x6e6
 3286 07d4 DE070000 		.4byte	0x7de
 3287 07d8 14       		.uleb128 0x14
 3288 07d9 01       		.uleb128 0x1
 3289 07da 50       		.byte	0x50
 3290 07db 01       		.uleb128 0x1
 3291 07dc 35       		.byte	0x35
 3292 07dd 00       		.byte	0
 3293 07de 16       		.uleb128 0x16
 3294 07df 00010000 		.4byte	.LVL114
 3295 07e3 EC0C0000 		.4byte	0xcec
 3296 07e7 F1070000 		.4byte	0x7f1
 3297 07eb 14       		.uleb128 0x14
 3298 07ec 01       		.uleb128 0x1
 3299 07ed 50       		.byte	0x50
 3300 07ee 01       		.uleb128 0x1
 3301 07ef 35       		.byte	0x35
 3302 07f0 00       		.byte	0
 3303 07f1 16       		.uleb128 0x16
 3304 07f2 08010000 		.4byte	.LVL116
 3305 07f6 CB030000 		.4byte	0x3cb
 3306 07fa 04080000 		.4byte	0x804
 3307 07fe 14       		.uleb128 0x14
 3308 07ff 01       		.uleb128 0x1
 3309 0800 50       		.byte	0x50
 3310 0801 01       		.uleb128 0x1
 3311 0802 30       		.byte	0x30
 3312 0803 00       		.byte	0
 3313 0804 13       		.uleb128 0x13
 3314 0805 0E010000 		.4byte	.LVL117
 3315 0809 DB0C0000 		.4byte	0xcdb
 3316 080d 14       		.uleb128 0x14
 3317 080e 01       		.uleb128 0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 114


 3318 080f 50       		.byte	0x50
 3319 0810 04       		.uleb128 0x4
 3320 0811 91       		.byte	0x91
 3321 0812 5C       		.sleb128 -36
 3322 0813 94       		.byte	0x94
 3323 0814 01       		.byte	0x1
 3324 0815 00       		.byte	0
 3325 0816 00       		.byte	0
 3326 0817 0E       		.uleb128 0xe
 3327 0818 D1050000 		.4byte	.LASF75
 3328 081c 01       		.byte	0x1
 3329 081d D203     		.2byte	0x3d2
 3330 081f A4000000 		.4byte	0xa4
 3331 0823 00000000 		.4byte	.LFB8
 3332 0827 54000000 		.4byte	.LFE8-.LFB8
 3333 082b 01       		.uleb128 0x1
 3334 082c 9C       		.byte	0x9c
 3335 082d 6E080000 		.4byte	0x86e
 3336 0831 0B       		.uleb128 0xb
 3337 0832 DE060000 		.4byte	.LASF76
 3338 0836 01       		.byte	0x1
 3339 0837 D203     		.2byte	0x3d2
 3340 0839 83000000 		.4byte	0x83
 3341 083d 2B050000 		.4byte	.LLST37
 3342 0841 0C       		.uleb128 0xc
 3343 0842 AE030000 		.4byte	.LASF38
 3344 0846 01       		.byte	0x1
 3345 0847 D403     		.2byte	0x3d4
 3346 0849 A4000000 		.4byte	0xa4
 3347 084d 49050000 		.4byte	.LLST38
 3348 0851 16       		.uleb128 0x16
 3349 0852 2E000000 		.4byte	.LVL122
 3350 0856 E6060000 		.4byte	0x6e6
 3351 085a 64080000 		.4byte	0x864
 3352 085e 14       		.uleb128 0x14
 3353 085f 01       		.uleb128 0x1
 3354 0860 50       		.byte	0x50
 3355 0861 01       		.uleb128 0x1
 3356 0862 31       		.byte	0x31
 3357 0863 00       		.byte	0
 3358 0864 0D       		.uleb128 0xd
 3359 0865 32000000 		.4byte	.LVL123
 3360 0869 1A020000 		.4byte	0x21a
 3361 086d 00       		.byte	0
 3362 086e 0A       		.uleb128 0xa
 3363 086f 13050000 		.4byte	.LASF77
 3364 0873 01       		.byte	0x1
 3365 0874 B107     		.2byte	0x7b1
 3366 0876 00000000 		.4byte	.LFB12
 3367 087a 44000000 		.4byte	.LFE12-.LFB12
 3368 087e 01       		.uleb128 0x1
 3369 087f 9C       		.byte	0x9c
 3370 0880 B3080000 		.4byte	0x8b3
 3371 0884 0B       		.uleb128 0xb
 3372 0885 63050000 		.4byte	.LASF78
 3373 0889 01       		.byte	0x1
 3374 088a B107     		.2byte	0x7b1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 115


 3375 088c 83000000 		.4byte	0x83
 3376 0890 68050000 		.4byte	.LLST39
 3377 0894 16       		.uleb128 0x16
 3378 0895 2E000000 		.4byte	.LVL130
 3379 0899 E6060000 		.4byte	0x6e6
 3380 089d A9080000 		.4byte	0x8a9
 3381 08a1 14       		.uleb128 0x14
 3382 08a2 01       		.uleb128 0x1
 3383 08a3 50       		.byte	0x50
 3384 08a4 03       		.uleb128 0x3
 3385 08a5 0A       		.byte	0xa
 3386 08a6 E803     		.2byte	0x3e8
 3387 08a8 00       		.byte	0
 3388 08a9 0D       		.uleb128 0xd
 3389 08aa 32000000 		.4byte	.LVL131
 3390 08ae 6B020000 		.4byte	0x26b
 3391 08b2 00       		.byte	0
 3392 08b3 17       		.uleb128 0x17
 3393 08b4 15010000 		.4byte	.LASF79
 3394 08b8 01       		.byte	0x1
 3395 08b9 8F09     		.2byte	0x98f
 3396 08bb 00000000 		.4byte	.LFB34
 3397 08bf 4C000000 		.4byte	.LFE34-.LFB34
 3398 08c3 01       		.uleb128 0x1
 3399 08c4 9C       		.byte	0x9c
 3400 08c5 DA080000 		.4byte	0x8da
 3401 08c9 0B       		.uleb128 0xb
 3402 08ca 10010000 		.4byte	.LASF69
 3403 08ce 01       		.byte	0x1
 3404 08cf 8F09     		.2byte	0x98f
 3405 08d1 83000000 		.4byte	0x83
 3406 08d5 94050000 		.4byte	.LLST40
 3407 08d9 00       		.byte	0
 3408 08da 0F       		.uleb128 0xf
 3409 08db D0060000 		.4byte	.LASF80
 3410 08df 01       		.byte	0x1
 3411 08e0 FC09     		.2byte	0x9fc
 3412 08e2 00000000 		.4byte	.LFB38
 3413 08e6 10000000 		.4byte	.LFE38-.LFB38
 3414 08ea 01       		.uleb128 0x1
 3415 08eb 9C       		.byte	0x9c
 3416 08ec 0F       		.uleb128 0xf
 3417 08ed CF000000 		.4byte	.LASF81
 3418 08f1 01       		.byte	0x1
 3419 08f2 0C0A     		.2byte	0xa0c
 3420 08f4 00000000 		.4byte	.LFB39
 3421 08f8 10000000 		.4byte	.LFE39-.LFB39
 3422 08fc 01       		.uleb128 0x1
 3423 08fd 9C       		.byte	0x9c
 3424 08fe 0A       		.uleb128 0xa
 3425 08ff FB050000 		.4byte	.LASF82
 3426 0903 01       		.byte	0x1
 3427 0904 EB09     		.2byte	0x9eb
 3428 0906 00000000 		.4byte	.LFB37
 3429 090a 18000000 		.4byte	.LFE37-.LFB37
 3430 090e 01       		.uleb128 0x1
 3431 090f 9C       		.byte	0x9c
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 116


 3432 0910 1E090000 		.4byte	0x91e
 3433 0914 0D       		.uleb128 0xd
 3434 0915 06000000 		.4byte	.LVL136
 3435 0919 EC080000 		.4byte	0x8ec
 3436 091d 00       		.byte	0
 3437 091e 0F       		.uleb128 0xf
 3438 091f 69060000 		.4byte	.LASF83
 3439 0923 01       		.byte	0x1
 3440 0924 1C0A     		.2byte	0xa1c
 3441 0926 00000000 		.4byte	.LFB40
 3442 092a 10000000 		.4byte	.LFE40-.LFB40
 3443 092e 01       		.uleb128 0x1
 3444 092f 9C       		.byte	0x9c
 3445 0930 0A       		.uleb128 0xa
 3446 0931 77070000 		.4byte	.LASF84
 3447 0935 01       		.byte	0x1
 3448 0936 2D0A     		.2byte	0xa2d
 3449 0938 00000000 		.4byte	.LFB41
 3450 093c 10000000 		.4byte	.LFE41-.LFB41
 3451 0940 01       		.uleb128 0x1
 3452 0941 9C       		.byte	0x9c
 3453 0942 57090000 		.4byte	0x957
 3454 0946 0B       		.uleb128 0xb
 3455 0947 1E020000 		.4byte	.LASF61
 3456 094b 01       		.byte	0x1
 3457 094c 2D0A     		.2byte	0xa2d
 3458 094e 83000000 		.4byte	0x83
 3459 0952 B5050000 		.4byte	.LLST41
 3460 0956 00       		.byte	0
 3461 0957 11       		.uleb128 0x11
 3462 0958 30010000 		.4byte	.LASF86
 3463 095c 01       		.byte	0x1
 3464 095d 3D0A     		.2byte	0xa3d
 3465 095f 83000000 		.4byte	0x83
 3466 0963 00000000 		.4byte	.LFB42
 3467 0967 10000000 		.4byte	.LFE42-.LFB42
 3468 096b 01       		.uleb128 0x1
 3469 096c 9C       		.byte	0x9c
 3470 096d 11       		.uleb128 0x11
 3471 096e 38040000 		.4byte	.LASF87
 3472 0972 01       		.byte	0x1
 3473 0973 4D0A     		.2byte	0xa4d
 3474 0975 83000000 		.4byte	0x83
 3475 0979 00000000 		.4byte	.LFB43
 3476 097d 10000000 		.4byte	.LFE43-.LFB43
 3477 0981 01       		.uleb128 0x1
 3478 0982 9C       		.byte	0x9c
 3479 0983 0A       		.uleb128 0xa
 3480 0984 02030000 		.4byte	.LASF88
 3481 0988 01       		.byte	0x1
 3482 0989 6D0A     		.2byte	0xa6d
 3483 098b 00000000 		.4byte	.LFB44
 3484 098f 20000000 		.4byte	.LFE44-.LFB44
 3485 0993 01       		.uleb128 0x1
 3486 0994 9C       		.byte	0x9c
 3487 0995 A8090000 		.4byte	0x9a8
 3488 0999 12       		.uleb128 0x12
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 117


 3489 099a 24020000 		.4byte	.LASF89
 3490 099e 01       		.byte	0x1
 3491 099f 6D0A     		.2byte	0xa6d
 3492 09a1 83000000 		.4byte	0x83
 3493 09a5 01       		.uleb128 0x1
 3494 09a6 50       		.byte	0x50
 3495 09a7 00       		.byte	0
 3496 09a8 11       		.uleb128 0x11
 3497 09a9 3E020000 		.4byte	.LASF90
 3498 09ad 01       		.byte	0x1
 3499 09ae 8A0A     		.2byte	0xa8a
 3500 09b0 83000000 		.4byte	0x83
 3501 09b4 00000000 		.4byte	.LFB45
 3502 09b8 10000000 		.4byte	.LFE45-.LFB45
 3503 09bc 01       		.uleb128 0x1
 3504 09bd 9C       		.byte	0x9c
 3505 09be 18       		.uleb128 0x18
 3506 09bf 8A070000 		.4byte	.LASF117
 3507 09c3 01       		.byte	0x1
 3508 09c4 DF0A     		.2byte	0xadf
 3509 09c6 00000000 		.4byte	.LFB49
 3510 09ca 28000000 		.4byte	.LFE49-.LFB49
 3511 09ce 01       		.uleb128 0x1
 3512 09cf 9C       		.byte	0x9c
 3513 09d0 EC090000 		.4byte	0x9ec
 3514 09d4 19       		.uleb128 0x19
 3515 09d5 6900     		.ascii	"i\000"
 3516 09d7 01       		.byte	0x1
 3517 09d8 E10A     		.2byte	0xae1
 3518 09da 83000000 		.4byte	0x83
 3519 09de D6050000 		.4byte	.LLST42
 3520 09e2 0D       		.uleb128 0xd
 3521 09e3 06000000 		.4byte	.LVL140
 3522 09e7 A8090000 		.4byte	0x9a8
 3523 09eb 00       		.byte	0
 3524 09ec 0F       		.uleb128 0xf
 3525 09ed 61020000 		.4byte	.LASF91
 3526 09f1 01       		.byte	0x1
 3527 09f2 970A     		.2byte	0xa97
 3528 09f4 00000000 		.4byte	.LFB46
 3529 09f8 0C000000 		.4byte	.LFE46-.LFB46
 3530 09fc 01       		.uleb128 0x1
 3531 09fd 9C       		.byte	0x9c
 3532 09fe 17       		.uleb128 0x17
 3533 09ff 10020000 		.4byte	.LASF92
 3534 0a03 01       		.byte	0x1
 3535 0a04 CC09     		.2byte	0x9cc
 3536 0a06 00000000 		.4byte	.LFB36
 3537 0a0a 4C000000 		.4byte	.LFE36-.LFB36
 3538 0a0e 01       		.uleb128 0x1
 3539 0a0f 9C       		.byte	0x9c
 3540 0a10 730A0000 		.4byte	0xa73
 3541 0a14 19       		.uleb128 0x19
 3542 0a15 6900     		.ascii	"i\000"
 3543 0a17 01       		.byte	0x1
 3544 0a18 CE09     		.2byte	0x9ce
 3545 0a1a 83000000 		.4byte	0x83
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 118


 3546 0a1e F4050000 		.4byte	.LLST43
 3547 0a22 16       		.uleb128 0x16
 3548 0a23 1C000000 		.4byte	.LVL150
 3549 0a27 48040000 		.4byte	0x448
 3550 0a2b 3E0A0000 		.4byte	0xa3e
 3551 0a2f 14       		.uleb128 0x14
 3552 0a30 01       		.uleb128 0x1
 3553 0a31 51       		.byte	0x51
 3554 0a32 05       		.uleb128 0x5
 3555 0a33 03       		.byte	0x3
 3556 0a34 00000000 		.4byte	CySysTickServiceCallbacks
 3557 0a38 14       		.uleb128 0x14
 3558 0a39 01       		.uleb128 0x1
 3559 0a3a 50       		.byte	0x50
 3560 0a3b 01       		.uleb128 0x1
 3561 0a3c 3F       		.byte	0x3f
 3562 0a3d 00       		.byte	0
 3563 0a3e 16       		.uleb128 0x16
 3564 0a3f 22000000 		.4byte	.LVL151
 3565 0a43 83090000 		.4byte	0x983
 3566 0a47 510A0000 		.4byte	0xa51
 3567 0a4b 14       		.uleb128 0x14
 3568 0a4c 01       		.uleb128 0x1
 3569 0a4d 50       		.byte	0x50
 3570 0a4e 01       		.uleb128 0x1
 3571 0a4f 31       		.byte	0x31
 3572 0a50 00       		.byte	0
 3573 0a51 0D       		.uleb128 0xd
 3574 0a52 32000000 		.4byte	.LVL153
 3575 0a56 30090000 		.4byte	0x930
 3576 0a5a 0D       		.uleb128 0xd
 3577 0a5b 36000000 		.4byte	.LVL154
 3578 0a5f EC090000 		.4byte	0x9ec
 3579 0a63 13       		.uleb128 0x13
 3580 0a64 3C000000 		.4byte	.LVL155
 3581 0a68 04030000 		.4byte	0x304
 3582 0a6c 14       		.uleb128 0x14
 3583 0a6d 01       		.uleb128 0x1
 3584 0a6e 50       		.byte	0x50
 3585 0a6f 01       		.uleb128 0x1
 3586 0a70 3F       		.byte	0x3f
 3587 0a71 00       		.byte	0
 3588 0a72 00       		.byte	0
 3589 0a73 0A       		.uleb128 0xa
 3590 0a74 9F030000 		.4byte	.LASF93
 3591 0a78 01       		.byte	0x1
 3592 0a79 AF09     		.2byte	0x9af
 3593 0a7b 00000000 		.4byte	.LFB35
 3594 0a7f 20000000 		.4byte	.LFE35-.LFB35
 3595 0a83 01       		.uleb128 0x1
 3596 0a84 9C       		.byte	0x9c
 3597 0a85 9C0A0000 		.4byte	0xa9c
 3598 0a89 0D       		.uleb128 0xd
 3599 0a8a 0E000000 		.4byte	.LVL156
 3600 0a8e FE090000 		.4byte	0x9fe
 3601 0a92 0D       		.uleb128 0xd
 3602 0a93 18000000 		.4byte	.LVL157
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 119


 3603 0a97 FE080000 		.4byte	0x8fe
 3604 0a9b 00       		.byte	0
 3605 0a9c 0E       		.uleb128 0xe
 3606 0a9d 22060000 		.4byte	.LASF94
 3607 0aa1 01       		.byte	0x1
 3608 0aa2 BA0A     		.2byte	0xaba
 3609 0aa4 EC000000 		.4byte	0xec
 3610 0aa8 00000000 		.4byte	.LFB47
 3611 0aac 10000000 		.4byte	.LFE47-.LFB47
 3612 0ab0 01       		.uleb128 0x1
 3613 0ab1 9C       		.byte	0x9c
 3614 0ab2 E30A0000 		.4byte	0xae3
 3615 0ab6 0B       		.uleb128 0xb
 3616 0ab7 CE010000 		.4byte	.LASF44
 3617 0abb 01       		.byte	0x1
 3618 0abc BA0A     		.2byte	0xaba
 3619 0abe 83000000 		.4byte	0x83
 3620 0ac2 13060000 		.4byte	.LLST44
 3621 0ac6 12       		.uleb128 0x12
 3622 0ac7 1E040000 		.4byte	.LASF95
 3623 0acb 01       		.byte	0x1
 3624 0acc BA0A     		.2byte	0xaba
 3625 0ace EC000000 		.4byte	0xec
 3626 0ad2 01       		.uleb128 0x1
 3627 0ad3 51       		.byte	0x51
 3628 0ad4 10       		.uleb128 0x10
 3629 0ad5 50000000 		.4byte	.LASF96
 3630 0ad9 01       		.byte	0x1
 3631 0ada BC0A     		.2byte	0xabc
 3632 0adc EC000000 		.4byte	0xec
 3633 0ae0 01       		.uleb128 0x1
 3634 0ae1 50       		.byte	0x50
 3635 0ae2 00       		.byte	0
 3636 0ae3 0E       		.uleb128 0xe
 3637 0ae4 59010000 		.4byte	.LASF97
 3638 0ae8 01       		.byte	0x1
 3639 0ae9 D20A     		.2byte	0xad2
 3640 0aeb EC000000 		.4byte	0xec
 3641 0aef 00000000 		.4byte	.LFB48
 3642 0af3 0C000000 		.4byte	.LFE48-.LFB48
 3643 0af7 01       		.uleb128 0x1
 3644 0af8 9C       		.byte	0x9c
 3645 0af9 0E0B0000 		.4byte	0xb0e
 3646 0afd 0B       		.uleb128 0xb
 3647 0afe CE010000 		.4byte	.LASF44
 3648 0b02 01       		.byte	0x1
 3649 0b03 D20A     		.2byte	0xad2
 3650 0b05 83000000 		.4byte	0x83
 3651 0b09 34060000 		.4byte	.LLST45
 3652 0b0d 00       		.byte	0
 3653 0b0e 0A       		.uleb128 0xa
 3654 0b0f 30020000 		.4byte	.LASF98
 3655 0b13 01       		.byte	0x1
 3656 0b14 FF0A     		.2byte	0xaff
 3657 0b16 00000000 		.4byte	.LFB50
 3658 0b1a 70000000 		.4byte	.LFE50-.LFB50
 3659 0b1e 01       		.uleb128 0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 120


 3660 0b1f 9C       		.byte	0x9c
 3661 0b20 330B0000 		.4byte	0xb33
 3662 0b24 12       		.uleb128 0x12
 3663 0b25 58060000 		.4byte	.LASF99
 3664 0b29 01       		.byte	0x1
 3665 0b2a FF0A     		.2byte	0xaff
 3666 0b2c 330B0000 		.4byte	0xb33
 3667 0b30 01       		.uleb128 0x1
 3668 0b31 50       		.byte	0x50
 3669 0b32 00       		.byte	0
 3670 0b33 06       		.uleb128 0x6
 3671 0b34 04       		.byte	0x4
 3672 0b35 83000000 		.4byte	0x83
 3673 0b39 0A       		.uleb128 0xa
 3674 0b3a 74050000 		.4byte	.LASF100
 3675 0b3e 01       		.byte	0x1
 3676 0b3f 2B0B     		.2byte	0xb2b
 3677 0b41 00000000 		.4byte	.LFB51
 3678 0b45 20000000 		.4byte	.LFE51-.LFB51
 3679 0b49 01       		.uleb128 0x1
 3680 0b4a 9C       		.byte	0x9c
 3681 0b4b 700B0000 		.4byte	0xb70
 3682 0b4f 0B       		.uleb128 0xb
 3683 0b50 BB030000 		.4byte	.LASF101
 3684 0b54 01       		.byte	0x1
 3685 0b55 2B0B     		.2byte	0xb2b
 3686 0b57 83000000 		.4byte	0x83
 3687 0b5b 55060000 		.4byte	.LLST46
 3688 0b5f 0C       		.uleb128 0xc
 3689 0b60 FB020000 		.4byte	.LASF102
 3690 0b64 01       		.byte	0x1
 3691 0b65 2D0B     		.2byte	0xb2d
 3692 0b67 83000000 		.4byte	0x83
 3693 0b6b 76060000 		.4byte	.LLST47
 3694 0b6f 00       		.byte	0
 3695 0b70 0A       		.uleb128 0xa
 3696 0b71 68030000 		.4byte	.LASF103
 3697 0b75 01       		.byte	0x1
 3698 0b76 460B     		.2byte	0xb46
 3699 0b78 00000000 		.4byte	.LFB52
 3700 0b7c 20000000 		.4byte	.LFE52-.LFB52
 3701 0b80 01       		.uleb128 0x1
 3702 0b81 9C       		.byte	0x9c
 3703 0b82 A70B0000 		.4byte	0xba7
 3704 0b86 0B       		.uleb128 0xb
 3705 0b87 BB030000 		.4byte	.LASF101
 3706 0b8b 01       		.byte	0x1
 3707 0b8c 460B     		.2byte	0xb46
 3708 0b8e 83000000 		.4byte	0x83
 3709 0b92 94060000 		.4byte	.LLST48
 3710 0b96 0C       		.uleb128 0xc
 3711 0b97 FB020000 		.4byte	.LASF102
 3712 0b9b 01       		.byte	0x1
 3713 0b9c 480B     		.2byte	0xb48
 3714 0b9e 83000000 		.4byte	0x83
 3715 0ba2 B5060000 		.4byte	.LLST49
 3716 0ba6 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 121


 3717 0ba7 0A       		.uleb128 0xa
 3718 0ba8 B2060000 		.4byte	.LASF104
 3719 0bac 01       		.byte	0x1
 3720 0bad 610B     		.2byte	0xb61
 3721 0baf 00000000 		.4byte	.LFB53
 3722 0bb3 20000000 		.4byte	.LFE53-.LFB53
 3723 0bb7 01       		.uleb128 0x1
 3724 0bb8 9C       		.byte	0x9c
 3725 0bb9 DE0B0000 		.4byte	0xbde
 3726 0bbd 0B       		.uleb128 0xb
 3727 0bbe BB030000 		.4byte	.LASF101
 3728 0bc2 01       		.byte	0x1
 3729 0bc3 610B     		.2byte	0xb61
 3730 0bc5 83000000 		.4byte	0x83
 3731 0bc9 D3060000 		.4byte	.LLST50
 3732 0bcd 0C       		.uleb128 0xc
 3733 0bce FB020000 		.4byte	.LASF102
 3734 0bd2 01       		.byte	0x1
 3735 0bd3 630B     		.2byte	0xb63
 3736 0bd5 83000000 		.4byte	0x83
 3737 0bd9 F4060000 		.4byte	.LLST51
 3738 0bdd 00       		.byte	0
 3739 0bde 0A       		.uleb128 0xa
 3740 0bdf CB030000 		.4byte	.LASF105
 3741 0be3 01       		.byte	0x1
 3742 0be4 7E0B     		.2byte	0xb7e
 3743 0be6 00000000 		.4byte	.LFB54
 3744 0bea 68000000 		.4byte	.LFE54-.LFB54
 3745 0bee 01       		.uleb128 0x1
 3746 0bef 9C       		.byte	0x9c
 3747 0bf0 340C0000 		.4byte	0xc34
 3748 0bf4 0B       		.uleb128 0xb
 3749 0bf5 AF000000 		.4byte	.LASF106
 3750 0bf9 01       		.byte	0x1
 3751 0bfa 7E0B     		.2byte	0xb7e
 3752 0bfc 83000000 		.4byte	0x83
 3753 0c00 12070000 		.4byte	.LLST52
 3754 0c04 0B       		.uleb128 0xb
 3755 0c05 BB030000 		.4byte	.LASF101
 3756 0c09 01       		.byte	0x1
 3757 0c0a 7E0B     		.2byte	0xb7e
 3758 0c0c 83000000 		.4byte	0x83
 3759 0c10 7E070000 		.4byte	.LLST53
 3760 0c14 0C       		.uleb128 0xc
 3761 0c15 FB020000 		.4byte	.LASF102
 3762 0c19 01       		.byte	0x1
 3763 0c1a 800B     		.2byte	0xb80
 3764 0c1c 83000000 		.4byte	0x83
 3765 0c20 EA070000 		.4byte	.LLST54
 3766 0c24 13       		.uleb128 0x13
 3767 0c25 56000000 		.4byte	.LVL192
 3768 0c29 CB030000 		.4byte	0x3cb
 3769 0c2d 14       		.uleb128 0x14
 3770 0c2e 01       		.uleb128 0x1
 3771 0c2f 50       		.byte	0x50
 3772 0c30 01       		.uleb128 0x1
 3773 0c31 30       		.byte	0x30
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 122


 3774 0c32 00       		.byte	0
 3775 0c33 00       		.byte	0
 3776 0c34 1A       		.uleb128 0x1a
 3777 0c35 EC000000 		.4byte	0xec
 3778 0c39 440C0000 		.4byte	0xc44
 3779 0c3d 1B       		.uleb128 0x1b
 3780 0c3e E5000000 		.4byte	0xe5
 3781 0c42 04       		.byte	0x4
 3782 0c43 00       		.byte	0
 3783 0c44 1C       		.uleb128 0x1c
 3784 0c45 37060000 		.4byte	.LASF107
 3785 0c49 01       		.byte	0x1
 3786 0c4a 22       		.byte	0x22
 3787 0c4b 340C0000 		.4byte	0xc34
 3788 0c4f 05       		.uleb128 0x5
 3789 0c50 03       		.byte	0x3
 3790 0c51 00000000 		.4byte	CySysTickCallbacks
 3791 0c55 1D       		.uleb128 0x1d
 3792 0c56 D8040000 		.4byte	.LASF108
 3793 0c5a 01       		.byte	0x1
 3794 0c5b 1B       		.byte	0x1b
 3795 0c5c 83000000 		.4byte	0x83
 3796 0c60 05       		.uleb128 0x5
 3797 0c61 03       		.byte	0x3
 3798 0c62 00000000 		.4byte	cydelayFreqHz
 3799 0c66 1D       		.uleb128 0x1d
 3800 0c67 74010000 		.4byte	.LASF109
 3801 0c6b 01       		.byte	0x1
 3802 0c6c 1C       		.byte	0x1c
 3803 0c6d 83000000 		.4byte	0x83
 3804 0c71 05       		.uleb128 0x5
 3805 0c72 03       		.byte	0x3
 3806 0c73 00000000 		.4byte	cydelayFreqKhz
 3807 0c77 1D       		.uleb128 0x1d
 3808 0c78 93060000 		.4byte	.LASF110
 3809 0c7c 01       		.byte	0x1
 3810 0c7d 1D       		.byte	0x1d
 3811 0c7e 6B000000 		.4byte	0x6b
 3812 0c82 05       		.uleb128 0x5
 3813 0c83 03       		.byte	0x3
 3814 0c84 00000000 		.4byte	cydelayFreqMhz
 3815 0c88 1D       		.uleb128 0x1d
 3816 0c89 03020000 		.4byte	.LASF111
 3817 0c8d 01       		.byte	0x1
 3818 0c8e 1E       		.byte	0x1e
 3819 0c8f 83000000 		.4byte	0x83
 3820 0c93 05       		.uleb128 0x5
 3821 0c94 03       		.byte	0x3
 3822 0c95 00000000 		.4byte	cydelay32kMs
 3823 0c99 1D       		.uleb128 0x1d
 3824 0c9a 91000000 		.4byte	.LASF112
 3825 0c9e 01       		.byte	0x1
 3826 0c9f 35       		.byte	0x35
 3827 0ca0 83000000 		.4byte	0x83
 3828 0ca4 05       		.uleb128 0x5
 3829 0ca5 03       		.byte	0x3
 3830 0ca6 00000000 		.4byte	CySysTickInitVar
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 123


 3831 0caa 1A       		.uleb128 0x1a
 3832 0cab 6B000000 		.4byte	0x6b
 3833 0caf BA0C0000 		.4byte	0xcba
 3834 0cb3 1B       		.uleb128 0x1b
 3835 0cb4 E5000000 		.4byte	0xe5
 3836 0cb8 2D       		.byte	0x2d
 3837 0cb9 00       		.byte	0
 3838 0cba 1D       		.uleb128 0x1d
 3839 0cbb 27040000 		.4byte	.LASF113
 3840 0cbf 01       		.byte	0x1
 3841 0cc0 3A       		.byte	0x3a
 3842 0cc1 CB0C0000 		.4byte	0xccb
 3843 0cc5 05       		.uleb128 0x5
 3844 0cc6 03       		.byte	0x3
 3845 0cc7 00000000 		.4byte	cyImoFreqMhz2Reg
 3846 0ccb 1E       		.uleb128 0x1e
 3847 0ccc AA0C0000 		.4byte	0xcaa
 3848 0cd0 1F       		.uleb128 0x1f
 3849 0cd1 AD020000 		.4byte	.LASF118
 3850 0cd5 03       		.byte	0x3
 3851 0cd6 E3       		.byte	0xe3
 3852 0cd7 6B000000 		.4byte	0x6b
 3853 0cdb 20       		.uleb128 0x20
 3854 0cdc FD040000 		.4byte	.LASF119
 3855 0ce0 03       		.byte	0x3
 3856 0ce1 E4       		.byte	0xe4
 3857 0ce2 EC0C0000 		.4byte	0xcec
 3858 0ce6 21       		.uleb128 0x21
 3859 0ce7 6B000000 		.4byte	0x6b
 3860 0ceb 00       		.byte	0
 3861 0cec 22       		.uleb128 0x22
 3862 0ced 50050000 		.4byte	.LASF120
 3863 0cf1 03       		.byte	0x3
 3864 0cf2 DA       		.byte	0xda
 3865 0cf3 21       		.uleb128 0x21
 3866 0cf4 83000000 		.4byte	0x83
 3867 0cf8 00       		.byte	0
 3868 0cf9 00       		.byte	0
 3869              		.section	.debug_abbrev,"",%progbits
 3870              	.Ldebug_abbrev0:
 3871 0000 01       		.uleb128 0x1
 3872 0001 11       		.uleb128 0x11
 3873 0002 01       		.byte	0x1
 3874 0003 25       		.uleb128 0x25
 3875 0004 0E       		.uleb128 0xe
 3876 0005 13       		.uleb128 0x13
 3877 0006 0B       		.uleb128 0xb
 3878 0007 03       		.uleb128 0x3
 3879 0008 0E       		.uleb128 0xe
 3880 0009 1B       		.uleb128 0x1b
 3881 000a 0E       		.uleb128 0xe
 3882 000b 55       		.uleb128 0x55
 3883 000c 17       		.uleb128 0x17
 3884 000d 11       		.uleb128 0x11
 3885 000e 01       		.uleb128 0x1
 3886 000f 10       		.uleb128 0x10
 3887 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 124


 3888 0011 00       		.byte	0
 3889 0012 00       		.byte	0
 3890 0013 02       		.uleb128 0x2
 3891 0014 24       		.uleb128 0x24
 3892 0015 00       		.byte	0
 3893 0016 0B       		.uleb128 0xb
 3894 0017 0B       		.uleb128 0xb
 3895 0018 3E       		.uleb128 0x3e
 3896 0019 0B       		.uleb128 0xb
 3897 001a 03       		.uleb128 0x3
 3898 001b 0E       		.uleb128 0xe
 3899 001c 00       		.byte	0
 3900 001d 00       		.byte	0
 3901 001e 03       		.uleb128 0x3
 3902 001f 24       		.uleb128 0x24
 3903 0020 00       		.byte	0
 3904 0021 0B       		.uleb128 0xb
 3905 0022 0B       		.uleb128 0xb
 3906 0023 3E       		.uleb128 0x3e
 3907 0024 0B       		.uleb128 0xb
 3908 0025 03       		.uleb128 0x3
 3909 0026 08       		.uleb128 0x8
 3910 0027 00       		.byte	0
 3911 0028 00       		.byte	0
 3912 0029 04       		.uleb128 0x4
 3913 002a 16       		.uleb128 0x16
 3914 002b 00       		.byte	0
 3915 002c 03       		.uleb128 0x3
 3916 002d 0E       		.uleb128 0xe
 3917 002e 3A       		.uleb128 0x3a
 3918 002f 0B       		.uleb128 0xb
 3919 0030 3B       		.uleb128 0x3b
 3920 0031 05       		.uleb128 0x5
 3921 0032 49       		.uleb128 0x49
 3922 0033 13       		.uleb128 0x13
 3923 0034 00       		.byte	0
 3924 0035 00       		.byte	0
 3925 0036 05       		.uleb128 0x5
 3926 0037 35       		.uleb128 0x35
 3927 0038 00       		.byte	0
 3928 0039 49       		.uleb128 0x49
 3929 003a 13       		.uleb128 0x13
 3930 003b 00       		.byte	0
 3931 003c 00       		.byte	0
 3932 003d 06       		.uleb128 0x6
 3933 003e 0F       		.uleb128 0xf
 3934 003f 00       		.byte	0
 3935 0040 0B       		.uleb128 0xb
 3936 0041 0B       		.uleb128 0xb
 3937 0042 49       		.uleb128 0x49
 3938 0043 13       		.uleb128 0x13
 3939 0044 00       		.byte	0
 3940 0045 00       		.byte	0
 3941 0046 07       		.uleb128 0x7
 3942 0047 15       		.uleb128 0x15
 3943 0048 00       		.byte	0
 3944 0049 27       		.uleb128 0x27
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 125


 3945 004a 19       		.uleb128 0x19
 3946 004b 00       		.byte	0
 3947 004c 00       		.byte	0
 3948 004d 08       		.uleb128 0x8
 3949 004e 16       		.uleb128 0x16
 3950 004f 00       		.byte	0
 3951 0050 03       		.uleb128 0x3
 3952 0051 0E       		.uleb128 0xe
 3953 0052 3A       		.uleb128 0x3a
 3954 0053 0B       		.uleb128 0xb
 3955 0054 3B       		.uleb128 0x3b
 3956 0055 0B       		.uleb128 0xb
 3957 0056 49       		.uleb128 0x49
 3958 0057 13       		.uleb128 0x13
 3959 0058 00       		.byte	0
 3960 0059 00       		.byte	0
 3961 005a 09       		.uleb128 0x9
 3962 005b 2E       		.uleb128 0x2e
 3963 005c 00       		.byte	0
 3964 005d 3F       		.uleb128 0x3f
 3965 005e 19       		.uleb128 0x19
 3966 005f 03       		.uleb128 0x3
 3967 0060 0E       		.uleb128 0xe
 3968 0061 3A       		.uleb128 0x3a
 3969 0062 0B       		.uleb128 0xb
 3970 0063 3B       		.uleb128 0x3b
 3971 0064 0B       		.uleb128 0xb
 3972 0065 27       		.uleb128 0x27
 3973 0066 19       		.uleb128 0x19
 3974 0067 11       		.uleb128 0x11
 3975 0068 01       		.uleb128 0x1
 3976 0069 12       		.uleb128 0x12
 3977 006a 06       		.uleb128 0x6
 3978 006b 40       		.uleb128 0x40
 3979 006c 18       		.uleb128 0x18
 3980 006d 9742     		.uleb128 0x2117
 3981 006f 19       		.uleb128 0x19
 3982 0070 00       		.byte	0
 3983 0071 00       		.byte	0
 3984 0072 0A       		.uleb128 0xa
 3985 0073 2E       		.uleb128 0x2e
 3986 0074 01       		.byte	0x1
 3987 0075 3F       		.uleb128 0x3f
 3988 0076 19       		.uleb128 0x19
 3989 0077 03       		.uleb128 0x3
 3990 0078 0E       		.uleb128 0xe
 3991 0079 3A       		.uleb128 0x3a
 3992 007a 0B       		.uleb128 0xb
 3993 007b 3B       		.uleb128 0x3b
 3994 007c 05       		.uleb128 0x5
 3995 007d 27       		.uleb128 0x27
 3996 007e 19       		.uleb128 0x19
 3997 007f 11       		.uleb128 0x11
 3998 0080 01       		.uleb128 0x1
 3999 0081 12       		.uleb128 0x12
 4000 0082 06       		.uleb128 0x6
 4001 0083 40       		.uleb128 0x40
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 126


 4002 0084 18       		.uleb128 0x18
 4003 0085 9742     		.uleb128 0x2117
 4004 0087 19       		.uleb128 0x19
 4005 0088 01       		.uleb128 0x1
 4006 0089 13       		.uleb128 0x13
 4007 008a 00       		.byte	0
 4008 008b 00       		.byte	0
 4009 008c 0B       		.uleb128 0xb
 4010 008d 05       		.uleb128 0x5
 4011 008e 00       		.byte	0
 4012 008f 03       		.uleb128 0x3
 4013 0090 0E       		.uleb128 0xe
 4014 0091 3A       		.uleb128 0x3a
 4015 0092 0B       		.uleb128 0xb
 4016 0093 3B       		.uleb128 0x3b
 4017 0094 05       		.uleb128 0x5
 4018 0095 49       		.uleb128 0x49
 4019 0096 13       		.uleb128 0x13
 4020 0097 02       		.uleb128 0x2
 4021 0098 17       		.uleb128 0x17
 4022 0099 00       		.byte	0
 4023 009a 00       		.byte	0
 4024 009b 0C       		.uleb128 0xc
 4025 009c 34       		.uleb128 0x34
 4026 009d 00       		.byte	0
 4027 009e 03       		.uleb128 0x3
 4028 009f 0E       		.uleb128 0xe
 4029 00a0 3A       		.uleb128 0x3a
 4030 00a1 0B       		.uleb128 0xb
 4031 00a2 3B       		.uleb128 0x3b
 4032 00a3 05       		.uleb128 0x5
 4033 00a4 49       		.uleb128 0x49
 4034 00a5 13       		.uleb128 0x13
 4035 00a6 02       		.uleb128 0x2
 4036 00a7 17       		.uleb128 0x17
 4037 00a8 00       		.byte	0
 4038 00a9 00       		.byte	0
 4039 00aa 0D       		.uleb128 0xd
 4040 00ab 898201   		.uleb128 0x4109
 4041 00ae 00       		.byte	0
 4042 00af 11       		.uleb128 0x11
 4043 00b0 01       		.uleb128 0x1
 4044 00b1 31       		.uleb128 0x31
 4045 00b2 13       		.uleb128 0x13
 4046 00b3 00       		.byte	0
 4047 00b4 00       		.byte	0
 4048 00b5 0E       		.uleb128 0xe
 4049 00b6 2E       		.uleb128 0x2e
 4050 00b7 01       		.byte	0x1
 4051 00b8 3F       		.uleb128 0x3f
 4052 00b9 19       		.uleb128 0x19
 4053 00ba 03       		.uleb128 0x3
 4054 00bb 0E       		.uleb128 0xe
 4055 00bc 3A       		.uleb128 0x3a
 4056 00bd 0B       		.uleb128 0xb
 4057 00be 3B       		.uleb128 0x3b
 4058 00bf 05       		.uleb128 0x5
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 127


 4059 00c0 27       		.uleb128 0x27
 4060 00c1 19       		.uleb128 0x19
 4061 00c2 49       		.uleb128 0x49
 4062 00c3 13       		.uleb128 0x13
 4063 00c4 11       		.uleb128 0x11
 4064 00c5 01       		.uleb128 0x1
 4065 00c6 12       		.uleb128 0x12
 4066 00c7 06       		.uleb128 0x6
 4067 00c8 40       		.uleb128 0x40
 4068 00c9 18       		.uleb128 0x18
 4069 00ca 9742     		.uleb128 0x2117
 4070 00cc 19       		.uleb128 0x19
 4071 00cd 01       		.uleb128 0x1
 4072 00ce 13       		.uleb128 0x13
 4073 00cf 00       		.byte	0
 4074 00d0 00       		.byte	0
 4075 00d1 0F       		.uleb128 0xf
 4076 00d2 2E       		.uleb128 0x2e
 4077 00d3 00       		.byte	0
 4078 00d4 3F       		.uleb128 0x3f
 4079 00d5 19       		.uleb128 0x19
 4080 00d6 03       		.uleb128 0x3
 4081 00d7 0E       		.uleb128 0xe
 4082 00d8 3A       		.uleb128 0x3a
 4083 00d9 0B       		.uleb128 0xb
 4084 00da 3B       		.uleb128 0x3b
 4085 00db 05       		.uleb128 0x5
 4086 00dc 27       		.uleb128 0x27
 4087 00dd 19       		.uleb128 0x19
 4088 00de 11       		.uleb128 0x11
 4089 00df 01       		.uleb128 0x1
 4090 00e0 12       		.uleb128 0x12
 4091 00e1 06       		.uleb128 0x6
 4092 00e2 40       		.uleb128 0x40
 4093 00e3 18       		.uleb128 0x18
 4094 00e4 9742     		.uleb128 0x2117
 4095 00e6 19       		.uleb128 0x19
 4096 00e7 00       		.byte	0
 4097 00e8 00       		.byte	0
 4098 00e9 10       		.uleb128 0x10
 4099 00ea 34       		.uleb128 0x34
 4100 00eb 00       		.byte	0
 4101 00ec 03       		.uleb128 0x3
 4102 00ed 0E       		.uleb128 0xe
 4103 00ee 3A       		.uleb128 0x3a
 4104 00ef 0B       		.uleb128 0xb
 4105 00f0 3B       		.uleb128 0x3b
 4106 00f1 05       		.uleb128 0x5
 4107 00f2 49       		.uleb128 0x49
 4108 00f3 13       		.uleb128 0x13
 4109 00f4 02       		.uleb128 0x2
 4110 00f5 18       		.uleb128 0x18
 4111 00f6 00       		.byte	0
 4112 00f7 00       		.byte	0
 4113 00f8 11       		.uleb128 0x11
 4114 00f9 2E       		.uleb128 0x2e
 4115 00fa 00       		.byte	0
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 128


 4116 00fb 3F       		.uleb128 0x3f
 4117 00fc 19       		.uleb128 0x19
 4118 00fd 03       		.uleb128 0x3
 4119 00fe 0E       		.uleb128 0xe
 4120 00ff 3A       		.uleb128 0x3a
 4121 0100 0B       		.uleb128 0xb
 4122 0101 3B       		.uleb128 0x3b
 4123 0102 05       		.uleb128 0x5
 4124 0103 27       		.uleb128 0x27
 4125 0104 19       		.uleb128 0x19
 4126 0105 49       		.uleb128 0x49
 4127 0106 13       		.uleb128 0x13
 4128 0107 11       		.uleb128 0x11
 4129 0108 01       		.uleb128 0x1
 4130 0109 12       		.uleb128 0x12
 4131 010a 06       		.uleb128 0x6
 4132 010b 40       		.uleb128 0x40
 4133 010c 18       		.uleb128 0x18
 4134 010d 9742     		.uleb128 0x2117
 4135 010f 19       		.uleb128 0x19
 4136 0110 00       		.byte	0
 4137 0111 00       		.byte	0
 4138 0112 12       		.uleb128 0x12
 4139 0113 05       		.uleb128 0x5
 4140 0114 00       		.byte	0
 4141 0115 03       		.uleb128 0x3
 4142 0116 0E       		.uleb128 0xe
 4143 0117 3A       		.uleb128 0x3a
 4144 0118 0B       		.uleb128 0xb
 4145 0119 3B       		.uleb128 0x3b
 4146 011a 05       		.uleb128 0x5
 4147 011b 49       		.uleb128 0x49
 4148 011c 13       		.uleb128 0x13
 4149 011d 02       		.uleb128 0x2
 4150 011e 18       		.uleb128 0x18
 4151 011f 00       		.byte	0
 4152 0120 00       		.byte	0
 4153 0121 13       		.uleb128 0x13
 4154 0122 898201   		.uleb128 0x4109
 4155 0125 01       		.byte	0x1
 4156 0126 11       		.uleb128 0x11
 4157 0127 01       		.uleb128 0x1
 4158 0128 31       		.uleb128 0x31
 4159 0129 13       		.uleb128 0x13
 4160 012a 00       		.byte	0
 4161 012b 00       		.byte	0
 4162 012c 14       		.uleb128 0x14
 4163 012d 8A8201   		.uleb128 0x410a
 4164 0130 00       		.byte	0
 4165 0131 02       		.uleb128 0x2
 4166 0132 18       		.uleb128 0x18
 4167 0133 9142     		.uleb128 0x2111
 4168 0135 18       		.uleb128 0x18
 4169 0136 00       		.byte	0
 4170 0137 00       		.byte	0
 4171 0138 15       		.uleb128 0x15
 4172 0139 34       		.uleb128 0x34
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 129


 4173 013a 00       		.byte	0
 4174 013b 03       		.uleb128 0x3
 4175 013c 0E       		.uleb128 0xe
 4176 013d 3A       		.uleb128 0x3a
 4177 013e 0B       		.uleb128 0xb
 4178 013f 3B       		.uleb128 0x3b
 4179 0140 05       		.uleb128 0x5
 4180 0141 49       		.uleb128 0x49
 4181 0142 13       		.uleb128 0x13
 4182 0143 1C       		.uleb128 0x1c
 4183 0144 06       		.uleb128 0x6
 4184 0145 00       		.byte	0
 4185 0146 00       		.byte	0
 4186 0147 16       		.uleb128 0x16
 4187 0148 898201   		.uleb128 0x4109
 4188 014b 01       		.byte	0x1
 4189 014c 11       		.uleb128 0x11
 4190 014d 01       		.uleb128 0x1
 4191 014e 31       		.uleb128 0x31
 4192 014f 13       		.uleb128 0x13
 4193 0150 01       		.uleb128 0x1
 4194 0151 13       		.uleb128 0x13
 4195 0152 00       		.byte	0
 4196 0153 00       		.byte	0
 4197 0154 17       		.uleb128 0x17
 4198 0155 2E       		.uleb128 0x2e
 4199 0156 01       		.byte	0x1
 4200 0157 3F       		.uleb128 0x3f
 4201 0158 19       		.uleb128 0x19
 4202 0159 03       		.uleb128 0x3
 4203 015a 0E       		.uleb128 0xe
 4204 015b 3A       		.uleb128 0x3a
 4205 015c 0B       		.uleb128 0xb
 4206 015d 3B       		.uleb128 0x3b
 4207 015e 05       		.uleb128 0x5
 4208 015f 27       		.uleb128 0x27
 4209 0160 19       		.uleb128 0x19
 4210 0161 11       		.uleb128 0x11
 4211 0162 01       		.uleb128 0x1
 4212 0163 12       		.uleb128 0x12
 4213 0164 06       		.uleb128 0x6
 4214 0165 40       		.uleb128 0x40
 4215 0166 18       		.uleb128 0x18
 4216 0167 9642     		.uleb128 0x2116
 4217 0169 19       		.uleb128 0x19
 4218 016a 01       		.uleb128 0x1
 4219 016b 13       		.uleb128 0x13
 4220 016c 00       		.byte	0
 4221 016d 00       		.byte	0
 4222 016e 18       		.uleb128 0x18
 4223 016f 2E       		.uleb128 0x2e
 4224 0170 01       		.byte	0x1
 4225 0171 03       		.uleb128 0x3
 4226 0172 0E       		.uleb128 0xe
 4227 0173 3A       		.uleb128 0x3a
 4228 0174 0B       		.uleb128 0xb
 4229 0175 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 130


 4230 0176 05       		.uleb128 0x5
 4231 0177 27       		.uleb128 0x27
 4232 0178 19       		.uleb128 0x19
 4233 0179 11       		.uleb128 0x11
 4234 017a 01       		.uleb128 0x1
 4235 017b 12       		.uleb128 0x12
 4236 017c 06       		.uleb128 0x6
 4237 017d 40       		.uleb128 0x40
 4238 017e 18       		.uleb128 0x18
 4239 017f 9642     		.uleb128 0x2116
 4240 0181 19       		.uleb128 0x19
 4241 0182 01       		.uleb128 0x1
 4242 0183 13       		.uleb128 0x13
 4243 0184 00       		.byte	0
 4244 0185 00       		.byte	0
 4245 0186 19       		.uleb128 0x19
 4246 0187 34       		.uleb128 0x34
 4247 0188 00       		.byte	0
 4248 0189 03       		.uleb128 0x3
 4249 018a 08       		.uleb128 0x8
 4250 018b 3A       		.uleb128 0x3a
 4251 018c 0B       		.uleb128 0xb
 4252 018d 3B       		.uleb128 0x3b
 4253 018e 05       		.uleb128 0x5
 4254 018f 49       		.uleb128 0x49
 4255 0190 13       		.uleb128 0x13
 4256 0191 02       		.uleb128 0x2
 4257 0192 17       		.uleb128 0x17
 4258 0193 00       		.byte	0
 4259 0194 00       		.byte	0
 4260 0195 1A       		.uleb128 0x1a
 4261 0196 01       		.uleb128 0x1
 4262 0197 01       		.byte	0x1
 4263 0198 49       		.uleb128 0x49
 4264 0199 13       		.uleb128 0x13
 4265 019a 01       		.uleb128 0x1
 4266 019b 13       		.uleb128 0x13
 4267 019c 00       		.byte	0
 4268 019d 00       		.byte	0
 4269 019e 1B       		.uleb128 0x1b
 4270 019f 21       		.uleb128 0x21
 4271 01a0 00       		.byte	0
 4272 01a1 49       		.uleb128 0x49
 4273 01a2 13       		.uleb128 0x13
 4274 01a3 2F       		.uleb128 0x2f
 4275 01a4 0B       		.uleb128 0xb
 4276 01a5 00       		.byte	0
 4277 01a6 00       		.byte	0
 4278 01a7 1C       		.uleb128 0x1c
 4279 01a8 34       		.uleb128 0x34
 4280 01a9 00       		.byte	0
 4281 01aa 03       		.uleb128 0x3
 4282 01ab 0E       		.uleb128 0xe
 4283 01ac 3A       		.uleb128 0x3a
 4284 01ad 0B       		.uleb128 0xb
 4285 01ae 3B       		.uleb128 0x3b
 4286 01af 0B       		.uleb128 0xb
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 131


 4287 01b0 49       		.uleb128 0x49
 4288 01b1 13       		.uleb128 0x13
 4289 01b2 02       		.uleb128 0x2
 4290 01b3 18       		.uleb128 0x18
 4291 01b4 00       		.byte	0
 4292 01b5 00       		.byte	0
 4293 01b6 1D       		.uleb128 0x1d
 4294 01b7 34       		.uleb128 0x34
 4295 01b8 00       		.byte	0
 4296 01b9 03       		.uleb128 0x3
 4297 01ba 0E       		.uleb128 0xe
 4298 01bb 3A       		.uleb128 0x3a
 4299 01bc 0B       		.uleb128 0xb
 4300 01bd 3B       		.uleb128 0x3b
 4301 01be 0B       		.uleb128 0xb
 4302 01bf 49       		.uleb128 0x49
 4303 01c0 13       		.uleb128 0x13
 4304 01c1 3F       		.uleb128 0x3f
 4305 01c2 19       		.uleb128 0x19
 4306 01c3 02       		.uleb128 0x2
 4307 01c4 18       		.uleb128 0x18
 4308 01c5 00       		.byte	0
 4309 01c6 00       		.byte	0
 4310 01c7 1E       		.uleb128 0x1e
 4311 01c8 26       		.uleb128 0x26
 4312 01c9 00       		.byte	0
 4313 01ca 49       		.uleb128 0x49
 4314 01cb 13       		.uleb128 0x13
 4315 01cc 00       		.byte	0
 4316 01cd 00       		.byte	0
 4317 01ce 1F       		.uleb128 0x1f
 4318 01cf 2E       		.uleb128 0x2e
 4319 01d0 00       		.byte	0
 4320 01d1 3F       		.uleb128 0x3f
 4321 01d2 19       		.uleb128 0x19
 4322 01d3 03       		.uleb128 0x3
 4323 01d4 0E       		.uleb128 0xe
 4324 01d5 3A       		.uleb128 0x3a
 4325 01d6 0B       		.uleb128 0xb
 4326 01d7 3B       		.uleb128 0x3b
 4327 01d8 0B       		.uleb128 0xb
 4328 01d9 27       		.uleb128 0x27
 4329 01da 19       		.uleb128 0x19
 4330 01db 49       		.uleb128 0x49
 4331 01dc 13       		.uleb128 0x13
 4332 01dd 3C       		.uleb128 0x3c
 4333 01de 19       		.uleb128 0x19
 4334 01df 00       		.byte	0
 4335 01e0 00       		.byte	0
 4336 01e1 20       		.uleb128 0x20
 4337 01e2 2E       		.uleb128 0x2e
 4338 01e3 01       		.byte	0x1
 4339 01e4 3F       		.uleb128 0x3f
 4340 01e5 19       		.uleb128 0x19
 4341 01e6 03       		.uleb128 0x3
 4342 01e7 0E       		.uleb128 0xe
 4343 01e8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 132


 4344 01e9 0B       		.uleb128 0xb
 4345 01ea 3B       		.uleb128 0x3b
 4346 01eb 0B       		.uleb128 0xb
 4347 01ec 27       		.uleb128 0x27
 4348 01ed 19       		.uleb128 0x19
 4349 01ee 3C       		.uleb128 0x3c
 4350 01ef 19       		.uleb128 0x19
 4351 01f0 01       		.uleb128 0x1
 4352 01f1 13       		.uleb128 0x13
 4353 01f2 00       		.byte	0
 4354 01f3 00       		.byte	0
 4355 01f4 21       		.uleb128 0x21
 4356 01f5 05       		.uleb128 0x5
 4357 01f6 00       		.byte	0
 4358 01f7 49       		.uleb128 0x49
 4359 01f8 13       		.uleb128 0x13
 4360 01f9 00       		.byte	0
 4361 01fa 00       		.byte	0
 4362 01fb 22       		.uleb128 0x22
 4363 01fc 2E       		.uleb128 0x2e
 4364 01fd 01       		.byte	0x1
 4365 01fe 3F       		.uleb128 0x3f
 4366 01ff 19       		.uleb128 0x19
 4367 0200 03       		.uleb128 0x3
 4368 0201 0E       		.uleb128 0xe
 4369 0202 3A       		.uleb128 0x3a
 4370 0203 0B       		.uleb128 0xb
 4371 0204 3B       		.uleb128 0x3b
 4372 0205 0B       		.uleb128 0xb
 4373 0206 27       		.uleb128 0x27
 4374 0207 19       		.uleb128 0x19
 4375 0208 3C       		.uleb128 0x3c
 4376 0209 19       		.uleb128 0x19
 4377 020a 00       		.byte	0
 4378 020b 00       		.byte	0
 4379 020c 00       		.byte	0
 4380              		.section	.debug_loc,"",%progbits
 4381              	.Ldebug_loc0:
 4382              	.LLST0:
 4383 0000 00000000 		.4byte	.LVL0
 4384 0004 07000000 		.4byte	.LVL1-1
 4385 0008 0100     		.2byte	0x1
 4386 000a 50       		.byte	0x50
 4387 000b 07000000 		.4byte	.LVL1-1
 4388 000f 1A000000 		.4byte	.LVL5
 4389 0013 0100     		.2byte	0x1
 4390 0015 54       		.byte	0x54
 4391 0016 1A000000 		.4byte	.LVL5
 4392 001a 20000000 		.4byte	.LFE4
 4393 001e 0400     		.2byte	0x4
 4394 0020 F3       		.byte	0xf3
 4395 0021 01       		.uleb128 0x1
 4396 0022 50       		.byte	0x50
 4397 0023 9F       		.byte	0x9f
 4398 0024 00000000 		.4byte	0
 4399 0028 00000000 		.4byte	0
 4400              	.LLST1:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 133


 4401 002c 08000000 		.4byte	.LVL1
 4402 0030 19000000 		.4byte	.LVL4-1
 4403 0034 0100     		.2byte	0x1
 4404 0036 50       		.byte	0x50
 4405 0037 00000000 		.4byte	0
 4406 003b 00000000 		.4byte	0
 4407              	.LLST2:
 4408 003f 10000000 		.4byte	.LVL2
 4409 0043 14000000 		.4byte	.LVL3
 4410 0047 0100     		.2byte	0x1
 4411 0049 52       		.byte	0x52
 4412 004a 14000000 		.4byte	.LVL3
 4413 004e 19000000 		.4byte	.LVL4-1
 4414 0052 0100     		.2byte	0x1
 4415 0054 53       		.byte	0x53
 4416 0055 00000000 		.4byte	0
 4417 0059 00000000 		.4byte	0
 4418              	.LLST3:
 4419 005d 06000000 		.4byte	.LVL6
 4420 0061 11000000 		.4byte	.LVL8-1
 4421 0065 0100     		.2byte	0x1
 4422 0067 50       		.byte	0x50
 4423 0068 00000000 		.4byte	0
 4424 006c 00000000 		.4byte	0
 4425              	.LLST4:
 4426 0070 0E000000 		.4byte	.LVL7
 4427 0074 14000000 		.4byte	.LVL9
 4428 0078 0100     		.2byte	0x1
 4429 007a 54       		.byte	0x54
 4430 007b 14000000 		.4byte	.LVL9
 4431 007f 1C000000 		.4byte	.LFE5
 4432 0083 0100     		.2byte	0x1
 4433 0085 50       		.byte	0x50
 4434 0086 00000000 		.4byte	0
 4435 008a 00000000 		.4byte	0
 4436              	.LLST5:
 4437 008e 00000000 		.4byte	.LVL10
 4438 0092 07000000 		.4byte	.LVL11-1
 4439 0096 0100     		.2byte	0x1
 4440 0098 50       		.byte	0x50
 4441 0099 07000000 		.4byte	.LVL11-1
 4442 009d 0C000000 		.4byte	.LVL12
 4443 00a1 0100     		.2byte	0x1
 4444 00a3 54       		.byte	0x54
 4445 00a4 0C000000 		.4byte	.LVL12
 4446 00a8 28000000 		.4byte	.LFE6
 4447 00ac 0400     		.2byte	0x4
 4448 00ae F3       		.byte	0xf3
 4449 00af 01       		.uleb128 0x1
 4450 00b0 50       		.byte	0x50
 4451 00b1 9F       		.byte	0x9f
 4452 00b2 00000000 		.4byte	0
 4453 00b6 00000000 		.4byte	0
 4454              	.LLST6:
 4455 00ba 08000000 		.4byte	.LVL11
 4456 00be 1D000000 		.4byte	.LVL13-1
 4457 00c2 0100     		.2byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 134


 4458 00c4 50       		.byte	0x50
 4459 00c5 00000000 		.4byte	0
 4460 00c9 00000000 		.4byte	0
 4461              	.LLST7:
 4462 00cd 00000000 		.4byte	.LVL15
 4463 00d1 04000000 		.4byte	.LVL16
 4464 00d5 0100     		.2byte	0x1
 4465 00d7 50       		.byte	0x50
 4466 00d8 04000000 		.4byte	.LVL16
 4467 00dc 14000000 		.4byte	.LFE16
 4468 00e0 0100     		.2byte	0x1
 4469 00e2 52       		.byte	0x52
 4470 00e3 00000000 		.4byte	0
 4471 00e7 00000000 		.4byte	0
 4472              	.LLST8:
 4473 00eb 00000000 		.4byte	.LVL21
 4474 00ef 04000000 		.4byte	.LVL22
 4475 00f3 0100     		.2byte	0x1
 4476 00f5 50       		.byte	0x50
 4477 00f6 04000000 		.4byte	.LVL22
 4478 00fa 14000000 		.4byte	.LFE25
 4479 00fe 0400     		.2byte	0x4
 4480 0100 F3       		.byte	0xf3
 4481 0101 01       		.uleb128 0x1
 4482 0102 50       		.byte	0x50
 4483 0103 9F       		.byte	0x9f
 4484 0104 00000000 		.4byte	0
 4485 0108 00000000 		.4byte	0
 4486              	.LLST9:
 4487 010c 00000000 		.4byte	.LVL23
 4488 0110 08000000 		.4byte	.LVL24
 4489 0114 0100     		.2byte	0x1
 4490 0116 50       		.byte	0x50
 4491 0117 08000000 		.4byte	.LVL24
 4492 011b 18000000 		.4byte	.LFE26
 4493 011f 0400     		.2byte	0x4
 4494 0121 F3       		.byte	0xf3
 4495 0122 01       		.uleb128 0x1
 4496 0123 50       		.byte	0x50
 4497 0124 9F       		.byte	0x9f
 4498 0125 00000000 		.4byte	0
 4499 0129 00000000 		.4byte	0
 4500              	.LLST10:
 4501 012d 00000000 		.4byte	.LVL25
 4502 0131 04000000 		.4byte	.LVL26
 4503 0135 0100     		.2byte	0x1
 4504 0137 50       		.byte	0x50
 4505 0138 04000000 		.4byte	.LVL26
 4506 013c 14000000 		.4byte	.LFE27
 4507 0140 0400     		.2byte	0x4
 4508 0142 F3       		.byte	0xf3
 4509 0143 01       		.uleb128 0x1
 4510 0144 50       		.byte	0x50
 4511 0145 9F       		.byte	0x9f
 4512 0146 00000000 		.4byte	0
 4513 014a 00000000 		.4byte	0
 4514              	.LLST11:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 135


 4515 014e 00000000 		.4byte	.LVL27
 4516 0152 04000000 		.4byte	.LVL28
 4517 0156 0100     		.2byte	0x1
 4518 0158 50       		.byte	0x50
 4519 0159 04000000 		.4byte	.LVL28
 4520 015d 14000000 		.4byte	.LFE28
 4521 0161 0400     		.2byte	0x4
 4522 0163 F3       		.byte	0xf3
 4523 0164 01       		.uleb128 0x1
 4524 0165 50       		.byte	0x50
 4525 0166 9F       		.byte	0x9f
 4526 0167 00000000 		.4byte	0
 4527 016b 00000000 		.4byte	0
 4528              	.LLST12:
 4529 016f 00000000 		.4byte	.LVL29
 4530 0173 04000000 		.4byte	.LVL30
 4531 0177 0100     		.2byte	0x1
 4532 0179 50       		.byte	0x50
 4533 017a 04000000 		.4byte	.LVL30
 4534 017e 14000000 		.4byte	.LFE29
 4535 0182 0400     		.2byte	0x4
 4536 0184 F3       		.byte	0xf3
 4537 0185 01       		.uleb128 0x1
 4538 0186 50       		.byte	0x50
 4539 0187 9F       		.byte	0x9f
 4540 0188 00000000 		.4byte	0
 4541 018c 00000000 		.4byte	0
 4542              	.LLST13:
 4543 0190 00000000 		.4byte	.LVL32
 4544 0194 13000000 		.4byte	.LVL33-1
 4545 0198 0100     		.2byte	0x1
 4546 019a 50       		.byte	0x50
 4547 019b 13000000 		.4byte	.LVL33-1
 4548 019f 18000000 		.4byte	.LVL34
 4549 01a3 0100     		.2byte	0x1
 4550 01a5 54       		.byte	0x54
 4551 01a6 18000000 		.4byte	.LVL34
 4552 01aa 28000000 		.4byte	.LVL36
 4553 01ae 0400     		.2byte	0x4
 4554 01b0 F3       		.byte	0xf3
 4555 01b1 01       		.uleb128 0x1
 4556 01b2 50       		.byte	0x50
 4557 01b3 9F       		.byte	0x9f
 4558 01b4 28000000 		.4byte	.LVL36
 4559 01b8 2A000000 		.4byte	.LVL37
 4560 01bc 0100     		.2byte	0x1
 4561 01be 50       		.byte	0x50
 4562 01bf 2A000000 		.4byte	.LVL37
 4563 01c3 2E000000 		.4byte	.LVL38
 4564 01c7 0100     		.2byte	0x1
 4565 01c9 54       		.byte	0x54
 4566 01ca 2E000000 		.4byte	.LVL38
 4567 01ce 38000000 		.4byte	.LFE11
 4568 01d2 0400     		.2byte	0x4
 4569 01d4 F3       		.byte	0xf3
 4570 01d5 01       		.uleb128 0x1
 4571 01d6 50       		.byte	0x50
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 136


 4572 01d7 9F       		.byte	0x9f
 4573 01d8 00000000 		.4byte	0
 4574 01dc 00000000 		.4byte	0
 4575              	.LLST14:
 4576 01e0 14000000 		.4byte	.LVL33
 4577 01e4 25000000 		.4byte	.LVL35-1
 4578 01e8 0100     		.2byte	0x1
 4579 01ea 50       		.byte	0x50
 4580 01eb 00000000 		.4byte	0
 4581 01ef 00000000 		.4byte	0
 4582              	.LLST15:
 4583 01f3 00000000 		.4byte	.LVL39
 4584 01f7 0C000000 		.4byte	.LVL41
 4585 01fb 0100     		.2byte	0x1
 4586 01fd 50       		.byte	0x50
 4587 01fe 0C000000 		.4byte	.LVL41
 4588 0202 20000000 		.4byte	.LFE19
 4589 0206 0400     		.2byte	0x4
 4590 0208 F3       		.byte	0xf3
 4591 0209 01       		.uleb128 0x1
 4592 020a 50       		.byte	0x50
 4593 020b 9F       		.byte	0x9f
 4594 020c 00000000 		.4byte	0
 4595 0210 00000000 		.4byte	0
 4596              	.LLST16:
 4597 0214 00000000 		.4byte	.LVL39
 4598 0218 0F000000 		.4byte	.LVL42-1
 4599 021c 0100     		.2byte	0x1
 4600 021e 51       		.byte	0x51
 4601 021f 0F000000 		.4byte	.LVL42-1
 4602 0223 1E000000 		.4byte	.LVL44
 4603 0227 0100     		.2byte	0x1
 4604 0229 55       		.byte	0x55
 4605 022a 1E000000 		.4byte	.LVL44
 4606 022e 20000000 		.4byte	.LFE19
 4607 0232 0400     		.2byte	0x4
 4608 0234 F3       		.byte	0xf3
 4609 0235 01       		.uleb128 0x1
 4610 0236 51       		.byte	0x51
 4611 0237 9F       		.byte	0x9f
 4612 0238 00000000 		.4byte	0
 4613 023c 00000000 		.4byte	0
 4614              	.LLST17:
 4615 0240 00000000 		.4byte	.LVL45
 4616 0244 0A000000 		.4byte	.LVL47
 4617 0248 0100     		.2byte	0x1
 4618 024a 50       		.byte	0x50
 4619 024b 0A000000 		.4byte	.LVL47
 4620 024f 1C000000 		.4byte	.LFE20
 4621 0253 0400     		.2byte	0x4
 4622 0255 F3       		.byte	0xf3
 4623 0256 01       		.uleb128 0x1
 4624 0257 50       		.byte	0x50
 4625 0258 9F       		.byte	0x9f
 4626 0259 00000000 		.4byte	0
 4627 025d 00000000 		.4byte	0
 4628              	.LLST18:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 137


 4629 0261 00000000 		.4byte	.LVL49
 4630 0265 0C000000 		.4byte	.LVL51
 4631 0269 0100     		.2byte	0x1
 4632 026b 50       		.byte	0x50
 4633 026c 0C000000 		.4byte	.LVL51
 4634 0270 24000000 		.4byte	.LFE21
 4635 0274 0400     		.2byte	0x4
 4636 0276 F3       		.byte	0xf3
 4637 0277 01       		.uleb128 0x1
 4638 0278 50       		.byte	0x50
 4639 0279 9F       		.byte	0x9f
 4640 027a 00000000 		.4byte	0
 4641 027e 00000000 		.4byte	0
 4642              	.LLST19:
 4643 0282 00000000 		.4byte	.LVL49
 4644 0286 0F000000 		.4byte	.LVL52-1
 4645 028a 0100     		.2byte	0x1
 4646 028c 51       		.byte	0x51
 4647 028d 0F000000 		.4byte	.LVL52-1
 4648 0291 1C000000 		.4byte	.LVL54
 4649 0295 0100     		.2byte	0x1
 4650 0297 55       		.byte	0x55
 4651 0298 1C000000 		.4byte	.LVL54
 4652 029c 24000000 		.4byte	.LFE21
 4653 02a0 0400     		.2byte	0x4
 4654 02a2 F3       		.byte	0xf3
 4655 02a3 01       		.uleb128 0x1
 4656 02a4 51       		.byte	0x51
 4657 02a5 9F       		.byte	0x9f
 4658 02a6 00000000 		.4byte	0
 4659 02aa 00000000 		.4byte	0
 4660              	.LLST20:
 4661 02ae 00000000 		.4byte	.LVL55
 4662 02b2 0A000000 		.4byte	.LVL57
 4663 02b6 0100     		.2byte	0x1
 4664 02b8 50       		.byte	0x50
 4665 02b9 0A000000 		.4byte	.LVL57
 4666 02bd 20000000 		.4byte	.LFE22
 4667 02c1 0400     		.2byte	0x4
 4668 02c3 F3       		.byte	0xf3
 4669 02c4 01       		.uleb128 0x1
 4670 02c5 50       		.byte	0x50
 4671 02c6 9F       		.byte	0x9f
 4672 02c7 00000000 		.4byte	0
 4673 02cb 00000000 		.4byte	0
 4674              	.LLST21:
 4675 02cf 00000000 		.4byte	.LVL59
 4676 02d3 0C000000 		.4byte	.LVL60
 4677 02d7 0100     		.2byte	0x1
 4678 02d9 50       		.byte	0x50
 4679 02da 0C000000 		.4byte	.LVL60
 4680 02de 4C000000 		.4byte	.LFE23
 4681 02e2 0400     		.2byte	0x4
 4682 02e4 F3       		.byte	0xf3
 4683 02e5 01       		.uleb128 0x1
 4684 02e6 50       		.byte	0x50
 4685 02e7 9F       		.byte	0x9f
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 138


 4686 02e8 00000000 		.4byte	0
 4687 02ec 00000000 		.4byte	0
 4688              	.LLST22:
 4689 02f0 00000000 		.4byte	.LVL59
 4690 02f4 0F000000 		.4byte	.LVL61-1
 4691 02f8 0100     		.2byte	0x1
 4692 02fa 51       		.byte	0x51
 4693 02fb 0F000000 		.4byte	.LVL61-1
 4694 02ff 4C000000 		.4byte	.LFE23
 4695 0303 0400     		.2byte	0x4
 4696 0305 F3       		.byte	0xf3
 4697 0306 01       		.uleb128 0x1
 4698 0307 51       		.byte	0x51
 4699 0308 9F       		.byte	0x9f
 4700 0309 00000000 		.4byte	0
 4701 030d 00000000 		.4byte	0
 4702              	.LLST23:
 4703 0311 26000000 		.4byte	.LVL64
 4704 0315 43000000 		.4byte	.LVL69-1
 4705 0319 0100     		.2byte	0x1
 4706 031b 50       		.byte	0x50
 4707 031c 00000000 		.4byte	0
 4708 0320 00000000 		.4byte	0
 4709              	.LLST24:
 4710 0324 22000000 		.4byte	.LVL63
 4711 0328 3C000000 		.4byte	.LVL67
 4712 032c 0100     		.2byte	0x1
 4713 032e 55       		.byte	0x55
 4714 032f 00000000 		.4byte	0
 4715 0333 00000000 		.4byte	0
 4716              	.LLST25:
 4717 0337 32000000 		.4byte	.LVL65
 4718 033b 3E000000 		.4byte	.LVL68
 4719 033f 0100     		.2byte	0x1
 4720 0341 53       		.byte	0x53
 4721 0342 3E000000 		.4byte	.LVL68
 4722 0346 44000000 		.4byte	.LVL70
 4723 034a 0100     		.2byte	0x1
 4724 034c 55       		.byte	0x55
 4725 034d 00000000 		.4byte	0
 4726 0351 00000000 		.4byte	0
 4727              	.LLST26:
 4728 0355 00000000 		.4byte	.LVL71
 4729 0359 0A000000 		.4byte	.LVL72
 4730 035d 0100     		.2byte	0x1
 4731 035f 50       		.byte	0x50
 4732 0360 0A000000 		.4byte	.LVL72
 4733 0364 2C000000 		.4byte	.LFE24
 4734 0368 0400     		.2byte	0x4
 4735 036a F3       		.byte	0xf3
 4736 036b 01       		.uleb128 0x1
 4737 036c 50       		.byte	0x50
 4738 036d 9F       		.byte	0x9f
 4739 036e 00000000 		.4byte	0
 4740 0372 00000000 		.4byte	0
 4741              	.LLST27:
 4742 0376 24000000 		.4byte	.LVL74
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 139


 4743 037a 26000000 		.4byte	.LVL75
 4744 037e 0100     		.2byte	0x1
 4745 0380 50       		.byte	0x50
 4746 0381 00000000 		.4byte	0
 4747 0385 00000000 		.4byte	0
 4748              	.LLST28:
 4749 0389 00000000 		.4byte	.LVL76
 4750 038d 06000000 		.4byte	.LVL77
 4751 0391 0100     		.2byte	0x1
 4752 0393 50       		.byte	0x50
 4753 0394 06000000 		.4byte	.LVL77
 4754 0398 26000000 		.4byte	.LVL81
 4755 039c 0100     		.2byte	0x1
 4756 039e 54       		.byte	0x54
 4757 039f 00000000 		.4byte	0
 4758 03a3 00000000 		.4byte	0
 4759              	.LLST29:
 4760 03a7 00000000 		.4byte	.LVL82
 4761 03ab 08000000 		.4byte	.LVL83
 4762 03af 0100     		.2byte	0x1
 4763 03b1 50       		.byte	0x50
 4764 03b2 08000000 		.4byte	.LVL83
 4765 03b6 14000000 		.4byte	.LFE33
 4766 03ba 0400     		.2byte	0x4
 4767 03bc F3       		.byte	0xf3
 4768 03bd 01       		.uleb128 0x1
 4769 03be 50       		.byte	0x50
 4770 03bf 9F       		.byte	0x9f
 4771 03c0 00000000 		.4byte	0
 4772 03c4 00000000 		.4byte	0
 4773              	.LLST30:
 4774 03c8 00000000 		.4byte	.LVL85
 4775 03cc 0F000000 		.4byte	.LVL86-1
 4776 03d0 0100     		.2byte	0x1
 4777 03d2 50       		.byte	0x50
 4778 03d3 0F000000 		.4byte	.LVL86-1
 4779 03d7 D4000000 		.4byte	.LVL108
 4780 03db 0100     		.2byte	0x1
 4781 03dd 54       		.byte	0x54
 4782 03de D4000000 		.4byte	.LVL108
 4783 03e2 02010000 		.4byte	.LVL115
 4784 03e6 0700     		.2byte	0x7
 4785 03e8 74       		.byte	0x74
 4786 03e9 B3998080 		.sleb128 -268432205
 4786      7F
 4787 03ee 9F       		.byte	0x9f
 4788 03ef 02010000 		.4byte	.LVL115
 4789 03f3 08010000 		.4byte	.LVL116
 4790 03f7 0100     		.2byte	0x1
 4791 03f9 54       		.byte	0x54
 4792 03fa 08010000 		.4byte	.LVL116
 4793 03fe 10010000 		.4byte	.LVL118
 4794 0402 0300     		.2byte	0x3
 4795 0404 77       		.byte	0x77
 4796 0405 03       		.sleb128 3
 4797 0406 9F       		.byte	0x9f
 4798 0407 10010000 		.4byte	.LVL118
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 140


 4799 040b 64010000 		.4byte	.LFE7
 4800 040f 0400     		.2byte	0x4
 4801 0411 F3       		.byte	0xf3
 4802 0412 01       		.uleb128 0x1
 4803 0413 50       		.byte	0x50
 4804 0414 9F       		.byte	0x9f
 4805 0415 00000000 		.4byte	0
 4806 0419 00000000 		.4byte	0
 4807              	.LLST31:
 4808 041d 2A000000 		.4byte	.LVL88
 4809 0421 34000000 		.4byte	.LVL90
 4810 0425 0100     		.2byte	0x1
 4811 0427 5A       		.byte	0x5a
 4812 0428 46000000 		.4byte	.LVL91
 4813 042c 50000000 		.4byte	.LVL93
 4814 0430 0100     		.2byte	0x1
 4815 0432 5A       		.byte	0x5a
 4816 0433 62000000 		.4byte	.LVL94
 4817 0437 6C000000 		.4byte	.LVL96
 4818 043b 0100     		.2byte	0x1
 4819 043d 5A       		.byte	0x5a
 4820 043e 7E000000 		.4byte	.LVL97
 4821 0442 88000000 		.4byte	.LVL99
 4822 0446 0100     		.2byte	0x1
 4823 0448 5A       		.byte	0x5a
 4824 0449 90000000 		.4byte	.LVL100
 4825 044d 02010000 		.4byte	.LVL115
 4826 0451 0100     		.2byte	0x1
 4827 0453 5A       		.byte	0x5a
 4828 0454 00000000 		.4byte	0
 4829 0458 00000000 		.4byte	0
 4830              	.LLST32:
 4831 045c 32000000 		.4byte	.LVL89
 4832 0460 34000000 		.4byte	.LVL90
 4833 0464 0100     		.2byte	0x1
 4834 0466 59       		.byte	0x59
 4835 0467 4E000000 		.4byte	.LVL92
 4836 046b 50000000 		.4byte	.LVL93
 4837 046f 0100     		.2byte	0x1
 4838 0471 59       		.byte	0x59
 4839 0472 6A000000 		.4byte	.LVL95
 4840 0476 6C000000 		.4byte	.LVL96
 4841 047a 0100     		.2byte	0x1
 4842 047c 59       		.byte	0x59
 4843 047d 86000000 		.4byte	.LVL98
 4844 0481 88000000 		.4byte	.LVL99
 4845 0485 0100     		.2byte	0x1
 4846 0487 59       		.byte	0x59
 4847 0488 98000000 		.4byte	.LVL101
 4848 048c 02010000 		.4byte	.LVL115
 4849 0490 0100     		.2byte	0x1
 4850 0492 59       		.byte	0x59
 4851 0493 00000000 		.4byte	0
 4852 0497 00000000 		.4byte	0
 4853              	.LLST33:
 4854 049b 9C000000 		.4byte	.LVL102
 4855 049f 02010000 		.4byte	.LVL115
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 141


 4856 04a3 0100     		.2byte	0x1
 4857 04a5 56       		.byte	0x56
 4858 04a6 00000000 		.4byte	0
 4859 04aa 00000000 		.4byte	0
 4860              	.LLST34:
 4861 04ae B0000000 		.4byte	.LVL104
 4862 04b2 B4000000 		.4byte	.LVL105
 4863 04b6 0200     		.2byte	0x2
 4864 04b8 49       		.byte	0x49
 4865 04b9 9F       		.byte	0x9f
 4866 04ba BC000000 		.4byte	.LVL106
 4867 04be 02010000 		.4byte	.LVL115
 4868 04c2 0100     		.2byte	0x1
 4869 04c4 55       		.byte	0x55
 4870 04c5 00000000 		.4byte	0
 4871 04c9 00000000 		.4byte	0
 4872              	.LLST35:
 4873 04cd D8000000 		.4byte	.LVL109
 4874 04d1 DE000000 		.4byte	.LVL110
 4875 04d5 0100     		.2byte	0x1
 4876 04d7 53       		.byte	0x53
 4877 04d8 DE000000 		.4byte	.LVL110
 4878 04dc E0000000 		.4byte	.LVL111
 4879 04e0 0400     		.2byte	0x4
 4880 04e2 72       		.byte	0x72
 4881 04e3 00       		.sleb128 0
 4882 04e4 06       		.byte	0x6
 4883 04e5 9F       		.byte	0x9f
 4884 04e6 E0000000 		.4byte	.LVL111
 4885 04ea E2000000 		.4byte	.LVL112
 4886 04ee 0700     		.2byte	0x7
 4887 04f0 0C       		.byte	0xc
 4888 04f1 28FF0B40 		.4byte	0x400bff28
 4889 04f5 06       		.byte	0x6
 4890 04f6 9F       		.byte	0x9f
 4891 04f7 00000000 		.4byte	0
 4892 04fb 00000000 		.4byte	0
 4893              	.LLST36:
 4894 04ff 12000000 		.4byte	.LVL87
 4895 0503 AA000000 		.4byte	.LVL103
 4896 0507 0200     		.2byte	0x2
 4897 0509 91       		.byte	0x91
 4898 050a 5C       		.sleb128 -36
 4899 050b B4000000 		.4byte	.LVL105
 4900 050f BC000000 		.4byte	.LVL106
 4901 0513 0200     		.2byte	0x2
 4902 0515 91       		.byte	0x91
 4903 0516 5C       		.sleb128 -36
 4904 0517 02010000 		.4byte	.LVL115
 4905 051b 08010000 		.4byte	.LVL116
 4906 051f 0200     		.2byte	0x2
 4907 0521 91       		.byte	0x91
 4908 0522 5C       		.sleb128 -36
 4909 0523 00000000 		.4byte	0
 4910 0527 00000000 		.4byte	0
 4911              	.LLST37:
 4912 052b 00000000 		.4byte	.LVL119
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 142


 4913 052f 26000000 		.4byte	.LVL121
 4914 0533 0100     		.2byte	0x1
 4915 0535 50       		.byte	0x50
 4916 0536 26000000 		.4byte	.LVL121
 4917 053a 42000000 		.4byte	.LVL126
 4918 053e 0100     		.2byte	0x1
 4919 0540 54       		.byte	0x54
 4920 0541 00000000 		.4byte	0
 4921 0545 00000000 		.4byte	0
 4922              	.LLST38:
 4923 0549 04000000 		.4byte	.LVL120
 4924 054d 42000000 		.4byte	.LVL125
 4925 0551 0200     		.2byte	0x2
 4926 0553 30       		.byte	0x30
 4927 0554 9F       		.byte	0x9f
 4928 0555 42000000 		.4byte	.LVL125
 4929 0559 54000000 		.4byte	.LFE8
 4930 055d 0100     		.2byte	0x1
 4931 055f 50       		.byte	0x50
 4932 0560 00000000 		.4byte	0
 4933 0564 00000000 		.4byte	0
 4934              	.LLST39:
 4935 0568 00000000 		.4byte	.LVL127
 4936 056c 14000000 		.4byte	.LVL128
 4937 0570 0100     		.2byte	0x1
 4938 0572 50       		.byte	0x50
 4939 0573 14000000 		.4byte	.LVL128
 4940 0577 18000000 		.4byte	.LVL129
 4941 057b 0100     		.2byte	0x1
 4942 057d 53       		.byte	0x53
 4943 057e 18000000 		.4byte	.LVL129
 4944 0582 44000000 		.4byte	.LFE12
 4945 0586 0400     		.2byte	0x4
 4946 0588 F3       		.byte	0xf3
 4947 0589 01       		.uleb128 0x1
 4948 058a 50       		.byte	0x50
 4949 058b 9F       		.byte	0x9f
 4950 058c 00000000 		.4byte	0
 4951 0590 00000000 		.4byte	0
 4952              	.LLST40:
 4953 0594 00000000 		.4byte	.LVL132
 4954 0598 1A000000 		.4byte	.LVL133
 4955 059c 0100     		.2byte	0x1
 4956 059e 50       		.byte	0x50
 4957 059f 1A000000 		.4byte	.LVL133
 4958 05a3 4C000000 		.4byte	.LFE34
 4959 05a7 0400     		.2byte	0x4
 4960 05a9 F3       		.byte	0xf3
 4961 05aa 01       		.uleb128 0x1
 4962 05ab 50       		.byte	0x50
 4963 05ac 9F       		.byte	0x9f
 4964 05ad 00000000 		.4byte	0
 4965 05b1 00000000 		.4byte	0
 4966              	.LLST41:
 4967 05b5 00000000 		.4byte	.LVL137
 4968 05b9 02000000 		.4byte	.LVL138
 4969 05bd 0100     		.2byte	0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 143


 4970 05bf 50       		.byte	0x50
 4971 05c0 02000000 		.4byte	.LVL138
 4972 05c4 10000000 		.4byte	.LFE41
 4973 05c8 0400     		.2byte	0x4
 4974 05ca F3       		.byte	0xf3
 4975 05cb 01       		.uleb128 0x1
 4976 05cc 50       		.byte	0x50
 4977 05cd 9F       		.byte	0x9f
 4978 05ce 00000000 		.4byte	0
 4979 05d2 00000000 		.4byte	0
 4980              	.LLST42:
 4981 05d6 0C000000 		.4byte	.LVL141
 4982 05da 1C000000 		.4byte	.LVL144
 4983 05de 0100     		.2byte	0x1
 4984 05e0 54       		.byte	0x54
 4985 05e1 1E000000 		.4byte	.LVL145
 4986 05e5 22000000 		.4byte	.LVL146
 4987 05e9 0100     		.2byte	0x1
 4988 05eb 54       		.byte	0x54
 4989 05ec 00000000 		.4byte	0
 4990 05f0 00000000 		.4byte	0
 4991              	.LLST43:
 4992 05f4 02000000 		.4byte	.LVL147
 4993 05f8 06000000 		.4byte	.LVL148
 4994 05fc 0200     		.2byte	0x2
 4995 05fe 30       		.byte	0x30
 4996 05ff 9F       		.byte	0x9f
 4997 0600 06000000 		.4byte	.LVL148
 4998 0604 1B000000 		.4byte	.LVL150-1
 4999 0608 0100     		.2byte	0x1
 5000 060a 53       		.byte	0x53
 5001 060b 00000000 		.4byte	0
 5002 060f 00000000 		.4byte	0
 5003              	.LLST44:
 5004 0613 00000000 		.4byte	.LVL158
 5005 0617 06000000 		.4byte	.LVL159
 5006 061b 0100     		.2byte	0x1
 5007 061d 50       		.byte	0x50
 5008 061e 06000000 		.4byte	.LVL159
 5009 0622 10000000 		.4byte	.LFE47
 5010 0626 0400     		.2byte	0x4
 5011 0628 F3       		.byte	0xf3
 5012 0629 01       		.uleb128 0x1
 5013 062a 50       		.byte	0x50
 5014 062b 9F       		.byte	0x9f
 5015 062c 00000000 		.4byte	0
 5016 0630 00000000 		.4byte	0
 5017              	.LLST45:
 5018 0634 00000000 		.4byte	.LVL160
 5019 0638 02000000 		.4byte	.LVL161
 5020 063c 0100     		.2byte	0x1
 5021 063e 50       		.byte	0x50
 5022 063f 02000000 		.4byte	.LVL161
 5023 0643 0C000000 		.4byte	.LFE48
 5024 0647 0400     		.2byte	0x4
 5025 0649 F3       		.byte	0xf3
 5026 064a 01       		.uleb128 0x1
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 144


 5027 064b 50       		.byte	0x50
 5028 064c 9F       		.byte	0x9f
 5029 064d 00000000 		.4byte	0
 5030 0651 00000000 		.4byte	0
 5031              	.LLST46:
 5032 0655 00000000 		.4byte	.LVL163
 5033 0659 0A000000 		.4byte	.LVL165
 5034 065d 0100     		.2byte	0x1
 5035 065f 50       		.byte	0x50
 5036 0660 0A000000 		.4byte	.LVL165
 5037 0664 20000000 		.4byte	.LFE51
 5038 0668 0400     		.2byte	0x4
 5039 066a F3       		.byte	0xf3
 5040 066b 01       		.uleb128 0x1
 5041 066c 50       		.byte	0x50
 5042 066d 9F       		.byte	0x9f
 5043 066e 00000000 		.4byte	0
 5044 0672 00000000 		.4byte	0
 5045              	.LLST47:
 5046 0676 08000000 		.4byte	.LVL164
 5047 067a 12000000 		.4byte	.LVL166
 5048 067e 0100     		.2byte	0x1
 5049 0680 53       		.byte	0x53
 5050 0681 12000000 		.4byte	.LVL166
 5051 0685 20000000 		.4byte	.LFE51
 5052 0689 0100     		.2byte	0x1
 5053 068b 50       		.byte	0x50
 5054 068c 00000000 		.4byte	0
 5055 0690 00000000 		.4byte	0
 5056              	.LLST48:
 5057 0694 00000000 		.4byte	.LVL167
 5058 0698 0A000000 		.4byte	.LVL169
 5059 069c 0100     		.2byte	0x1
 5060 069e 50       		.byte	0x50
 5061 069f 0A000000 		.4byte	.LVL169
 5062 06a3 20000000 		.4byte	.LFE52
 5063 06a7 0400     		.2byte	0x4
 5064 06a9 F3       		.byte	0xf3
 5065 06aa 01       		.uleb128 0x1
 5066 06ab 50       		.byte	0x50
 5067 06ac 9F       		.byte	0x9f
 5068 06ad 00000000 		.4byte	0
 5069 06b1 00000000 		.4byte	0
 5070              	.LLST49:
 5071 06b5 08000000 		.4byte	.LVL168
 5072 06b9 12000000 		.4byte	.LVL170
 5073 06bd 0100     		.2byte	0x1
 5074 06bf 53       		.byte	0x53
 5075 06c0 12000000 		.4byte	.LVL170
 5076 06c4 20000000 		.4byte	.LFE52
 5077 06c8 0100     		.2byte	0x1
 5078 06ca 50       		.byte	0x50
 5079 06cb 00000000 		.4byte	0
 5080 06cf 00000000 		.4byte	0
 5081              	.LLST50:
 5082 06d3 00000000 		.4byte	.LVL171
 5083 06d7 0A000000 		.4byte	.LVL173
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 145


 5084 06db 0100     		.2byte	0x1
 5085 06dd 50       		.byte	0x50
 5086 06de 0A000000 		.4byte	.LVL173
 5087 06e2 20000000 		.4byte	.LFE53
 5088 06e6 0400     		.2byte	0x4
 5089 06e8 F3       		.byte	0xf3
 5090 06e9 01       		.uleb128 0x1
 5091 06ea 50       		.byte	0x50
 5092 06eb 9F       		.byte	0x9f
 5093 06ec 00000000 		.4byte	0
 5094 06f0 00000000 		.4byte	0
 5095              	.LLST51:
 5096 06f4 08000000 		.4byte	.LVL172
 5097 06f8 12000000 		.4byte	.LVL174
 5098 06fc 0100     		.2byte	0x1
 5099 06fe 53       		.byte	0x53
 5100 06ff 12000000 		.4byte	.LVL174
 5101 0703 20000000 		.4byte	.LFE53
 5102 0707 0100     		.2byte	0x1
 5103 0709 50       		.byte	0x50
 5104 070a 00000000 		.4byte	0
 5105 070e 00000000 		.4byte	0
 5106              	.LLST52:
 5107 0712 00000000 		.4byte	.LVL175
 5108 0716 08000000 		.4byte	.LVL176
 5109 071a 0100     		.2byte	0x1
 5110 071c 50       		.byte	0x50
 5111 071d 08000000 		.4byte	.LVL176
 5112 0721 1C000000 		.4byte	.LVL180
 5113 0725 0400     		.2byte	0x4
 5114 0727 F3       		.byte	0xf3
 5115 0728 01       		.uleb128 0x1
 5116 0729 50       		.byte	0x50
 5117 072a 9F       		.byte	0x9f
 5118 072b 1C000000 		.4byte	.LVL180
 5119 072f 22000000 		.4byte	.LVL181
 5120 0733 0100     		.2byte	0x1
 5121 0735 50       		.byte	0x50
 5122 0736 22000000 		.4byte	.LVL181
 5123 073a 36000000 		.4byte	.LVL185
 5124 073e 0400     		.2byte	0x4
 5125 0740 F3       		.byte	0xf3
 5126 0741 01       		.uleb128 0x1
 5127 0742 50       		.byte	0x50
 5128 0743 9F       		.byte	0x9f
 5129 0744 36000000 		.4byte	.LVL185
 5130 0748 3C000000 		.4byte	.LVL186
 5131 074c 0100     		.2byte	0x1
 5132 074e 50       		.byte	0x50
 5133 074f 3C000000 		.4byte	.LVL186
 5134 0753 50000000 		.4byte	.LVL190
 5135 0757 0400     		.2byte	0x4
 5136 0759 F3       		.byte	0xf3
 5137 075a 01       		.uleb128 0x1
 5138 075b 50       		.byte	0x50
 5139 075c 9F       		.byte	0x9f
 5140 075d 50000000 		.4byte	.LVL190
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 146


 5141 0761 52000000 		.4byte	.LVL191
 5142 0765 0100     		.2byte	0x1
 5143 0767 50       		.byte	0x50
 5144 0768 52000000 		.4byte	.LVL191
 5145 076c 68000000 		.4byte	.LFE54
 5146 0770 0400     		.2byte	0x4
 5147 0772 F3       		.byte	0xf3
 5148 0773 01       		.uleb128 0x1
 5149 0774 50       		.byte	0x50
 5150 0775 9F       		.byte	0x9f
 5151 0776 00000000 		.4byte	0
 5152 077a 00000000 		.4byte	0
 5153              	.LLST53:
 5154 077e 00000000 		.4byte	.LVL175
 5155 0782 10000000 		.4byte	.LVL178
 5156 0786 0100     		.2byte	0x1
 5157 0788 51       		.byte	0x51
 5158 0789 10000000 		.4byte	.LVL178
 5159 078d 1C000000 		.4byte	.LVL180
 5160 0791 0400     		.2byte	0x4
 5161 0793 F3       		.byte	0xf3
 5162 0794 01       		.uleb128 0x1
 5163 0795 51       		.byte	0x51
 5164 0796 9F       		.byte	0x9f
 5165 0797 1C000000 		.4byte	.LVL180
 5166 079b 2A000000 		.4byte	.LVL183
 5167 079f 0100     		.2byte	0x1
 5168 07a1 51       		.byte	0x51
 5169 07a2 2A000000 		.4byte	.LVL183
 5170 07a6 36000000 		.4byte	.LVL185
 5171 07aa 0400     		.2byte	0x4
 5172 07ac F3       		.byte	0xf3
 5173 07ad 01       		.uleb128 0x1
 5174 07ae 51       		.byte	0x51
 5175 07af 9F       		.byte	0x9f
 5176 07b0 36000000 		.4byte	.LVL185
 5177 07b4 44000000 		.4byte	.LVL188
 5178 07b8 0100     		.2byte	0x1
 5179 07ba 51       		.byte	0x51
 5180 07bb 44000000 		.4byte	.LVL188
 5181 07bf 50000000 		.4byte	.LVL190
 5182 07c3 0400     		.2byte	0x4
 5183 07c5 F3       		.byte	0xf3
 5184 07c6 01       		.uleb128 0x1
 5185 07c7 51       		.byte	0x51
 5186 07c8 9F       		.byte	0x9f
 5187 07c9 50000000 		.4byte	.LVL190
 5188 07cd 55000000 		.4byte	.LVL192-1
 5189 07d1 0100     		.2byte	0x1
 5190 07d3 51       		.byte	0x51
 5191 07d4 55000000 		.4byte	.LVL192-1
 5192 07d8 68000000 		.4byte	.LFE54
 5193 07dc 0400     		.2byte	0x4
 5194 07de F3       		.byte	0xf3
 5195 07df 01       		.uleb128 0x1
 5196 07e0 51       		.byte	0x51
 5197 07e1 9F       		.byte	0x9f
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 147


 5198 07e2 00000000 		.4byte	0
 5199 07e6 00000000 		.4byte	0
 5200              	.LLST54:
 5201 07ea 0E000000 		.4byte	.LVL177
 5202 07ee 18000000 		.4byte	.LVL179
 5203 07f2 0100     		.2byte	0x1
 5204 07f4 53       		.byte	0x53
 5205 07f5 18000000 		.4byte	.LVL179
 5206 07f9 1C000000 		.4byte	.LVL180
 5207 07fd 0100     		.2byte	0x1
 5208 07ff 51       		.byte	0x51
 5209 0800 28000000 		.4byte	.LVL182
 5210 0804 32000000 		.4byte	.LVL184
 5211 0808 0100     		.2byte	0x1
 5212 080a 53       		.byte	0x53
 5213 080b 32000000 		.4byte	.LVL184
 5214 080f 36000000 		.4byte	.LVL185
 5215 0813 0100     		.2byte	0x1
 5216 0815 51       		.byte	0x51
 5217 0816 42000000 		.4byte	.LVL187
 5218 081a 4C000000 		.4byte	.LVL189
 5219 081e 0100     		.2byte	0x1
 5220 0820 53       		.byte	0x53
 5221 0821 4C000000 		.4byte	.LVL189
 5222 0825 50000000 		.4byte	.LVL190
 5223 0829 0100     		.2byte	0x1
 5224 082b 51       		.byte	0x51
 5225 082c 00000000 		.4byte	0
 5226 0830 00000000 		.4byte	0
 5227              		.section	.debug_aranges,"",%progbits
 5228 0000 BC010000 		.4byte	0x1bc
 5229 0004 0200     		.2byte	0x2
 5230 0006 00000000 		.4byte	.Ldebug_info0
 5231 000a 04       		.byte	0x4
 5232 000b 00       		.byte	0
 5233 000c 0000     		.2byte	0
 5234 000e 0000     		.2byte	0
 5235 0010 00000000 		.4byte	.LFB2
 5236 0014 14000000 		.4byte	.LFE2-.LFB2
 5237 0018 00000000 		.4byte	.LFB3
 5238 001c 10000000 		.4byte	.LFE3-.LFB3
 5239 0020 00000000 		.4byte	.LFB4
 5240 0024 20000000 		.4byte	.LFE4-.LFB4
 5241 0028 00000000 		.4byte	.LFB5
 5242 002c 1C000000 		.4byte	.LFE5-.LFB5
 5243 0030 00000000 		.4byte	.LFB6
 5244 0034 28000000 		.4byte	.LFE6-.LFB6
 5245 0038 00000000 		.4byte	.LFB9
 5246 003c 24000000 		.4byte	.LFE9-.LFB9
 5247 0040 00000000 		.4byte	.LFB10
 5248 0044 10000000 		.4byte	.LFE10-.LFB10
 5249 0048 00000000 		.4byte	.LFB13
 5250 004c 20000000 		.4byte	.LFE13-.LFB13
 5251 0050 00000000 		.4byte	.LFB14
 5252 0054 10000000 		.4byte	.LFE14-.LFB14
 5253 0058 00000000 		.4byte	.LFB15
 5254 005c 0C000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 148


 5255 0060 00000000 		.4byte	.LFB16
 5256 0064 14000000 		.4byte	.LFE16-.LFB16
 5257 0068 00000000 		.4byte	.LFB17
 5258 006c 10000000 		.4byte	.LFE17-.LFB17
 5259 0070 00000000 		.4byte	.LFB18
 5260 0074 0C000000 		.4byte	.LFE18-.LFB18
 5261 0078 00000000 		.4byte	.LFB25
 5262 007c 14000000 		.4byte	.LFE25-.LFB25
 5263 0080 00000000 		.4byte	.LFB26
 5264 0084 18000000 		.4byte	.LFE26-.LFB26
 5265 0088 00000000 		.4byte	.LFB27
 5266 008c 14000000 		.4byte	.LFE27-.LFB27
 5267 0090 00000000 		.4byte	.LFB28
 5268 0094 14000000 		.4byte	.LFE28-.LFB28
 5269 0098 00000000 		.4byte	.LFB29
 5270 009c 14000000 		.4byte	.LFE29-.LFB29
 5271 00a0 00000000 		.4byte	.LFB30
 5272 00a4 04000000 		.4byte	.LFE30-.LFB30
 5273 00a8 00000000 		.4byte	.LFB11
 5274 00ac 38000000 		.4byte	.LFE11-.LFB11
 5275 00b0 00000000 		.4byte	.LFB19
 5276 00b4 20000000 		.4byte	.LFE19-.LFB19
 5277 00b8 00000000 		.4byte	.LFB20
 5278 00bc 1C000000 		.4byte	.LFE20-.LFB20
 5279 00c0 00000000 		.4byte	.LFB21
 5280 00c4 24000000 		.4byte	.LFE21-.LFB21
 5281 00c8 00000000 		.4byte	.LFB22
 5282 00cc 20000000 		.4byte	.LFE22-.LFB22
 5283 00d0 00000000 		.4byte	.LFB23
 5284 00d4 4C000000 		.4byte	.LFE23-.LFB23
 5285 00d8 00000000 		.4byte	.LFB24
 5286 00dc 2C000000 		.4byte	.LFE24-.LFB24
 5287 00e0 00000000 		.4byte	.LFB31
 5288 00e4 18000000 		.4byte	.LFE31-.LFB31
 5289 00e8 00000000 		.4byte	.LFB32
 5290 00ec 30000000 		.4byte	.LFE32-.LFB32
 5291 00f0 00000000 		.4byte	.LFB33
 5292 00f4 14000000 		.4byte	.LFE33-.LFB33
 5293 00f8 00000000 		.4byte	.LFB7
 5294 00fc 64010000 		.4byte	.LFE7-.LFB7
 5295 0100 00000000 		.4byte	.LFB8
 5296 0104 54000000 		.4byte	.LFE8-.LFB8
 5297 0108 00000000 		.4byte	.LFB12
 5298 010c 44000000 		.4byte	.LFE12-.LFB12
 5299 0110 00000000 		.4byte	.LFB34
 5300 0114 4C000000 		.4byte	.LFE34-.LFB34
 5301 0118 00000000 		.4byte	.LFB38
 5302 011c 10000000 		.4byte	.LFE38-.LFB38
 5303 0120 00000000 		.4byte	.LFB39
 5304 0124 10000000 		.4byte	.LFE39-.LFB39
 5305 0128 00000000 		.4byte	.LFB37
 5306 012c 18000000 		.4byte	.LFE37-.LFB37
 5307 0130 00000000 		.4byte	.LFB40
 5308 0134 10000000 		.4byte	.LFE40-.LFB40
 5309 0138 00000000 		.4byte	.LFB41
 5310 013c 10000000 		.4byte	.LFE41-.LFB41
 5311 0140 00000000 		.4byte	.LFB42
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 149


 5312 0144 10000000 		.4byte	.LFE42-.LFB42
 5313 0148 00000000 		.4byte	.LFB43
 5314 014c 10000000 		.4byte	.LFE43-.LFB43
 5315 0150 00000000 		.4byte	.LFB44
 5316 0154 20000000 		.4byte	.LFE44-.LFB44
 5317 0158 00000000 		.4byte	.LFB45
 5318 015c 10000000 		.4byte	.LFE45-.LFB45
 5319 0160 00000000 		.4byte	.LFB49
 5320 0164 28000000 		.4byte	.LFE49-.LFB49
 5321 0168 00000000 		.4byte	.LFB46
 5322 016c 0C000000 		.4byte	.LFE46-.LFB46
 5323 0170 00000000 		.4byte	.LFB36
 5324 0174 4C000000 		.4byte	.LFE36-.LFB36
 5325 0178 00000000 		.4byte	.LFB35
 5326 017c 20000000 		.4byte	.LFE35-.LFB35
 5327 0180 00000000 		.4byte	.LFB47
 5328 0184 10000000 		.4byte	.LFE47-.LFB47
 5329 0188 00000000 		.4byte	.LFB48
 5330 018c 0C000000 		.4byte	.LFE48-.LFB48
 5331 0190 00000000 		.4byte	.LFB50
 5332 0194 70000000 		.4byte	.LFE50-.LFB50
 5333 0198 00000000 		.4byte	.LFB51
 5334 019c 20000000 		.4byte	.LFE51-.LFB51
 5335 01a0 00000000 		.4byte	.LFB52
 5336 01a4 20000000 		.4byte	.LFE52-.LFB52
 5337 01a8 00000000 		.4byte	.LFB53
 5338 01ac 20000000 		.4byte	.LFE53-.LFB53
 5339 01b0 00000000 		.4byte	.LFB54
 5340 01b4 68000000 		.4byte	.LFE54-.LFB54
 5341 01b8 00000000 		.4byte	0
 5342 01bc 00000000 		.4byte	0
 5343              		.section	.debug_ranges,"",%progbits
 5344              	.Ldebug_ranges0:
 5345 0000 00000000 		.4byte	.LFB2
 5346 0004 14000000 		.4byte	.LFE2
 5347 0008 00000000 		.4byte	.LFB3
 5348 000c 10000000 		.4byte	.LFE3
 5349 0010 00000000 		.4byte	.LFB4
 5350 0014 20000000 		.4byte	.LFE4
 5351 0018 00000000 		.4byte	.LFB5
 5352 001c 1C000000 		.4byte	.LFE5
 5353 0020 00000000 		.4byte	.LFB6
 5354 0024 28000000 		.4byte	.LFE6
 5355 0028 00000000 		.4byte	.LFB9
 5356 002c 24000000 		.4byte	.LFE9
 5357 0030 00000000 		.4byte	.LFB10
 5358 0034 10000000 		.4byte	.LFE10
 5359 0038 00000000 		.4byte	.LFB13
 5360 003c 20000000 		.4byte	.LFE13
 5361 0040 00000000 		.4byte	.LFB14
 5362 0044 10000000 		.4byte	.LFE14
 5363 0048 00000000 		.4byte	.LFB15
 5364 004c 0C000000 		.4byte	.LFE15
 5365 0050 00000000 		.4byte	.LFB16
 5366 0054 14000000 		.4byte	.LFE16
 5367 0058 00000000 		.4byte	.LFB17
 5368 005c 10000000 		.4byte	.LFE17
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 150


 5369 0060 00000000 		.4byte	.LFB18
 5370 0064 0C000000 		.4byte	.LFE18
 5371 0068 00000000 		.4byte	.LFB25
 5372 006c 14000000 		.4byte	.LFE25
 5373 0070 00000000 		.4byte	.LFB26
 5374 0074 18000000 		.4byte	.LFE26
 5375 0078 00000000 		.4byte	.LFB27
 5376 007c 14000000 		.4byte	.LFE27
 5377 0080 00000000 		.4byte	.LFB28
 5378 0084 14000000 		.4byte	.LFE28
 5379 0088 00000000 		.4byte	.LFB29
 5380 008c 14000000 		.4byte	.LFE29
 5381 0090 00000000 		.4byte	.LFB30
 5382 0094 04000000 		.4byte	.LFE30
 5383 0098 00000000 		.4byte	.LFB11
 5384 009c 38000000 		.4byte	.LFE11
 5385 00a0 00000000 		.4byte	.LFB19
 5386 00a4 20000000 		.4byte	.LFE19
 5387 00a8 00000000 		.4byte	.LFB20
 5388 00ac 1C000000 		.4byte	.LFE20
 5389 00b0 00000000 		.4byte	.LFB21
 5390 00b4 24000000 		.4byte	.LFE21
 5391 00b8 00000000 		.4byte	.LFB22
 5392 00bc 20000000 		.4byte	.LFE22
 5393 00c0 00000000 		.4byte	.LFB23
 5394 00c4 4C000000 		.4byte	.LFE23
 5395 00c8 00000000 		.4byte	.LFB24
 5396 00cc 2C000000 		.4byte	.LFE24
 5397 00d0 00000000 		.4byte	.LFB31
 5398 00d4 18000000 		.4byte	.LFE31
 5399 00d8 00000000 		.4byte	.LFB32
 5400 00dc 30000000 		.4byte	.LFE32
 5401 00e0 00000000 		.4byte	.LFB33
 5402 00e4 14000000 		.4byte	.LFE33
 5403 00e8 00000000 		.4byte	.LFB7
 5404 00ec 64010000 		.4byte	.LFE7
 5405 00f0 00000000 		.4byte	.LFB8
 5406 00f4 54000000 		.4byte	.LFE8
 5407 00f8 00000000 		.4byte	.LFB12
 5408 00fc 44000000 		.4byte	.LFE12
 5409 0100 00000000 		.4byte	.LFB34
 5410 0104 4C000000 		.4byte	.LFE34
 5411 0108 00000000 		.4byte	.LFB38
 5412 010c 10000000 		.4byte	.LFE38
 5413 0110 00000000 		.4byte	.LFB39
 5414 0114 10000000 		.4byte	.LFE39
 5415 0118 00000000 		.4byte	.LFB37
 5416 011c 18000000 		.4byte	.LFE37
 5417 0120 00000000 		.4byte	.LFB40
 5418 0124 10000000 		.4byte	.LFE40
 5419 0128 00000000 		.4byte	.LFB41
 5420 012c 10000000 		.4byte	.LFE41
 5421 0130 00000000 		.4byte	.LFB42
 5422 0134 10000000 		.4byte	.LFE42
 5423 0138 00000000 		.4byte	.LFB43
 5424 013c 10000000 		.4byte	.LFE43
 5425 0140 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 151


 5426 0144 20000000 		.4byte	.LFE44
 5427 0148 00000000 		.4byte	.LFB45
 5428 014c 10000000 		.4byte	.LFE45
 5429 0150 00000000 		.4byte	.LFB49
 5430 0154 28000000 		.4byte	.LFE49
 5431 0158 00000000 		.4byte	.LFB46
 5432 015c 0C000000 		.4byte	.LFE46
 5433 0160 00000000 		.4byte	.LFB36
 5434 0164 4C000000 		.4byte	.LFE36
 5435 0168 00000000 		.4byte	.LFB35
 5436 016c 20000000 		.4byte	.LFE35
 5437 0170 00000000 		.4byte	.LFB47
 5438 0174 10000000 		.4byte	.LFE47
 5439 0178 00000000 		.4byte	.LFB48
 5440 017c 0C000000 		.4byte	.LFE48
 5441 0180 00000000 		.4byte	.LFB50
 5442 0184 70000000 		.4byte	.LFE50
 5443 0188 00000000 		.4byte	.LFB51
 5444 018c 20000000 		.4byte	.LFE51
 5445 0190 00000000 		.4byte	.LFB52
 5446 0194 20000000 		.4byte	.LFE52
 5447 0198 00000000 		.4byte	.LFB53
 5448 019c 20000000 		.4byte	.LFE53
 5449 01a0 00000000 		.4byte	.LFB54
 5450 01a4 68000000 		.4byte	.LFE54
 5451 01a8 00000000 		.4byte	0
 5452 01ac 00000000 		.4byte	0
 5453              		.section	.debug_line,"",%progbits
 5454              	.Ldebug_line0:
 5455 0000 21050000 		.section	.debug_str,"MS",%progbits,1
 5455      02004F00 
 5455      00000201 
 5455      FB0E0D00 
 5455      01010101 
 5456              	.LASF54:
 5457 0000 72616D56 		.ascii	"ramVectorTable\000"
 5457      6563746F 
 5457      72546162 
 5457      6C6500
 5458              	.LASF70:
 5459 000f 62675472 		.ascii	"bgTrim4\000"
 5459      696D3400 
 5460              	.LASF10:
 5461 0017 75696E74 		.ascii	"uint16\000"
 5461      313600
 5462              	.LASF40:
 5463 001e 696E7453 		.ascii	"intState\000"
 5463      74617465 
 5463      00
 5464              	.LASF26:
 5465 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5465      73436C6B 
 5465      57726974 
 5465      65486663 
 5465      6C6B4469 
 5466              	.LASF15:
 5467 0040 63797374 		.ascii	"cystatus\000"
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 152


 5467      61747573 
 5467      00
 5468              	.LASF53:
 5469 0049 6F6C6449 		.ascii	"oldIsr\000"
 5469      737200
 5470              	.LASF96:
 5471 0050 72657456 		.ascii	"retVal\000"
 5471      616C00
 5472              	.LASF39:
 5473 0057 43794469 		.ascii	"CyDisableInts\000"
 5473      7361626C 
 5473      65496E74 
 5473      7300
 5474              	.LASF73:
 5475 0065 63757272 		.ascii	"currentImoTrim2Value\000"
 5475      656E7449 
 5475      6D6F5472 
 5475      696D3256 
 5475      616C7565 
 5476              	.LASF7:
 5477 007a 6C6F6E67 		.ascii	"long long unsigned int\000"
 5477      206C6F6E 
 5477      6720756E 
 5477      7369676E 
 5477      65642069 
 5478              	.LASF112:
 5479 0091 43795379 		.ascii	"CySysTickInitVar\000"
 5479      73546963 
 5479      6B496E69 
 5479      74566172 
 5479      00
 5480              	.LASF41:
 5481 00a2 4379456E 		.ascii	"CyEnableInts\000"
 5481      61626C65 
 5481      496E7473 
 5481      00
 5482              	.LASF106:
 5483 00af 696E7465 		.ascii	"interfaceNumber\000"
 5483      72666163 
 5483      654E756D 
 5483      62657200 
 5484              	.LASF63:
 5485 00bf 4379536F 		.ascii	"CySoftwareReset\000"
 5485      66747761 
 5485      72655265 
 5485      73657400 
 5486              	.LASF81:
 5487 00cf 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5487      73546963 
 5487      6B456E61 
 5487      626C6549 
 5487      6E746572 
 5488              	.LASF45:
 5489 00e8 4379496E 		.ascii	"CyIntGetState\000"
 5489      74476574 
 5489      53746174 
 5489      6500
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 153


 5490              	.LASF6:
 5491 00f6 6C6F6E67 		.ascii	"long long int\000"
 5491      206C6F6E 
 5491      6720696E 
 5491      7400
 5492              	.LASF0:
 5493 0104 7369676E 		.ascii	"signed char\000"
 5493      65642063 
 5493      68617200 
 5494              	.LASF69:
 5495 0110 66726571 		.ascii	"freq\000"
 5495      00
 5496              	.LASF79:
 5497 0115 43794465 		.ascii	"CyDelayFreq\000"
 5497      6C617946 
 5497      72657100 
 5498              	.LASF23:
 5499 0121 696E7465 		.ascii	"interruptState\000"
 5499      72727570 
 5499      74537461 
 5499      746500
 5500              	.LASF86:
 5501 0130 43795379 		.ascii	"CySysTickGetReload\000"
 5501      73546963 
 5501      6B476574 
 5501      52656C6F 
 5501      616400
 5502              	.LASF4:
 5503 0143 6C6F6E67 		.ascii	"long int\000"
 5503      20696E74 
 5503      00
 5504              	.LASF46:
 5505 014c 4379496E 		.ascii	"CyIntDisable\000"
 5505      74446973 
 5505      61626C65 
 5505      00
 5506              	.LASF97:
 5507 0159 43795379 		.ascii	"CySysTickGetCallback\000"
 5507      73546963 
 5507      6B476574 
 5507      43616C6C 
 5507      6261636B 
 5508              	.LASF9:
 5509 016e 75696E74 		.ascii	"uint8\000"
 5509      3800
 5510              	.LASF109:
 5511 0174 63796465 		.ascii	"cydelayFreqKhz\000"
 5511      6C617946 
 5511      7265714B 
 5511      687A00
 5512              	.LASF66:
 5513 0183 43794465 		.ascii	"CyDelayUs\000"
 5513      6C617955 
 5513      7300
 5514              	.LASF13:
 5515 018d 646F7562 		.ascii	"double\000"
 5515      6C6500
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 154


 5516              	.LASF60:
 5517 0194 73686966 		.ascii	"shift\000"
 5517      7400
 5518              	.LASF35:
 5519 019a 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5519      734C7664 
 5519      436C6561 
 5519      72496E74 
 5519      65727275 
 5520              	.LASF11:
 5521 01b1 75696E74 		.ascii	"uint32\000"
 5521      333200
 5522              	.LASF32:
 5523 01b8 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5523      73436C6B 
 5523      45636F52 
 5523      65616453 
 5523      74617475 
 5524              	.LASF44:
 5525 01ce 6E756D62 		.ascii	"number\000"
 5525      657200
 5526              	.LASF42:
 5527 01d5 6D61736B 		.ascii	"mask\000"
 5527      00
 5528              	.LASF31:
 5529 01da 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5529      73436C6B 
 5529      47657453 
 5529      7973636C 
 5529      6B536F75 
 5530              	.LASF62:
 5531 01f2 4379496E 		.ascii	"CyIntGetPriority\000"
 5531      74476574 
 5531      5072696F 
 5531      72697479 
 5531      00
 5532              	.LASF111:
 5533 0203 63796465 		.ascii	"cydelay32kMs\000"
 5533      6C617933 
 5533      326B4D73 
 5533      00
 5534              	.LASF92:
 5535 0210 43795379 		.ascii	"CySysTickInit\000"
 5535      73546963 
 5535      6B496E69 
 5535      7400
 5536              	.LASF61:
 5537 021e 76616C75 		.ascii	"value\000"
 5537      6500
 5538              	.LASF89:
 5539 0224 636C6F63 		.ascii	"clockSource\000"
 5539      6B536F75 
 5539      72636500 
 5540              	.LASF98:
 5541 0230 43794765 		.ascii	"CyGetUniqueId\000"
 5541      74556E69 
 5541      71756549 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 155


 5541      6400
 5542              	.LASF90:
 5543 023e 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5543      73546963 
 5543      6B476574 
 5543      436F756E 
 5543      74466C61 
 5544              	.LASF8:
 5545 0254 756E7369 		.ascii	"unsigned int\000"
 5545      676E6564 
 5545      20696E74 
 5545      00
 5546              	.LASF91:
 5547 0261 43795379 		.ascii	"CySysTickClear\000"
 5547      73546963 
 5547      6B436C65 
 5547      617200
 5548              	.LASF5:
 5549 0270 6C6F6E67 		.ascii	"long unsigned int\000"
 5549      20756E73 
 5549      69676E65 
 5549      6420696E 
 5549      7400
 5550              	.LASF85:
 5551 0282 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5551      734C7664 
 5551      47657449 
 5551      6E746572 
 5551      72757074 
 5552              	.LASF22:
 5553 029d 43795379 		.ascii	"CySysClkImoStop\000"
 5553      73436C6B 
 5553      496D6F53 
 5553      746F7000 
 5554              	.LASF118:
 5555 02ad 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5555      74657243 
 5555      72697469 
 5555      63616C53 
 5555      65637469 
 5556              	.LASF47:
 5557 02c4 4379496E 		.ascii	"CyIntSetPending\000"
 5557      74536574 
 5557      50656E64 
 5557      696E6700 
 5558              	.LASF36:
 5559 02d4 43795379 		.ascii	"CySysGetResetReason\000"
 5559      73476574 
 5559      52657365 
 5559      74526561 
 5559      736F6E00 
 5560              	.LASF3:
 5561 02e8 73686F72 		.ascii	"short unsigned int\000"
 5561      7420756E 
 5561      7369676E 
 5561      65642069 
 5561      6E7400
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 156


 5562              	.LASF102:
 5563 02fb 72656754 		.ascii	"regTmp\000"
 5563      6D7000
 5564              	.LASF88:
 5565 0302 43795379 		.ascii	"CySysTickSetClockSource\000"
 5565      73546963 
 5565      6B536574 
 5565      436C6F63 
 5565      6B536F75 
 5566              	.LASF56:
 5567 031a 4379496E 		.ascii	"CyIntSetVector\000"
 5567      74536574 
 5567      56656374 
 5567      6F7200
 5568              	.LASF115:
 5569 0329 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 5569      6E657261 
 5569      7465645F 
 5569      536F7572 
 5569      63655C50 
 5570              	.LASF59:
 5571 034a 7072696F 		.ascii	"priority\000"
 5571      72697479 
 5571      00
 5572              	.LASF68:
 5573 0353 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5573      73436C6B 
 5573      57726974 
 5573      65496D6F 
 5573      46726571 
 5574              	.LASF103:
 5575 0368 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5575      73536574 
 5575      466C6173 
 5575      68416363 
 5575      65737341 
 5576              	.LASF51:
 5577 0387 4379496E 		.ascii	"CyIntSetSysVector\000"
 5577      74536574 
 5577      53797356 
 5577      6563746F 
 5577      7200
 5578              	.LASF17:
 5579 0399 72656733 		.ascii	"reg32\000"
 5579      3200
 5580              	.LASF93:
 5581 039f 43795379 		.ascii	"CySysTickStart\000"
 5581      73546963 
 5581      6B537461 
 5581      727400
 5582              	.LASF38:
 5583 03ae 72657475 		.ascii	"returnStatus\000"
 5583      726E5374 
 5583      61747573 
 5583      00
 5584              	.LASF101:
 5585 03bb 736F7572 		.ascii	"source\000"
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 157


 5585      636500
 5586              	.LASF19:
 5587 03c2 73697A65 		.ascii	"sizetype\000"
 5587      74797065 
 5587      00
 5588              	.LASF105:
 5589 03cb 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5589      73536574 
 5589      50657269 
 5589      70686572 
 5589      616C4163 
 5590              	.LASF48:
 5591 03ef 4379496E 		.ascii	"CyIntClearPending\000"
 5591      74436C65 
 5591      61725065 
 5591      6E64696E 
 5591      6700
 5592              	.LASF52:
 5593 0401 61646472 		.ascii	"address\000"
 5593      65737300 
 5594              	.LASF71:
 5595 0409 62675472 		.ascii	"bgTrim5\000"
 5595      696D3500 
 5596              	.LASF25:
 5597 0411 73797363 		.ascii	"sysclkSource\000"
 5597      6C6B536F 
 5597      75726365 
 5597      00
 5598              	.LASF95:
 5599 041e 66756E63 		.ascii	"function\000"
 5599      74696F6E 
 5599      00
 5600              	.LASF113:
 5601 0427 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5601      6F467265 
 5601      714D687A 
 5601      32526567 
 5601      00
 5602              	.LASF87:
 5603 0438 43795379 		.ascii	"CySysTickGetValue\000"
 5603      73546963 
 5603      6B476574 
 5603      56616C75 
 5603      6500
 5604              	.LASF114:
 5605 044a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5605      4320342E 
 5605      392E3320 
 5605      32303135 
 5605      30333033 
 5606 047d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5606      20726576 
 5606      6973696F 
 5606      6E203232 
 5606      31323230 
 5607 04b0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5607      66756E63 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 158


 5607      74696F6E 
 5607      2D736563 
 5607      74696F6E 
 5608              	.LASF108:
 5609 04d8 63796465 		.ascii	"cydelayFreqHz\000"
 5609      6C617946 
 5609      72657148 
 5609      7A00
 5610              	.LASF58:
 5611 04e6 4379496E 		.ascii	"CyIntSetPriority\000"
 5611      74536574 
 5611      5072696F 
 5611      72697479 
 5611      00
 5612              	.LASF12:
 5613 04f7 666C6F61 		.ascii	"float\000"
 5613      7400
 5614              	.LASF119:
 5615 04fd 43794578 		.ascii	"CyExitCriticalSection\000"
 5615      69744372 
 5615      69746963 
 5615      616C5365 
 5615      6374696F 
 5616              	.LASF77:
 5617 0513 43795379 		.ascii	"CySysLvdEnable\000"
 5617      734C7664 
 5617      456E6162 
 5617      6C6500
 5618              	.LASF20:
 5619 0522 63795379 		.ascii	"cySysTickCallback\000"
 5619      73546963 
 5619      6B43616C 
 5619      6C626163 
 5619      6B00
 5620              	.LASF57:
 5621 0534 4379496E 		.ascii	"CyIntGetVector\000"
 5621      74476574 
 5621      56656374 
 5621      6F7200
 5622              	.LASF65:
 5623 0543 6D696C6C 		.ascii	"milliseconds\000"
 5623      69736563 
 5623      6F6E6473 
 5623      00
 5624              	.LASF120:
 5625 0550 43794465 		.ascii	"CyDelayCycles\000"
 5625      6C617943 
 5625      79636C65 
 5625      7300
 5626              	.LASF16:
 5627 055e 72656738 		.ascii	"reg8\000"
 5627      00
 5628              	.LASF78:
 5629 0563 74687265 		.ascii	"threshold\000"
 5629      73686F6C 
 5629      6400
 5630              	.LASF49:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 159


 5631 056d 43794861 		.ascii	"CyHalt\000"
 5631      6C7400
 5632              	.LASF100:
 5633 0574 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5633      73536574 
 5633      52616D41 
 5633      63636573 
 5633      73417262 
 5634              	.LASF1:
 5635 0591 756E7369 		.ascii	"unsigned char\000"
 5635      676E6564 
 5635      20636861 
 5635      7200
 5636              	.LASF2:
 5637 059f 73686F72 		.ascii	"short int\000"
 5637      7420696E 
 5637      7400
 5638              	.LASF43:
 5639 05a9 4379496E 		.ascii	"CyIntEnable\000"
 5639      74456E61 
 5639      626C6500 
 5640              	.LASF55:
 5641 05b5 4379496E 		.ascii	"CyIntGetSysVector\000"
 5641      74476574 
 5641      53797356 
 5641      6563746F 
 5641      7200
 5642              	.LASF28:
 5643 05c7 636C6B53 		.ascii	"clkSelect\000"
 5643      656C6563 
 5643      7400
 5644              	.LASF75:
 5645 05d1 43795379 		.ascii	"CySysClkEcoStart\000"
 5645      73436C6B 
 5645      45636F53 
 5645      74617274 
 5645      00
 5646              	.LASF37:
 5647 05e2 72656173 		.ascii	"reason\000"
 5647      6F6E00
 5648              	.LASF14:
 5649 05e9 63686172 		.ascii	"char\000"
 5649      00
 5650              	.LASF18:
 5651 05ee 63796973 		.ascii	"cyisraddress\000"
 5651      72616464 
 5651      72657373 
 5651      00
 5652              	.LASF82:
 5653 05fb 43795379 		.ascii	"CySysTickEnable\000"
 5653      73546963 
 5653      6B456E61 
 5653      626C6500 
 5654              	.LASF27:
 5655 060b 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5655      73436C6B 
 5655      57726974 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 160


 5655      65537973 
 5655      636C6B44 
 5656              	.LASF94:
 5657 0622 43795379 		.ascii	"CySysTickSetCallback\000"
 5657      73546963 
 5657      6B536574 
 5657      43616C6C 
 5657      6261636B 
 5658              	.LASF107:
 5659 0637 43795379 		.ascii	"CySysTickCallbacks\000"
 5659      73546963 
 5659      6B43616C 
 5659      6C626163 
 5659      6B7300
 5660              	.LASF74:
 5661 064a 696D6F54 		.ascii	"imoTrim1Value\000"
 5661      72696D31 
 5661      56616C75 
 5661      6500
 5662              	.LASF99:
 5663 0658 756E6971 		.ascii	"uniqueId\000"
 5663      75654964 
 5663      00
 5664              	.LASF64:
 5665 0661 43794465 		.ascii	"CyDelay\000"
 5665      6C617900 
 5666              	.LASF83:
 5667 0669 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5667      73546963 
 5667      6B446973 
 5667      61626C65 
 5667      496E7465 
 5668              	.LASF34:
 5669 0683 43795379 		.ascii	"CySysLvdDisable\000"
 5669      734C7664 
 5669      44697361 
 5669      626C6500 
 5670              	.LASF110:
 5671 0693 63796465 		.ascii	"cydelayFreqMhz\000"
 5671      6C617946 
 5671      7265714D 
 5671      687A00
 5672              	.LASF30:
 5673 06a2 43795379 		.ascii	"CySysClkEcoStop\000"
 5673      73436C6B 
 5673      45636F53 
 5673      746F7000 
 5674              	.LASF104:
 5675 06b2 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5675      73536574 
 5675      446D6163 
 5675      41636365 
 5675      73734172 
 5676              	.LASF80:
 5677 06d0 43795379 		.ascii	"CySysTickStop\000"
 5677      73546963 
 5677      6B53746F 
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 161


 5677      7000
 5678              	.LASF76:
 5679 06de 74696D65 		.ascii	"timeoutUs\000"
 5679      6F757455 
 5679      7300
 5680              	.LASF29:
 5681 06e8 64697669 		.ascii	"divider\000"
 5681      64657200 
 5682              	.LASF50:
 5683 06f0 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5683      73436C6B 
 5683      57726974 
 5683      6545636F 
 5683      44697600 
 5684              	.LASF116:
 5685 0704 433A5C55 		.ascii	"C:\\Users\\mlgjmoor\\Documents\\PSoC Creator\\Nodus"
 5685      73657273 
 5685      5C6D6C67 
 5685      6A6D6F6F 
 5685      725C446F 
 5686 0732 435C6E6F 		.ascii	"C\\nodusC.cydsn\000"
 5686      64757343 
 5686      2E637964 
 5686      736E00
 5687              	.LASF21:
 5688 0741 43795379 		.ascii	"CySysClkImoStart\000"
 5688      73436C6B 
 5688      496D6F53 
 5688      74617274 
 5688      00
 5689              	.LASF72:
 5690 0752 6E657749 		.ascii	"newImoTrim2Value\000"
 5690      6D6F5472 
 5690      696D3256 
 5690      616C7565 
 5690      00
 5691              	.LASF67:
 5692 0763 6D696372 		.ascii	"microseconds\000"
 5692      6F736563 
 5692      6F6E6473 
 5692      00
 5693              	.LASF24:
 5694 0770 746D7052 		.ascii	"tmpReg\000"
 5694      656700
 5695              	.LASF84:
 5696 0777 43795379 		.ascii	"CySysTickSetReload\000"
 5696      73546963 
 5696      6B536574 
 5696      52656C6F 
 5696      616400
 5697              	.LASF117:
 5698 078a 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5698      73546963 
 5698      6B536572 
 5698      76696365 
 5698      43616C6C 
 5699              	.LASF33:
ARM GAS  C:\Users\mlgjmoor\AppData\Local\Temp\ccGd4NYq.s 			page 162


 5700 07a4 72657475 		.ascii	"returnValue\000"
 5700      726E5661 
 5700      6C756500 
 5701              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
